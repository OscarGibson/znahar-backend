{"version":3,"sources":["components/ActionButton.tsx","components/SearchFormHome.tsx","components/BigSearchBlock.tsx","constants/index.ts","components/PromotionItem.tsx","components/PromotionsSmallList.tsx","components/PromotionBigItem.tsx","components/PromotionsSmallBox.tsx","components/NewsItem.tsx","components/NewsList.tsx","components/NewsBlock.tsx","components/SubscribeForm.tsx","components/SubscribeBlock.tsx","components/MainMenuBig.tsx","actions/types/index.ts","actions/index.ts","pages/Home.tsx","redusers/initState/index.ts","components/SearchListItem.tsx","components/SearchList.tsx","components/SearchForm.tsx","components/SearchBlock.tsx","components/MainMenuSimple.tsx","components/InfoLayer.tsx","pages/Search.tsx","components/TopNavBar.tsx","components/BottomFooterBlock.tsx","components/FooterMenu.tsx","components/FooterContacts.tsx","components/FooterSocial.tsx","components/FooterBackForm.tsx","components/FooterBlock.tsx","pages/NotFoundPage.tsx","components/Breadcrumbp.tsx","pages/Profile.tsx","pages/Register.tsx","pages/Login.tsx","pages/ForClients.tsx","pages/News.tsx","pages/NewsPost.tsx","pages/Promotions.tsx","App.tsx","serviceWorker.ts","redusers/index.ts","store/index.ts","index.tsx","lib/env.ts"],"names":["connect","iconName","iconSvgSrc","text","classList","action","classes","join","className","onClick","src","alt","renderIcon","SearchFormHome","props","state","selectedFilter","undefined","handleSearchSubmit","bind","handleSearchFieldChange","handleFilterChange","event","preventDefault","this","searchInput","setState","target","value","warehouses","type","id","aria-label","onChange","placeholder","selected","map","warehouse","index","key","uuid","name","React","Component","reducer","DefaultReducer","HomeReducer","bigSearchBlockState","searchFormState","searchKey","selectedFiler","window","location","href","BigSearchBlock","IMAGES_BACKEND","GET_PRODUCTS_URL","REGISTER_USER","ORDERS_URL","LOGIN_URL","GET_USER_URL","GET_PROMOTIONS_URL","GET_NEWS_URL","GET_SETTINGS_URL","PromotionItem","redirectToSearch","title","image","description","price","discount_price","discount","PromotionsSmallList","items","item","promotionsSmallBoxState","promotionsSmallList","PromotionBigItem","PromotionsSmallBox","promotionsBigList","content_short","date","slice","NewsList","NewsBlock","newList","flexibleInfoList","SubscribeForm","handleSubmit","_e","subscribeForm","logoUrl","data-toggle","data-target","aria-controls","aria-expanded","isItemActive","to","url","addSpanForSR","INIT_PRODUCTS_SEARCH","SET_PRODUCTS_SEARCH","SET_PRODUCTS_SEARCH_SUCCESS","SET_PRODUCTS_SEARCH_FAIL","SET_PRODUCTS_FAKE","showInfoLayer","payload","setPromotions","setNews","HomePage","getPromotions","getNews","axios","get","then","response","status","data","promotions","promotions_big","catch","error","console","log","finally","mainMenuOriginState","newBlockState","subscribeBlockState","Home","dispatch","initCartState","productsRequestState","message","code","products","total","isRequestSended","isResponseRecieved","searchFormSubmitted","mainMenuSimpleState","footerBlockState","footerMenu","contactsList","socialList","link","backForm","cell","warehousesIdList","getWarehouseById","infoLayerState","active","timer","hideInfoLayer","userInitState","photoUrl","fname","lname","email","cartStateJsonStr","localStorage","getItem","cartState","JSON","parse","totalCount","totalPrice","totalPriceDiscount","topNavBarState","phonesNumbers","isUserAuth","userName","cartOrdersCount","setUserData","registerForm","password","changeRegisterFormField","cleanRegisterForm","loginForm","changeLoginFormField","cleanLoginForm","newsPage","newsList","newsPostPage","newsPost","content","setNewsPost","otherNews","promotionsPage","searchInitState","setProductsSuccess","getProductsRequestSended","homePageState","carouselState","activeIndex","profilePageState","userState","removeProductFromCart","plusProductToCart","minusProductFromCart","clearCart","setUserFullData","defaultState","settings","contact_cell_footer","contact_cell_top","facebook_link","instagram_link","youtube_link","contact_email","SearchListItemComponent","addToCart","warehouse_id","remain","addProductToCart","addItemTopCart","newProduct","photo_url","count","warehousesList","SearchListItem","SearchListComponent","isProductsLoaded","product","SearchList","other","a","b","SearchReducer","SearchFormComponent","handleSearchFormSubmit","handleSearch","search","params","URLSearchParams","SearchForm","SearchTableHeader","SearchBlock","rootReducer","animationIDuration","animationInDelay","animationOutDuration","setTimeout","animationIn","animationOut","isVisible","animationInDuration","SearchPage","offset","limit","filter_name","Search","renderAuth","checkUserData","accessToken","refreshToken","refreshCallBack","setUserDataAction","headers","Authorization","setItem","removeItem","getUserInfo","handleRefreshToken","phone","BottomFooterBlock","FooterBackForm","onSubmit","cols","rows","NotFoundPage","pages","length","page","renderLink","renderDivider","Profile","removeItemFromCart","createOrder","sendFinishMessage","warehousesError","warehouseId","itemId","orders","productItem","push","quantity","ordersLength","finalOrders","post","toFixed","ProfileReducer","Register","handleFieldChange","handleFormSubmit","registerUser","aria-describedby","RegisterReducer","Login","loginUser","access","refresh","LoginReducer","News","NewsReducer","NewsPost","getNewsPost","match","postId","NewsPostReducer","PromotionsPage","PromotionsReducer","AppTemplate","getSettings","setSettings","setWarehouses","path","exact","component","ForClients","Promotions","AppConnected","App","Boolean","hostname","extractCell","listOfCell","newState","combineReducers","newProducts","found","concat","newCartState","stringify","newForm","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","config","resolve","__dirname"],"mappings":"ySAqBeA,iBAVM,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,SAAUC,EAAwD,EAAxDA,WAAYC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OACrDC,EAAiB,CAAC,gBAAD,mBAAoBF,IAAWG,KAAK,KAC3D,OACI,yBAAKC,UAAWF,EAASG,QAASJ,GAVvB,SAACJ,EAAiBC,GACjC,OAAID,EACQ,uBAAGO,UAAS,UAAKP,EAAL,kBACpBC,EACQ,yBAAKQ,IAAKR,EAAYS,IAAI,UADtC,EAQSC,CAAWX,EAAUC,GACtB,8BAAOC,O,yjBCHnB,IAUMU,E,YAEF,WAAYC,EAAyBC,GAA0B,IAAD,8BAC1D,4CAAMD,EAAOC,KAERA,MAAL,KACOD,EADP,CAEIE,oBAAeC,IAGnB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,wBAA0B,EAAKA,wBAAwBD,KAA7B,gBAC/B,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAVgC,E,gFAc3CG,GACfA,EAAMC,iBADyD,MAEvBC,KAAKT,MAArCU,EAFuD,EAEvDA,YAAaT,EAF0C,EAE1CA,gBAErBX,EADmBmB,KAAKV,MAAhBT,QACDoB,EAAaT,GACpBQ,KAAKE,SAAS,CACVD,YAAY,O,8CAIIH,GACpBA,EAAMC,iBACNC,KAAKE,SAAS,CACVD,YAAaH,EAAMK,OAAOC,U,yCAIfN,GACfE,KAAKE,SAAS,CACVV,eAAgBM,EAAMK,OAAOC,U,+BAI3B,IACEH,EAAgBD,KAAKT,MAArBU,YACAI,EAAeL,KAAKV,MAApBe,WACR,OACI,yBAAKrB,UAAU,kBACX,yBAAKA,UAAU,kCACX,2BACIsB,KAAK,OACLC,GAAG,cACHH,MAAOH,EACPjB,UAAU,eACVwB,aAAW,sBACXC,SAAUT,KAAKJ,wBACfc,YAAY,mHAEhB,4BAAQ1B,UAAU,gBAAgBuB,GAAG,qBACjCC,aAAW,mCACXC,SAAUT,KAAKH,oBACf,4BAAQc,UAAQ,GAAhB,8EACCN,EAAWO,KAAI,SAACC,EAAWC,GACxB,OACI,4BAAQC,IAAG,0BAAqBD,GAASV,MAAOS,EAAUG,MAA1D,gBACSH,EAAUG,KADnB,YAC2BH,EAAUI,WAKjD,yBAAKjC,UAAU,sBACX,kBAAC,EAAD,CACIL,KAAK,uCACLC,UAAW,CAAC,kBACZC,OAAQmB,KAAKN,mBACbjB,SAAS,GACTC,WAAW,Y,GAxEVwC,IAAMC,WAiFpB3C,eA3FS,SAAC4C,GACrB,IAAMf,EAA0Be,EAAQC,eAAehB,WAMvD,OAJc,KADce,EAAQE,YAAYC,oBAAxCC,gBACM,CAEVnB,iBAsFO7B,CAAyBa,G,8NCnGxC,IASMR,EAAS,SAAC4C,EAAkBC,GAC9BC,OAAOC,SAASC,KAAhB,4BAA4CJ,EAA5C,2BAAwEC,IAGtEI,E,iLAEE,OACI,yBAAK9C,UAAU,kBACX,yBAAKA,UAAU,sBACX,8IACA,8YACA,kBAAC,EAAD,CAAgBH,OAAQA,U,GAPfqC,IAAMC,WAepB3C,eA5BS,SAAC4C,GAGrB,O,yVAAO,IAFyBA,EAAQE,YAAhCC,oBAER,CAEIlB,WAHmBe,EAAQC,eAAvBhB,eA0BG7B,CAAyBsD,GCf3BC,EAAc,UATR,IAWNC,EAAgB,UAXV,GAWU,qBAChBC,EAAa,UAZP,GAYO,sBACbC,EAAU,UAbJ,GAaI,mBACVC,EAAS,UAdH,GAcG,eAETC,GADiB,UAfX,GAeW,sBACL,UAhBN,GAgBM,uBACZC,EAAkB,UAjBZ,GAiBY,oBAClBC,EAAY,UAlBN,GAkBM,cACZC,EAAgB,UAnBV,GAmBU,qBCtBvBC,GDuByB,UApBZ,GAoBY,uB,YCtB3B,WAAYlD,EAAsBC,GAAuB,IAAD,8BACpD,4CAAMD,EAAOC,KAERkD,iBAAmB,EAAKA,iBAAiB9C,KAAtB,gBAH4B,E,8EAMvC+C,GACbf,OAAOC,SAASC,KAAhB,4BAA4Ca,K,+BAEtC,IAAD,SAQD1C,KAAKV,MANLqD,EAFC,EAEDA,MACAD,EAHC,EAGDA,MACAE,EAJC,EAIDA,YACAC,EALC,EAKDA,MACAC,EANC,EAMDA,eACAC,EAPC,EAODA,SAGJ,OACI,yBAAK9D,QAAS,WAAO,EAAKwD,iBAAiBC,IAAS1D,UAAU,iBAC1D,yBAAKA,UAAU,cACX,yBAAKE,IAAG,UAAK6C,GAAL,OAAsBY,GAASxD,IAAI,WAAWH,UAAU,UAChE,uBAAGA,UAAU,YAAb,IAA0B+D,EAA1B,MAEJ,wBAAI/D,UAAU,QAAQ0D,GACtB,wBAAI1D,UAAU,eAAe4D,GAC7B,yBAAK5D,UAAU,cACX,uBAAGA,UAAU,SAAS6D,GACtB,uBAAG7D,UAAU,iBAAiB8D,S,GA9BtB5B,IAAMC,YAsCnB3C,gBAAUgE,G,8NCjCzB,IAOMQ,E,iLACQ,IACEC,EAAUjD,KAAKV,MAAf2D,MACR,OACI,yBAAKjE,UAAU,uBACViE,EAAMrC,KAAK,SAACsC,EAAMpC,GACf,OACI,kBAAC,EAAD,eAAeC,IAAKD,GAAWoC,OAGvC,kBAAC,EAAD,CACIvE,KAAM,mIACNE,OAAQ,WAAO8C,OAAOC,SAASC,KAAO,eACtCpD,SAAS,GACTC,WAAW,GACXE,UAAW,CAAC,yB,GAfEsC,IAAMC,WAuBzB3C,eA9BS,SAAC4C,GAErB,O,yVAAO,IADyBA,EAAQE,YAAY6B,wBAA5CC,uBA6BG5E,CAAyBwE,GC3BlCK,E,iLACQ,IACEJ,EAAUjD,KAAKV,MAAf2D,MAER,OACI,yBAAKjE,UAAU,oBACViE,EAAMrC,KAAK,SAACsC,EAAMpC,GACf,OACI,yBAAKC,IAAKD,GACN,yBAAK9B,UAAU,gBACX,wBAAIA,UAAU,QAAQkE,EAAKR,OAC3B,wBAAI1D,UAAU,eAAekE,EAAKN,aAClC,kBAAC,EAAD,CACIjE,KAAM,yFACNF,SAAS,mBACTC,WAAW,GACXE,UAAW,CAAC,kBACZC,OAAQ,WArBnB,IAAC6D,IAqB0CQ,EAAKR,MApBrEf,OAAOC,SAASC,KAAhB,4BAA4Ca,OAuBpB,yBAAK1D,UAAU,cACX,yBAAKE,IAAG,UAAK6C,GAAL,OAAsBmB,EAAKP,OAASxD,IAAI,uB,GArBjD+B,IAAMC,WAiCtB3C,gBAAU6E,G,8NCzCzB,IAOMC,E,iLACQ,IAAD,EAC8CtD,KAAKV,MAAhD8D,EADH,EACGA,oBAAqBG,EADxB,EACwBA,kBAE7B,OACI,yBAAKvE,UAAU,yCACX,kBAAC,EAAD,CAAqBiE,MAAOG,IAC5B,kBAAC,EAAD,CAAkBH,MAAOM,S,GAPRrC,IAAMC,WAcxB3C,eArBS,SAAC4C,GAErB,O,yVAAO,IAD6BA,EAAQE,YAApC6B,2BAoBG3E,CAAyB8E,GCLzB9E,iBAjBE,SAAC,GAGD,IAFbmE,EAEY,EAFZA,MAAOD,EAEK,EAFLA,MACPc,EACY,EADZA,cAAeC,EACH,EADGA,KAEf,OACI,yBAAKzE,UAAU,YACX,yBAAKA,UAAU,QAAQE,IAAKyD,EAAOxD,IAAI,aACvC,wBAAIH,UAAU,SAAS0D,GACvB,uBAAG1D,UAAU,eAAewE,EAAcE,MAAM,EAAG,IAAnD,OACA,yBAAK1E,UAAU,eACX,uBAAGA,UAAU,QAAQyE,QCN/BE,E,iLACQ,IACEV,EAAUjD,KAAKV,MAAf2D,MAER,OACI,yBAAKjE,UAAU,+BACX,wBAAIA,UAAU,SAAd,+FACA,yBAAKA,UAAU,YACf,yBAAKA,UAAU,aACViE,EAAMrC,KAAK,SAACsC,EAAMpC,GACf,OACI,kBAAC,EAAD,eAAUC,IAAKD,GAAWoC,QAItC,mC,GAfOhC,IAAMC,WAuBd3C,gBAAUmF,GC1BnBC,E,iLACQ,IAAD,EACiC5D,KAAKV,MAAnCuE,EADH,EACGA,QADH,EACYC,iBAEjB,OACI,yBAAK9E,UAAU,aAEX,kBAAC,EAAD,CAAUiE,MAAOY,S,GAPT3C,IAAMC,WAcf3C,gBAAUoF,GCfnBG,E,YAEF,WAAYzE,EAAsBC,GAAuB,IAAD,8BACpD,4CAAMD,EAAOC,KAERyE,aAAe,EAAKA,aAAarE,KAAlB,gBAHgC,E,0EAM3CsE,GAAgC,IAAD,EACdjE,KAAKV,OAC/BT,EAFwC,EAChCA,QADgC,EACxBuB,S,+BAIV,IACEA,EAAUJ,KAAKV,MAAfc,MACR,OACI,yBAAKpB,UAAU,iBACX,yBAAKA,UAAU,eACX,2BACIsB,KAAK,OACLC,GAAG,cACHH,MAAOA,EACPpB,UAAU,qBACVwB,aAAW,sBAEXE,YAAY,6BAEhB,yBAAK1B,UAAU,sBACX,kBAAC,EAAD,CACIL,KAAM,qEACNC,UAAW,CAAC,iBAAkB,UAC9BC,OAAQ,aACRJ,SAAU,GACVC,WAAW,Y,GAjCXwC,IAAMC,WA0CnB3C,gBAAUuF,GChCVvF,iBAVQ,SAAC,GAA2D,IAAzDkE,EAAwD,EAAxDA,MAAOE,EAAiD,EAAjDA,YAAasB,EAAoC,EAApCA,cAC1C,OACI,yBAAKlF,UAAU,kBACX,wBAAIA,UAAU,SAAS0D,GACvB,wBAAI1D,UAAU,eAAe4D,GAC7B,kBAAC,EAAkBsB,O,SC0ChB1F,kBAnCK,SAAC,GAAoC,IAAnCyE,EAAkC,EAAlCA,MAAOkB,EAA2B,EAA3BA,QACzB,OACI,yBAAKnF,UAAU,eACX,yBAAKA,UAAU,QACX,uBAAGA,UAAU,eAAe6C,KAAK,KAC7B,yBAAK3C,IAAKiF,EAAShF,IAAI,WAG/B,yBAAKH,UAAU,YACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wCACX,4BAAQA,UAAU,iBAAiBsB,KAAK,SAAS8D,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQ/D,aAAW,qBACxJ,0BAAMxB,UAAU,yBAEpB,yBAAKA,UAAU,kDAAkDuB,GAAG,aAChE,wBAAIvB,UAAU,kBACbiE,EAAMrC,KAAK,SAACsC,EAAMpC,GACf,OACI,wBAAIC,IAAKD,EAAO9B,WA9B5BwF,GA8BsD,EA7BnEA,EAAe,kBAAmB,aA8BL,kBAAC,KAAD,CAAMxF,UAAU,WAAWyF,GAAIvB,EAAKwB,KAC/BxB,EAAKjC,KA5B7B,SAACuD,GAClB,GAAIA,EACA,OACI,0BAAMxF,UAAU,WAAhB,aA0BiC2F,EAAa,KAjCnC,IAACH,cCLXI,GAAuB,uBACvBC,GAAsB,sBACtBC,GAA8B,8BAC9BC,GAA2B,2BAE3BC,GAAoB,oBC2C1B,IAAMC,GAAgB,SAACC,GAC5B,MAAO,CAAE5E,KD3CoB,kBC2CE4E,YAuDpBC,GAAgB,SAACD,GAC5B,MAAO,CAAE5E,KDxEmB,iBCwEE4E,YAGnBE,GAAU,SAACF,GACtB,MAAO,CAAE5E,KD3Ea,WC2EE4E,Y,+NCjG1B,IAgBMG,G,YACF,WAAY/F,EAAiBC,GAAkB,IAAD,8BAC1C,4CAAMD,EAAOC,KAER+F,cAAgB,EAAKA,cAAc3F,KAAnB,gBACrB,EAAK4F,QAAU,EAAKA,QAAQ5F,KAAb,gBAEf,EAAK4F,UACL,EAAKD,gBAPqC,E,0HAc7B,IACLH,EAAkBnF,KAAKV,MAAvB6F,cACRK,IAAMC,IAAIpD,EAAoB,IAC7BqD,MAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAAgB,CAAC,IAAD,EACcD,EAASE,KAAxCC,EADiB,EACjBA,WAAYC,EADK,EACLA,eACpBZ,EAAc,CAACW,aAAYC,uBAGlCC,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,iB,gCAIF,IACChB,EAAYpF,KAAKV,MAAjB8F,QACRI,IAAMC,IAAInD,EAAc,IACvBoD,MAAK,SAACC,GACqB,MAApBA,EAASC,QACTR,EAAQO,EAASE,SAGxBG,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,iB,+BAIH,IAAD,EAMDpG,KAAKV,MAJL+G,EAFC,EAEDA,oBACAlD,EAHC,EAGDA,wBACAmD,EAJC,EAIDA,cACAC,EALC,EAKDA,oBAEJ,OACI,yBAAKvH,UAAU,YACX,kBAAC,GAAgBqH,GACjB,kBAAC,EAAD,MACA,kBAAC,EAAuBlD,GACxB,kBAAC,EAAcmD,GACf,kBAAC,EAAmBC,Q,GA3DbrF,IAAMC,WAmEdqF,GAFFhI,aA1EW,SAAC4C,GAA2B,IACxCE,EAAgBF,EAAhBE,YACmBA,EAAnBQ,eACeV,EAAQC,eAAvBhB,WACR,O,2VAAO,IACAiB,MAZgB,SAACmF,GACxB,MAAO,CACHtB,cAAe,SAACD,GAAiBuB,EAAStB,GAAcD,KACxDE,QAAS,SAACF,GAAiBuB,EAASrB,GAAQF,QA8EvC1G,CAA6C6G,I,6jBCvDnD,IAiSHqB,GA/RSC,GAA2C,CACpDC,QAAQ,GACRX,MAAM,GACNY,KAAK,EACLC,SANmC,GAOnCC,MAAM,EACNC,iBAAgB,EAChBC,oBAAmB,GAGVzF,GAA8B,CACvCvB,YAAa,GACbiH,qBAAoB,EAIpB7G,WAAW,IAGF8G,GAAoC,CAC7ChD,QAAQ,0BACRlB,MAAM,CAAC,CACHhC,KAAK,6CACLyD,IAAI,KACN,CACEzD,KAAK,iCACLyD,IAAI,eACN,CACEzD,KAAK,8FACLyD,IAAI,QACN,CACEzD,KAAK,uCACLyD,IAAI,SACN,CACEzD,KAAK,mDACLyD,IAAI,eAKC2B,GAAiC,MACvCc,IAGM5F,GAAsC,CAC/CC,gBAAgBA,GAChBnB,WAAW,IA+DFkG,GAAsC,CAC/C7D,MAAM,yHACNE,YAAY,ySACZsB,cARwC,CACxC9D,MAAM,GACNvB,OAAO,SAACuB,OA6DCgH,GAAgC,CACzCC,WArDoC,CACpClD,QAAQ,0BACRlB,MAAM,CAAC,CACHhC,KAAK,2GACLyD,IAAI,WACN,CACEzD,KAAK,iCACLyD,IAAI,eACN,CACEzD,KAAK,8FACLyD,IAAI,gBACN,CACEzD,KAAK,wFACLyD,IAAI,QACN,CACEzD,KAAK,uCACLyD,IAAI,SACN,CACEzD,KAAK,gEACLyD,IAAI,cAmCR4C,aA9BsC,CACtC5E,MAAM,sHACNO,MAAM,IA6BNsE,WAzBkC,CAClC7E,MAAM,mFACNO,MAAM,CAAC,CACHxE,SAAS,WACT+I,KAAK,wBACP,CACE/I,SAAS,YACT+I,KAAK,yBACP,CACE/I,SAAS,UACT+I,KAAK,yBAgBTC,SAZoC,CACpC/E,MAAM,yIACNzB,KAAK,GACLyG,KAAK,GACLd,QAAQ,GACR/H,OAAO,eAsFL8I,GAAwC,CAC1C,EAAI,EACJ,EAAI,EACJ,EAAI,EACJ,EAAI,EACJ,EAAI,EACJ,EAAI,EACJ,EAAI,EACJ,EAAI,EACJ,EAAI,EACJ,GAAK,EACL,GAAK,GACL,GAAK,IAGIC,GAAmB,SAACrH,EAAWF,GAExC,OADA6F,QAAQC,IAAI,mBAAoB5F,EAAIF,GAC7BA,EAAWsH,GAAiBpH,KAG1BsH,GAA4B,CACrClJ,KAAK,2YACLmJ,QAAO,EACPC,MAAM,EACN9C,cAAe,SAACC,KAChB8C,cAAe,cAGNC,GAAsB,CAC/B1H,IAAI,EACJ2H,SAAS,GACTC,MAAM,GACNC,MAAM,GACNC,MAAM,GACNX,KAAK,IAKHY,GAAmBC,aAAaC,QAAQ,QAYjCC,GAAe,MAVxB/B,GADA4B,GACgBI,KAAKC,MAAML,IAEX,CACZxB,SAAS,GACT8B,WAAW,EACXC,WAAW,EACXC,mBAAmB,IAQdC,GAAiC,CAC1CC,cAAc,GACdC,YAAW,EACXC,SAAS,GACTC,gBAAgBzC,GAAckC,WAC9BQ,YAAY,SAAClE,MAGJmE,GAA6B,CACtCpI,KAAK,GACLoH,MAAM,GACNX,KAAK,GACL4B,SAAS,GACTC,wBAAwB,SAACrE,KACzBsE,kBAAkB,cAGTC,GAAuB,CAChCpB,MAAM,GACNiB,SAAS,GACTI,qBAAqB,SAACxE,KACtByE,eAAe,cAINC,GAAqB,CAC9BC,SAAS,GACT/D,WAAW,GACXX,cAAc,SAACD,KACfE,QAAQ,SAACF,MAGA4E,GAA6B,CACtCC,SAAS,CACLxJ,IAAI,EACJmC,MAAM,GACNsH,QAAQ,GACRvG,KAAM,GACNd,MAAM,IAEVmD,WAAW,GACXX,cAAc,SAACD,KACf+E,YAAY,SAAC/E,KACbE,QAAQ,SAACF,KACTgF,UAAU,IAGDC,GAAiC,CAC1CrE,WAAW,GACXC,eAAe,GACfZ,cAAc,SAACD,MAQNkF,GAA+B,CACxCzD,qBAAsBA,GACtBnF,gBAAiBA,GACjBuH,eAAgBA,GAChB5B,oBAAqBA,GACrBkD,mBAAmB,SAACvD,KACpBwD,yBAAyB,aACzBzC,eAAeA,GACfY,UAAUA,IAGD8B,GAA0B,CACnCxB,eAAgBA,GAChBxH,oBAAqBA,GACrB8E,oBAAqBA,GACrBlD,wBAtTuD,CACvDC,oBAAoB,GACpBG,kBAAkB,IAqTlB+C,cA7SoC,CACpCzC,QAAQ,GACRC,iBAAiB,IA4SjB0G,cAzSwC,CACxC9H,MAAO,6HACPO,MAAO,CAAC,CACJiF,SAAU,oHACVxF,MAAO,oGACPE,YAAa,0LACboH,QAAS,82BACX,CACE9B,SAAU,oHACVxF,MAAO,oGACPE,YAAa,0LACboH,QAAS,82BACX,CACE9B,SAAU,oHACVxF,MAAO,oGACPE,YAAa,0LACboH,QAAS,+2BAEbS,YAAa,GAwRblE,oBAAqBA,GACrBa,iBAAkBA,GAClBjC,cAAc,SAACD,KACfE,QAAQ,SAACF,MAGAwF,GAAgC,CACzC3B,eAAgBA,GAChB5B,oBAAqBA,GACrBwD,UAAU1C,GACVQ,UAAUA,GACVZ,eAAeA,GACf+C,sBAAsB,SAAC1F,KACvB2F,kBAAkB,SAAC3F,KACnB4F,qBAAqB,SAAC5F,KACtBD,cAAc,SAACC,KACf6F,UAAU,aACVC,gBAAgB,SAAC9F,KACjB7E,WAAW,IAGF4K,GAAwB,CACjCpD,eAAeA,GACfkB,eAAeA,GACfmC,SAAS,CACL3K,GAAG,EACH4K,oBAAoB,GACpBC,iBAAiB,GACjBC,cAAc,GACdC,eAAe,GACfC,aAAa,GACbC,cAAc,IAElBnL,WAAW,GACX+G,iBAAiBA,ICxZfqE,G,YAEF,WAAYnM,EAA2BC,GAA4B,IAAD,8BAC9D,4CAAMD,EAAOC,KAERmM,UAAY,EAAKA,UAAU/L,KAAf,gBAH6C,E,yEAMrD,IAAD,EAaJK,KAAKV,MAXLiB,EAFI,EAEJA,GACAO,EAHI,EAGJA,MACAG,EAJI,EAIJA,KACA0K,EALI,EAKJA,aACAzD,EANI,EAMJA,SACArF,EAPI,EAOJA,MACAE,EARI,EAQJA,SACA6I,EATI,EASJA,OACA3G,EAVI,EAUJA,cACA4G,EAXI,EAWJA,iBACAC,EAZI,EAYJA,eAEJ7G,EAAc,CACVtG,KAAK,GAAD,OAAIsC,EAAJ,mMACJ8G,MAAM,IAEV,IAAMgE,EAA0B,CAC5BxL,KAAIO,QAAOG,OAAM0K,eACjBK,UAAU9D,EACVnF,WAAU6I,SAAQ/I,QAClBoJ,MAAM,GAEVJ,EAAiBE,GACjBD,EAAeC,EAAWE,S,+BAGpB,IAAD,EAIDjM,KAAKV,MAFLiB,EAFC,EAEDA,GAAWU,GAFV,EAEGH,MAFH,EAEUG,MAAM0K,EAFhB,EAEgBA,aAAwB9I,GAFxC,EAE8BqF,SAF9B,EAEwCrF,OAC/B+I,GAHT,EAGD7I,SAHC,EAGS6I,QAAQM,EAHjB,EAGiBA,eAEhBrL,EAAY+G,GAAiB+D,EAAcO,GACjD,OACI,wBAAInL,IAAKR,GACL,4BAAKU,GACL,uCAASJ,EAAUG,KAAnB,YAA2BH,EAAUI,OACrC,4BAAK4B,GACL,4BAAK+I,GACL,4BACI,kBAAC,EAAD,CACIjN,KAAM,qEACNF,SAAS,GACTC,WAAW,GACXE,UAAW,CAAC,aACZC,OAAQmB,KAAK0L,kB,GAtDCxK,IAAMC,WAgE7BgL,GAFQ3N,YAAQ,MAtEJ,SAACiI,GACxB,MAAO,CACHxB,cAAe,SAACC,GAAwBuB,EAASxB,GAAcC,KAC/D2G,iBAAkB,SAAC3G,GAA0BuB,EHcrB,SAACvB,GAC/B,MAAO,CAAE5E,KDhDwB,sBCgDE4E,WGfyB2G,CAAiB3G,KACvE4G,eAAgB,SAAC5G,GAAoBuB,EHiCf,SAACvB,GAC7B,MAAO,CAAE5E,KD1DsB,oBC0DE4E,WGlCmB4G,CAAe5G,QAkE9C1G,CAAkCiN,IC9EnDW,G,iLAEQ,IAAD,EAGDpM,KAAKV,MADLwH,EAFC,EAEDA,SAAUuF,EAFT,EAESA,iBAAkBH,EAF3B,EAE2BA,eAGhC,OAAIG,EAEI,+BACKvF,EAASlG,KAAI,SAAC0L,EAA6BxL,GACxC,OACI,kBAAC,GAAD,CACIC,IAAKD,EACLP,GAAI+L,EAAQ/L,GACZO,MAAOA,EACPG,KAAMqL,EAAQrL,KACd0K,aAAcW,EAAQX,aACtBzD,SAAUoE,EAAQpE,SAClBrF,MAAOyJ,EAAQzJ,MACfE,SAAUuJ,EAAQvJ,SAClB6I,OAAQU,EAAQV,OAChBM,eAAgBA,QAQhC,8C,GA9BkBhL,IAAMC,WAqCzBoL,GAFI/N,aA/CK,SAAC4C,EAAaoL,GAAe,IAJxCC,EAAUC,EAI6B,EAK5CtL,EAAQuL,cAAchG,qBAHtBG,EAF4C,EAE5CA,SACAE,EAH4C,EAG5CA,gBACAC,EAJ4C,EAI5CA,mBAGJ,MAAO,CACHH,WAAUuF,kBAZKK,EAU2BzF,KAVrCwF,EAUoBzF,KATX0F,IAAUD,GAAKC,OAkDlBlO,CAAyB4N,I,6jBC5D5C,IA4BMQ,G,YAEF,WAAYtN,EAAyBC,GAA0B,IAAD,uBAC1D,4CAAMD,EAAOC,KAERA,MAAL,MACOD,EADP,CAEIE,eAAe,+EAGnB,EAAKqN,uBAAyB,EAAKA,uBAAuBlN,KAA5B,gBAC9B,EAAKC,wBAA0B,EAAKA,wBAAwBD,KAA7B,gBAC/B,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAC1B,EAAKmN,aAAe,EAAKA,aAAanN,KAAlB,gBAEpB,IAAMoN,EAASpL,OAAOC,SAASmL,OACzBC,EAAS,IAAIC,gBAAgBF,GAC7B9M,EAAc+M,EAAOvH,IAAI,aACzBjG,EAAiBwN,EAAOvH,IAAI,kBAE1B5G,EAAW,EAAKS,MAAhBT,OAlBkD,OAmB1D,EAAKiO,aACe,OAAhB7M,EAAuB,GAAKA,EACT,OAAnBT,EAA0B,6EAAmBA,EAC7CX,GAtBsD,E,0EAyCjDoB,EAAoBT,EAAuBX,GACpDA,EAAOoB,EAAaT,K,6CAMDM,GACnBA,EAAMC,iBAD0D,MAExBC,KAAKT,MAArCU,EAFwD,EAExDA,YAAaT,EAF2C,EAE3CA,eACbX,EAAWmB,KAAKV,MAAhBT,OACRmB,KAAK8M,aAAa7M,EAAaT,EAAgBX,K,8CAG3BiB,GACpBA,EAAMC,iBACNC,KAAKE,SAAS,CACVD,YAAaH,EAAMK,OAAOC,U,yCAIfN,GACfE,KAAKE,SAAS,CACVV,eAAgBM,EAAMK,OAAOC,U,+BAI3B,IAAD,EAC+BJ,KAAKT,MAAjCU,EADH,EACGA,YAAaI,EADhB,EACgBA,WACrB,OACI,yBAAKrB,UAAU,cACX,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,SAAd,kCAEA,yBAAKA,UAAU,kCACX,2BACIsB,KAAK,OACLC,GAAG,cACHH,MAAOH,EACPjB,UAAU,eACVwB,aAAW,sBACXC,SAAUT,KAAKJ,wBACfc,YAAY,mHAEhB,4BAAQ1B,UAAU,gBAAgBuB,GAAG,qBACjCC,aAAW,mCACXC,SAAUT,KAAKH,oBAEf,4BAAQc,UAAQ,GAAhB,8EACCN,EAAWO,KAAI,SAACC,EAAWC,GACxB,OACI,4BAAQC,IAAG,oBAAeD,GAASV,MAAOS,EAAUG,MAApD,gBACSH,EAAUG,KADnB,YAC2BH,EAAUI,WAKjD,yBAAKjC,UAAU,sBACX,kBAAC,EAAD,CACIL,KAAK,uCACLC,UAAW,CAAC,kBACZC,OAAQmB,KAAK6M,uBACbpO,SAAS,GACTC,WAAW,a,GA1GTwC,IAAMC,WAsHzB+L,GAFI1O,aA5IK,SAAC4C,GAGrB,OAAO,MAFqBA,EAAQuL,cAA5BnL,gBAER,CAEInB,WAHmBe,EAAQC,eAAvBhB,eA0IO7B,CAAyBoO,ICrHtCO,GAAoB,WACtB,OACI,2BAAOnO,UAAU,cACb,4BACI,mGACA,oEACA,wDACA,sFACA,gCAUVoO,G,iLACQ,IALDX,EAAUC,EAKV,EAOD1M,KAAKV,MALLwH,EAFC,EAEDA,SACAE,EAHC,EAGDA,gBACAC,EAJC,EAIDA,mBACA6F,EALC,EAKDA,aACAZ,EANC,EAMDA,eAGEG,GAdSK,EAc+BzF,KAdzCwF,EAcwBzF,KAbf0F,IAAUD,GAAKC,IAe7B,OACI,yBAAK1N,UAAU,eACX,kBAAC,GAAD,CAAYH,OAAQiO,IACpB,2BAAO9N,UAAU,4BACb,kBAAC,GAAD,MACA,kBAAC,GAAD,CACI8H,SAAUA,EACVuF,iBAAkBA,EAClBH,eAAgBA,U,GApBdhL,IAAMC,WA6BjB3C,gBA5DS,SAAC4C,EAAaoL,GAAe,IACzCG,EAAkBvL,EAAlBuL,cACAtM,EAAee,EAAQC,eAAvBhB,WACAsG,EAA0CgG,EAA1ChG,qBAAsBnF,EAAoBmL,EAApBnL,gBACtBsF,EAAkDH,EAAlDG,SAAUE,EAAwCL,EAAxCK,gBAAiBC,EAAuBN,EAAvBM,mBAC3BC,EAAqC1F,EAArC0F,oBACR,MAAO,CACHJ,WAAUE,kBAAiBC,qBAC3BhH,YAHyCuB,EAAhBvB,YAGZiH,sBACbgF,eAAe7L,KAmDR7B,CAAyB4O,IC9BzB5O,kBAjCQ,SAAC,GAAoC,IAAnCyE,EAAkC,EAAlCA,MAAOkB,EAA2B,EAA3BA,QAC5B,OACI,yBAAKnF,UAAU,kBACX,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wCACX,uBAAGA,UAAU,eAAe6C,KAAK,KAC7B,yBAAK3C,IAAKiF,EAAShF,IAAI,UAE3B,4BAAQH,UAAU,iBAAiBsB,KAAK,SAAS8D,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQ/D,aAAW,qBACxJ,0BAAMxB,UAAU,yBAEpB,yBAAKA,UAAU,kDAAkDuB,GAAG,aAChE,wBAAIvB,UAAU,kBACbiE,EAAMrC,KAAK,SAACsC,EAAMpC,GACf,OACI,wBAAIC,IAAKD,EAAO9B,WA5B5BwF,GA4BsD,EA3BnEA,EAAe,kBAAmB,aA4BL,kBAAC,KAAD,CAAMxF,UAAU,WAAWyF,GAAIvB,EAAKwB,KAC/BxB,EAAKjC,KA1B7B,SAACuD,GAClB,GAAIA,EACA,OACI,0BAAMxF,UAAU,WAAhB,aAwBiC2F,EAAa,KA/BnC,IAACH,c,wOCExB,IAuDehG,gBAvDS,SAAC6O,EAA0B/N,GAE/C,O,2VAAO,IADoB+N,EAAnBxF,mBAMc,SAACpB,GACvB,MAAO,CACHxB,cAAe,SAACC,GAAD,OAAwBuB,EAASxB,GAAcC,KAC9D8C,cAAe,kBAAMvB,ERoCpB,CAAEnG,KD9CoB,kBC8CE4E,QAAQ,SQS1B1G,EAzCG,SAAC,GAAsD,IACjE8O,EACAC,EACAC,EAHY7O,EAAoD,EAApDA,KAAMoJ,EAA8C,EAA9CA,MAAOD,EAAuC,EAAvCA,OAAQE,EAA+B,EAA/BA,cAqBrC,OAjBIF,GAAoB,IAAVC,GACV0F,YAAY,WACRzF,MACQ,IAARD,EAAgB,KACpBuF,EAAqB,IACrBE,EAAuB,IACvBD,EAAmB,GACXzF,GAAoB,IAAVC,GAKlBuF,EAAqB,EACrBE,EAAuB,EACvBD,EAAmB,MANnBD,EAAqB,IACrBE,EAAuB,IACvBD,EAAmB,GAQnB,kBAAC,YAAD,CACIG,YAAY,SACZC,aAAa,UACbC,UAAW9F,EACX0F,qBAAsBA,EACtBK,oBAAqBP,EACrBC,iBAAkBA,GAElB,yBAAKvO,UAAU,aACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,SACX,uBAAGA,UAAU,QAAQL,U,6jBClC7C,IAeMmP,G,YAEF,WAAYxO,EAAoBC,GAAqB,IAAD,8BAChD,4CAAMD,EAAOC,KAERA,MAAL,MACOD,GAGP,EAAKwN,aAAe,EAAKA,aAAanN,KAAlB,gBAP4B,E,0EAgBvC8B,EAAkBkK,GAAsB,IAAD,EAI5C3L,KAAKV,MAFLgL,EAF4C,EAE5CA,yBACAD,EAH4C,EAG5CA,mBAEJC,IAEA,IAAI0C,EAA4B,CAC5Be,OAAO,EACPC,MAAM,GACNC,YAAYxM,GAGZuL,EAAM,WADW,+EAAjBrB,EACuB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAEjB,CAACA,GAE5BnG,IAAMC,IAAIzD,EAAkB,CACxBgL,WAEHtH,MAAK,SAACC,GACwB,MAAvBA,EAASE,KAAKgB,MACdwD,EAAmB1E,EAASE,SAGnCG,OAAM,SAACC,GACJC,QAAQC,IAAI,YAGfC,SAAQ,iB,+BAKH,IAAD,EAC6DpG,KAAKV,MAA/DqH,EADH,EACGA,qBAAsBnF,EADzB,EACyBA,gBAAiBqG,EAD1C,EAC0CA,eACvCf,EAAkDH,EAAlDG,SAAUE,EAAwCL,EAAxCK,gBAAiBC,EAAuBN,EAAvBM,mBAC3BC,EAAqC1F,EAArC0F,oBAAqBjH,EAAgBuB,EAAhBvB,YAE7B,OACI,yBAAKjB,UAAU,eACX,kBAAC,GAAoBmI,IACrB,kBAAC,GAAD,CACIL,SAAUA,EACVE,gBAAiBA,EACjBC,mBAAoBA,EACpBhH,YAAaA,EACbiH,oBAAqBA,EACrB4F,aAAc9M,KAAK8M,eAEvB,kBAAC,GAAcjF,Q,GApEN3G,IAAMC,WA4EhB+M,GAFA1P,aAlFS,SAAC4C,GAErB,OAAO,MADmBA,EAAlBuL,kBARe,SAAClG,GACxB,MAAO,CACH6D,yBAA0B,kBAAM7D,ETW/B,CAAEnG,KAAMuE,GAAqBK,QAAS,MSVvCmF,mBAAoB,SAACvD,GAAD,OAAkBL,ETavC,SAA4BK,GACjC,MAAO,CAAExG,KAAMwE,GAA6BI,QAAS4B,GSdAuD,CAAmBvD,QAsF3DtI,CAA6CsP,I,wOC7F5D,IA6CMK,GAAa,SAAClF,EAAoBC,GACpC,OAAID,GAZkBhI,EAaMiI,EAXxB,yBAAKlK,UAAU,aACX,8BACA,yBAAKA,UAAU,eACX,8BAAOiC,MAxBf,yBAAKjC,UAAU,aACX,kBAAC,EAAD,CACIL,KAAM,uCACNF,SAAS,GACTI,OAAQ,WAAO8C,OAAOC,SAASC,KAAK,UACpCjD,UAAW,CAAC,YACZF,WAAW,yBAEf,kBAAC,EAAD,CACIC,KAAM,6FACNF,SAAS,GACTI,OAAQ,WAAO8C,OAAOC,SAASC,KAAK,aACpCjD,UAAW,CAAC,YACZF,WAAW,0BAMF,IAACuC,GAoEpBmN,GAAgB,SAAChF,GACnB,IAAMF,EAAWX,aAAaC,QAAQ,YACtC,GAAKU,EAaDE,EAAYF,OAbD,CACX,IAAMmF,EAAc9F,aAAaC,QAAQ,eACnC8F,EAAe/F,aAAaC,QAAQ,gBAEtC6F,GAAeC,GArCP,SACZD,EACAC,EACAC,EACAC,GAEJhJ,IAAMC,IAAIrD,EAAc,CACpBqM,QAAS,CAACC,cAAe,UAAYL,KAExC3I,MAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAAgB,CAAC,IAAD,EACMD,EAASE,KAClCqD,GAFmB,EACjBf,MADiB,EACVC,MADU,EACHC,OAEtBE,aAAaoG,QAAQ,WAAYzF,GACjCsF,EAAkBtF,QACS,MAApBvD,EAASC,SAGhB2C,aAAaqG,WAAW,eACxBrG,aAAaqG,WAAW,gBACxBjN,OAAOC,SAASC,KAAO,aAG9BmE,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,eAYDyI,CACIR,EACAC,EACAQ,EACA1F,KAsCD5K,gBAjJS,SAAC4C,GAErB,O,2VAAO,IADoBA,EAAQC,eAA3B0H,mBAPe,SAACtC,GACxB,MAAO,CACH2C,YAAa,SAAClE,GAAoBuB,EV8Ef,SAACvB,GAC1B,MAAO,CAAE5E,KDnEkB,gBCmEE4E,WU/EoBkE,CAAYlE,QAqJhD1G,EA9BG,SAAC,GAAuF,IAAtFwK,EAAqF,EAArFA,cAAeC,EAAsE,EAAtEA,WAAYE,EAA0D,EAA1DA,gBAAiBC,EAAyC,EAAzCA,YAAaF,EAA4B,EAA5BA,SAEzE,OADAkF,GAAchF,GAEV,yBAAKpK,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,UACX,wHACCgK,EAAcpI,KAAI,SAACmO,EAAOjO,GACvB,OACI,0BAAM9B,UAAU,cAAc+B,IAAKD,GAAQiO,QAK3D,yBAAK/P,UAAU,+BACVmP,GAAWlF,EAAYC,GACxB,kBAAC,KAAD,CAAMzE,GAAG,YACL,kBAAC,EAAD,CACI9F,KAAI,6DAAgBwK,EAAhB,+CACJ1K,SAAS,GACTC,WAAW,yBACXG,OAAQ,aACRD,UAAW,CAAC,OAAQ,oBCjJ7BoQ,GARW,SAAC,GAAoC,IAAlCrQ,EAAiC,EAAjCA,KACzB,OACI,yBAAKK,UAAU,qBACX,0BAAMA,UAAU,aAAaL,KCkB1BH,kBArBI,SAAC,GAAsC,IAApCyE,EAAmC,EAAnCA,MAAOkB,EAA4B,EAA5BA,QACzB,OACI,yBAAKnF,UAAU,cACX,yBAAKA,UAAU,QACX,yBAAKE,IAAKiF,EAAShF,IAAI,UAE3B,wBAAIH,UAAU,wBACTiE,EAAMrC,KAAK,SAACsC,EAAMpC,GACf,OACI,wBAAIC,IAAKD,EAAO9B,UAAU,qBACtB,kBAAC,KAAD,CAAMA,UAAU,oBAAoByF,GAAIvB,EAAKwB,KACxCxB,EAAKjC,eCGvBzC,kBAfQ,SAAC,GAAoC,IAAlCyE,EAAiC,EAAjCA,MAAOP,EAA0B,EAA1BA,MAC7B,OACI,yBAAK1D,UAAU,kBACX,wBAAIA,UAAU,gBAAgB0D,GAC9B,wBAAI1D,UAAU,YACTiE,EAAMrC,KAAK,SAACsC,EAAMpC,GACf,OACI,wBAAIC,IAAKD,GAAQoC,WCU1B1E,kBAjBM,SAAC,GAAkC,IAAhCyE,EAA+B,EAA/BA,MAAOP,EAAwB,EAAxBA,MAC3B,OACI,yBAAK1D,UAAU,gBACX,wBAAIA,UAAU,gBAAgB0D,GAC9B,yBAAK1D,UAAU,UACViE,EAAMrC,KAAK,SAACsC,EAAMpC,GACf,OACI,uBAAGC,IAAKD,EAAOe,KAAMqB,EAAKsE,MACtB,yBAAKtI,IAAG,sBAAiBgE,EAAKzE,SAAtB,QAAsCU,IAAI,cCTxE8P,G,mOAMQ,IACEvM,EAAU1C,KAAKV,MAAfoD,MACR,OACI,yBAAK1D,UAAU,kBACX,wBAAIA,UAAU,gBACT0D,GAGL,0BAAM1D,UAAU,OAAOkQ,SAAUlP,KAAK6M,wBAElC,2BACIvM,KAAK,OACLtB,UAAU,kBACVuB,GAAG,eACHH,MAAM,GACNM,YAAY,sDAGhB,2BACIJ,KAAK,OACLtB,UAAU,kBACVuB,GAAG,eACHH,MAAM,GACNM,YAAY,+CAGhB,8BACIH,GAAG,kBACHH,MAAM,GACNa,KAAK,GACLkO,KAAM,GACNC,KAAM,EACN1O,YAAY,6EAGhB,4BAAQJ,KAAK,UAAb,gE,GAzCSY,IAAMC,WAgDpB3C,iBAAUyQ,I,+NC5CzB,IA2CezQ,gBA3CS,SAAC4C,GAErB,O,2VAAO,IADsBA,EAAQC,eAA7B+F,oBA0CG5I,EApCK,SAAC,GAED,IADhB6I,EACe,EADfA,WAAYC,EACG,EADHA,aAAcC,EACX,EADWA,WAAYE,EACvB,EADuBA,SAEtC,OACI,yBAAKzI,UAAU,kCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAeqI,IAEpB,yBAAKrI,UAAU,YACX,kBAAC,GAAmBsI,IASxB,yBAAKtI,UAAU,YACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAiBuI,IAEtB,yBAAKvI,UAAU,YACX,kBAAC,GAAmByI,WClC1C4H,G,iLACQ,IAEFhJ,EACArG,KAAKV,MADL+G,oBAEJ,OACI,yBAAKrH,UAAU,gBACX,kBAAC,GAAgBqH,GACjB,wBAAIrH,UAAU,QAAd,OACA,wBAAIA,UAAU,QAAd,qG,GATWkC,IAAMC,WAelB3C,iBAAU6Q,IC+BV7Q,kBAfK,SAAC,GAA0B,IAAzB8Q,EAAwB,EAAxBA,MACZC,EAASD,EAAMC,OACrB,OACI,uBAAGvQ,UAAU,eACRsQ,EAAM1O,KAAK,SAAC4O,EAAM1O,GACf,OACI,0BAAMC,IAAKD,GA9BZ,SAAC0O,GAChB,OAAIA,EAAK9K,IAED,kBAAC,KAAD,CAAMD,GAAI+K,EAAK9K,KAAM8K,EAAKvO,MAI1B,8BAAOuO,EAAKvO,MAwBCwO,CAAWD,GAnBd,SAAC1O,EAAcyO,GACjC,OAAIzO,IAAUyO,EAAS,EAEf,mCAIA,+BAY+BG,CAAc5O,EAAOyO,W,+NCdhE,IAiCMI,G,YACF,WAAYrQ,EAAoBC,GAAqB,IAAD,8BAChD,4CAAMD,EAAOC,KAERqQ,mBAAqB,EAAKA,mBAAmBjQ,KAAxB,gBAC1B,EAAKkQ,YAAc,EAAKA,YAAYlQ,KAAjB,gBACnB,EAAKmQ,kBAAoB,EAAKA,kBAAkBnQ,KAAvB,gBALuB,E,iFAQ/B,IAAD,OACV0O,EAAc9F,aAAaC,QAAQ,eACzChD,IAAMC,IAAIrD,EAAc,CACpBqM,QAAS,CAACC,cAAe,UAAYL,KAExC3I,MAAK,SAACC,GACqB,MAApBA,EAASC,SAEToF,EAD4B,EAAK1L,MAAzB0L,iBACQrF,EAASE,SAGhCG,OAAM,SAACC,GACJtE,OAAOC,SAASC,KAAO,YAE1BuE,SAAQ,iB,wCAKK2J,GAA2B,IAAD,EACF/P,KAAKV,MAAnC2F,EADgC,EAChCA,cAAe5E,EADiB,EACjBA,WACnB1B,EAAc,sRAElB,GAA+B,IAA3BoR,EAAgBR,OAChBtK,EAAc,CACVtG,KAAK,skBACLoJ,MAAM,QAEP,CACH,IAAIlH,EADD,uBAEH,YAAwBkP,EAAxB,+CAAyC,CAAC,IAAjCC,EAAgC,QACrCnP,EAAY+G,GAAiBoI,EAAa3P,GAC1C1B,GAAI,gBAAQqR,EAAR,YAAuBnP,EAAUI,OAJtC,kFAMHgE,EAAc,CACVtG,OACAoJ,MAAM,KAIdgD,EADsB/K,KAAKV,MAAnByL,e,yCAIOkF,IAEfrF,EADkC5K,KAAKV,MAA/BsL,uBACcqF,K,oCAGX,IAAD,OACFxH,EAAczI,KAAKV,MAAnBmJ,UAEJyH,EAAsC,GAHhC,uBAMV,YAAwBzH,EAAU3B,SAAlC,+CAA4C,CAAC,IAApCqJ,EAAmC,QACpCD,EAAOC,EAAYxE,eACnBuE,EAAOC,EAAYxE,cAAc7E,SAASsJ,KAAK,CAC3C7P,GAAG4P,EAAY5P,GACf8P,SAASF,EAAYlE,QAEzBqE,IAEAJ,EAAOC,EAAYxE,cAAgB,CAC/BA,aAAawE,EAAYxE,aACzB7E,SAAS,CAAC,CACNvG,GAAG4P,EAAY5P,GACf8P,SAASF,EAAYlE,SAG7BqE,IArBE,kFAyBV,IAAIC,EAA8B,GAElC,IAAK,IAAIP,KAAeE,EACpBK,EAAYH,KAAKF,EAAOF,IAG5B,IAAM3B,EAAc9F,aAAaC,QAAQ,eACjCvD,EAAkBjF,KAAKV,MAAvB2F,cAGRO,IAAMgL,KAAKtO,EAAY,CACnBgO,OAAOK,GACR,CACC9B,QAAS,CAACC,cAAe,UAAYL,KAExC3I,MAAK,SAACC,GACqB,MAApBA,EAASC,OACTX,EAAc,CACVtG,KAAK,skBACLoJ,MAAM,IAGV9C,EAAc,CACVtG,KAAK,kRACLoJ,MAAM,OAIjB/B,OAAM,SAACC,GACJhB,EAAc,CACVtG,KAAK,8UACLoJ,MAAM,OAGb3B,SAAQ,YAEL2E,EADsB,EAAKzL,MAAnByL,kB,+BAQN,IAIFlI,EA5IaqF,EAwIZ,SAC6ElI,KAAKV,MAA/E6H,EADH,EACGA,oBAAqBwD,EADxB,EACwBA,UAAWlC,EADnC,EACmCA,UAAWZ,EAD9C,EAC8CA,eAAgBxH,EAD9D,EAC8DA,WAC3DyG,EAAyD2B,EAAzD3B,SAAU8B,EAA+CH,EAA/CG,WAAYE,EAAmCL,EAAnCK,mBAAoBD,EAAeJ,EAAfI,WASlD,OAJIhG,GADwB,IAAxBiG,EACQD,EAAW4H,QAAQ,GAEnB3H,EAAmB2H,QAAQ,GAGnC,yBAAKzR,UAAU,WACX,kBAAC,GAAoBmI,GACrB,yBAAKnI,UAAU,UACX,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,SAAd,iEACA,kBAAC,GAAD,CACIsQ,MAAO,CAAC,CACJrO,KAAK,6CACLyD,IAAI,KACN,CACEzD,KAAK,gEACLyD,IAAI,WAKpB,yBAAK1F,UAAU,2BACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cAtKdkJ,EAuKoByC,EAAUzC,UApK3C,yBAAKhJ,IAAKgJ,EAAU/I,IAAI,eAIxB,yBAAKD,IAAI,0BAA0BC,IAAI,gBAkK3B,yBAAKH,UAAU,UAWnB,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WACX,wBAAIA,UAAU,YAAY2L,EAAUxC,MAApC,IAA4CwC,EAAUvC,OACtD,uBAAGpJ,UAAU,aAAa2L,EAAUtC,OACpC,uBAAGrJ,UAAU,YAAY2L,EAAUjD,OAEvC,yBAAK1I,UAAU,cACX,yBAAKA,UAAU,QACX,0BAAMA,UAAU,QAAhB,2FAA2C4J,EAA3C,2BAA8D/F,EAA9D,yBACA,kBAAC,EAAD,CACIlE,KAAM,qEACNE,OAAQmB,KAAK6P,YACbjR,UAAW,CAAC,iBAAkB,UAC9BH,SAAS,GACTC,WAAW,MAInB,yBAAKM,UAAU,mBACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,cACb,4BACI,mGACA,oEACA,wDACA,sFACA,+BAGR,+BACK8H,EAASlG,KAAK,SAAC0L,EAASxL,GAAW,IACxBG,EAAyCqL,EAAzCrL,KAAM0K,EAAmCW,EAAnCX,aAAc9I,EAAqByJ,EAArBzJ,MAAOoJ,EAAcK,EAAdL,MAAO1L,EAAO+L,EAAP/L,GACpCM,EAAY+G,GAAiB+D,EAActL,GACjD,OACI,wBAAIU,IAAKD,GACL,4BAAKG,GACL,4CAAS0K,EAAT,YAAyB9K,EAAUI,OACnC,4BAAK4B,GACL,4BAAKoJ,GACL,4BACI,kBAAC,EAAD,CACItN,KAAK,SACLF,SAAS,GACTC,WAAW,GACXE,UAAW,GACXC,OAAQ,WAAO,EAAK+Q,mBAAmBrP,iBA4DnF,kBAAC,GAAcsH,Q,GAlRT3G,IAAMC,WAwRb3C,gBA9SS,SAAC4C,GAAiB,IAC9BsP,EAAkDtP,EAAlDsP,eAAgB/D,EAAkCvL,EAAlCuL,cAAetL,EAAmBD,EAAnBC,eACvC,O,2VAAO,IACAqP,EADP,CAEIjI,UAAUkE,EAAclE,UACxBM,eAAe4D,EAAc5D,eAC7BlB,eAAe8E,EAAc9E,eAC7BxH,WAAWgB,EAAehB,gBAlBP,SAACoG,GACxB,MAAO,CACHmE,sBAAuB,SAAC1F,GAAoBuB,EnBgCf,SAACvB,GACpC,MAAO,CAAE5E,KDvD6B,2BCuDE4E,WmBjCmB0F,CAAsB1F,KAC3E2F,kBAAmB,SAAC3F,GAAoBuB,EnBmCf,SAACvB,GAChC,MAAO,CAAE5E,KDzDyB,uBCyDE4E,WmBpCmB2F,CAAkB3F,KACnE4F,qBAAsB,SAAC5F,GAAoBuB,EnBsCf,SAACvB,GACnC,MAAO,CAAE5E,KD5D0B,wBC4DE4E,WmBvCqB4F,CAAqB5F,KACzED,cAAe,SAACC,GAAwBuB,EAASxB,GAAcC,KAC/D6F,UAAW,WAAOtE,EnByBjB,CAAEnG,KD7Ce,aC6CE4E,QAAQ,MmBxB5B8F,gBAAiB,SAAC9F,GAAmBuB,EnB+Dd,SAACvB,GAC9B,MAAO,CAAE5E,KDtEuB,qBCsEE4E,WmBhEkB8F,CAAgB9F,QAkTvD1G,CAA6CmR,I,+NC5U5D,IAeMgB,G,YAEF,WAAYrR,EAAqBC,GAAsB,IAAD,8BAClD,4CAAMD,EAAOC,KAERqR,kBAAoB,EAAKA,kBAAkBjR,KAAvB,gBACzB,EAAKkR,iBAAmB,EAAKA,iBAAiBlR,KAAtB,gBACxB,EAAKmR,aAAe,EAAKA,aAAanR,KAAlB,gBAL8B,E,+EAQpCG,GACdA,EAAMC,kBAENwJ,EADoCvJ,KAAKV,MAAjCiK,yBACgB,CACpBtI,KAAKnB,EAAMK,OAAOc,KAClBb,MAAMN,EAAMK,OAAOC,U,qCAIX,IAAD,EACgDJ,KAAKV,MAAxD2B,EADG,EACHA,KAAMoH,EADH,EACGA,MAAOX,EADV,EACUA,KAAM4B,EADhB,EACgBA,SAAUE,EAD1B,EAC0BA,kBACrChE,IAAMgL,KAAKvO,EAAe,CACtBkG,MAAMlH,EAAMoH,QAAOX,OAAM4B,aAE5B5D,MAAK,SAACC,GACqB,MAApBA,EAASC,SACT4D,IACA7H,OAAOC,SAASC,KAAO,aAG9BmE,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,iB,uCAKItG,GACbA,EAAMC,iBACNC,KAAK8Q,iB,+BAGC,IAAD,EACmC9Q,KAAKV,MAArC2B,EADH,EACGA,KAAMoH,EADT,EACSA,MAAOX,EADhB,EACgBA,KAAM4B,EADtB,EACsBA,SAC3B,OACI,yBAAKtK,UAAU,YACX,kBAAC,GAAoBmI,IACrB,yBAAKnI,UAAU,UACX,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,SAAd,gEACA,kBAAC,GAAD,CACIsQ,MAAO,CAAC,CACJrO,KAAK,6CACLyD,IAAI,KACN,CACEzD,KAAK,+DACLyD,IAAI,WAKpB,yBAAK1F,UAAU,2BACX,0BAAMA,UAAU,OAAOkQ,SAAUlP,KAAK6Q,kBAClC,yBAAK7R,UAAU,cACX,2DACA,2BAAOyB,SAAUT,KAAK4Q,kBAAmBxQ,MAAOa,EAAMA,KAAK,OAAOX,KAAK,OAAOtB,UAAU,eAAeuB,GAAG,YAAYG,YAAY,MAEtI,yBAAK1B,UAAU,cACX,gJACA,2BAAOyB,SAAUT,KAAK4Q,kBAAmBxQ,MAAOiI,EAAOpH,KAAK,QAAQX,KAAK,QAAQtB,UAAU,eAAeuB,GAAG,aAAawQ,mBAAiB,YAAYrQ,YAAY,UACnK,2BAAOH,GAAG,YAAYvB,UAAU,wBAAhC,mDAEJ,yBAAKA,UAAU,cACX,8HACA,2BAAOyB,SAAUT,KAAK4Q,kBAAmBxQ,MAAOsH,EAAMpH,KAAK,OAAOW,KAAK,OAAOjC,UAAU,eAAeuB,GAAG,YAAYG,YAAY,uBAEtI,yBAAK1B,UAAU,cACX,uEACA,2BAAOyB,SAAUT,KAAK4Q,kBAAmBxQ,MAAOkJ,EAAUhJ,KAAK,WAAWW,KAAK,WAAWjC,UAAU,eAAeuB,GAAG,wBAAwBG,YAAY,cAE9J,4BAAQJ,KAAK,SAAStB,UAAU,mBAAhC,iB,GAjFDkC,IAAMC,WAyFd3C,gBAxGS,SAAC4C,GAErB,O,2VAAO,IADqBA,EAApB4P,oBAMe,SAACvK,GACxB,MAAO,CACH8C,wBAAyB,SAACrE,GAAyCuB,EpB4DpC,SAACvB,GACtC,MAAO,CAAE5E,KD1D+B,6BC0DE4E,WoB7DwCqE,CAAwBrE,KACpGsE,kBAAmB,WAAO/C,EpBgEzB,CAAEnG,KD5DwB,sBC4DE4E,QAAQ,SoB8B9B1G,CAA6CmS,I,+NCxG5D,IAeMM,G,YAEF,WAAY3R,EAAkBC,GAAmB,IAAD,8BAC5C,4CAAMD,EAAOC,KAERqR,kBAAoB,EAAKA,kBAAkBjR,KAAvB,gBACzB,EAAKkR,iBAAmB,EAAKA,iBAAiBlR,KAAtB,gBACxB,EAAKuR,UAAY,EAAKA,UAAUvR,KAAf,gBAL2B,E,+EAQ9BG,GACdA,EAAMC,kBAEN2J,EADiC1J,KAAKV,MAA9BoK,sBACa,CACjBzI,KAAKnB,EAAMK,OAAOc,KAClBb,MAAMN,EAAMK,OAAOC,U,kCAId,IAAD,EACoCJ,KAAKV,MAAzC+I,EADA,EACAA,MAAOiB,EADP,EACOA,SAAUK,EADjB,EACiBA,eACzBnE,IAAMgL,KAAKrO,EAAW,CAClBkG,QAAOiB,aAEV5D,MAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAAgB,CAAC,IAAD,EACGD,EAASE,KAA7BsL,EADiB,EACjBA,OAAQC,EADS,EACTA,QAChB7I,aAAaoG,QAAQ,cAAewC,GACpC5I,aAAaoG,QAAQ,eAAgByC,GACrCzH,IACAhI,OAAOC,SAASC,KAAO,QAG9BmE,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,iB,uCAKItG,GACbA,EAAMC,iBACNC,KAAKkR,c,+BAGC,IAAD,EACuBlR,KAAKV,MAAzB+I,EADH,EACGA,MAAOiB,EADV,EACUA,SACf,OACI,yBAAKtK,UAAU,YACX,kBAAC,GAAoBmI,IACrB,yBAAKnI,UAAU,UACX,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,SAAd,4BACA,kBAAC,GAAD,CACIsQ,MAAO,CAAC,CACJrO,KAAK,6CACLyD,IAAI,KACN,CACEzD,KAAK,2BACLyD,IAAI,WAKpB,yBAAK1F,UAAU,2BACX,0BAAMA,UAAU,OAAOkQ,SAAUlP,KAAK6Q,kBAClC,yBAAK7R,UAAU,cACX,gJACA,2BAAOyB,SAAUT,KAAK4Q,kBAAmBxQ,MAAOiI,EAAOpH,KAAK,QAAQX,KAAK,QAAQtB,UAAU,eAAeuB,GAAG,aAAawQ,mBAAiB,YAAYrQ,YAAY,UACnK,2BAAOH,GAAG,YAAYvB,UAAU,wBAAhC,mDAEJ,yBAAKA,UAAU,cACX,uEACA,2BAAOyB,SAAUT,KAAK4Q,kBAAmBxQ,MAAOkJ,EAAUhJ,KAAK,WAAWW,KAAK,WAAWjC,UAAU,eAAeuB,GAAG,wBAAwBG,YAAY,cAE9J,4BAAQJ,KAAK,SAAStB,UAAU,mBAAhC,iB,GA5EJkC,IAAMC,WAoFX3C,gBAnGS,SAAC4C,GAErB,O,2VAAO,IADkBA,EAAjBiQ,iBAMe,SAAC5K,GACxB,MAAO,CACHiD,qBAAsB,SAACxE,GAAyCuB,ErBoEpC,SAACvB,GACnC,MAAO,CAAE5E,KD9D4B,0BC8DE4E,WqBrEwCwE,CAAqBxE,KAC9FyE,eAAgB,WAAOlD,ErBwEtB,CAAEnG,KDjEqB,kBCiEE4E,QAAQ,SqBiB3B1G,CAA6CyS,ICnE7CzS,kBApCI,WACf,OACI,yBAAKQ,UAAU,cACX,kBAAC,GAAoBmI,IACrB,yBAAKnI,UAAU,UACX,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,SAAd,+FACA,kBAAC,GAAD,CACIsQ,MAAO,CAAC,CACJrO,KAAK,6CACLyD,IAAI,KACN,CACEzD,KAAK,8FACLyD,IAAI,WAMpB,yBAAK1F,UAAU,2BACX,wBAAIA,UAAU,SAAd,+FACA,yBAAKA,UAAU,YACf,yBAAKA,UAAU,QACX,6gDAEA,ixCACA,ohEAGJ,mC,+NCvBhB,IAcMsS,G,YAEF,WAAYhS,EAAiBC,GAAkB,IAAD,8BAC1C,4CAAMD,EAAOC,KAER+F,cAAgB,EAAKA,cAAc3F,KAAnB,gBACrB,EAAK4F,QAAU,EAAKA,QAAQ5F,KAAb,gBAJ2B,E,iFAQ1CK,KAAKuF,UACLvF,KAAKsF,kB,sCAGQ,IACLH,EAAkBnF,KAAKV,MAAvB6F,cACRK,IAAMC,IAAIpD,EAAoB,IAC7BqD,MAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAAgB,CAAC,IAAD,EACcD,EAASE,KAAxCC,EADiB,EACjBA,WAAYC,EADK,EACLA,eACpBZ,EAAc,CAACW,aAAYC,uBAGlCC,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,iB,gCAIF,IACChB,EAAYpF,KAAKV,MAAjB8F,QACRI,IAAMC,IAAInD,EAAc,IACvBoD,MAAK,SAACC,GACqB,MAApBA,EAASC,QACTR,EAAQO,EAASE,SAGxBG,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,iB,+BAIH,IAAD,EAC4BpG,KAAKV,MAA9BuK,EADH,EACGA,SAAU/D,EADb,EACaA,WAClB,OACI,yBAAK9G,UAAU,QACX,kBAAC,GAAoBmI,IACrB,yBAAKnI,UAAU,UACX,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,SAAd,wCACA,kBAAC,GAAD,CACIsQ,MAAO,CAAC,CACJrO,KAAK,6CACLyD,IAAI,KACN,CACEzD,KAAK,uCACLyD,IAAI,WAMpB,yBAAK1F,UAAU,2BACX,yBAAKA,UAAU,aACd6K,EAASjJ,KAAK,SAAC4P,EAAM1P,GAClB,OACI,yBAAKC,IAAKD,EAAO9B,UAAU,QACvB,yBAAKA,UAAU,QAAQE,IAAKsR,EAAK7N,MAAOxD,IAAI,KAC5C,wBAAIH,UAAU,SAASwR,EAAK9N,OAC5B,uBAAG1D,UAAU,QAAQwR,EAAK/M,MAC1B,uBAAGzE,UAAU,WAAWwR,EAAKhN,eAC7B,kBAAC,KAAD,CAAMxE,UAAU,SAASyF,GAAE,gBAAW+L,EAAKjQ,KAA3C,sEAKZ,yBAAKvB,UAAU,cACd8G,EAAWlF,KAAK,SAACsC,EAAMpC,GACpB,OACI,kBAAC,EAAD,eAAeC,IAAKD,GAAWoC,c,GAlFxChC,IAAMC,WA4FV3C,gBA1GS,SAAC4C,GAErB,O,2VAAO,IADiBA,EAAhBmQ,gBAMe,SAAC9K,GACxB,MAAO,CACHtB,cAAe,SAACD,GAAiBuB,EAAStB,GAAcD,KACxDE,QAAS,SAACF,GAAiBuB,EAASrB,GAAQF,QAgGrC1G,CAA6C8S,I,+NClG5D,IAeME,G,YAEF,WAAYlS,EAAsBC,GAAuB,IAAD,8BACpD,4CAAMD,EAAOC,KAER+F,cAAgB,EAAKA,cAAc3F,KAAnB,gBACrB,EAAK8R,YAAc,EAAKA,YAAY9R,KAAjB,gBACnB,EAAK4F,QAAU,EAAKA,QAAQ5F,KAAb,gBALqC,E,iFASpDK,KAAKyR,cACLzR,KAAKsF,gBACLtF,KAAKuF,Y,sCAGQ,IACLJ,EAAkBnF,KAAKV,MAAvB6F,cACRK,IAAMC,IAAIpD,EAAoB,IAC7BqD,MAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAAgB,CAAC,IAAD,EACcD,EAASE,KAAxCC,EADiB,EACjBA,WAAYC,EADK,EACLA,eACpBZ,EAAc,CAACW,aAAYC,uBAGlCC,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,iB,oCAIE,IAAD,EACqBpG,KAAKV,MAA5B2K,EADE,EACFA,YAAayH,EADX,EACWA,MACrBlM,IAAMC,IAAN,UAAanD,GAAb,OAA4BoP,EAAM1E,OAAO2E,QAAU,IAClDjM,MAAK,SAACC,GACqB,MAApBA,EAASC,OACTqE,EAAYtE,EAASE,MAErBlE,OAAOC,SAASC,KAAO,WAG9BmE,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,GACrBtE,OAAOC,SAASC,KAAO,WAE1BuE,SAAQ,iB,gCAIF,IACChB,EAAYpF,KAAKV,MAAjB8F,QACRI,IAAMC,IAAInD,EAAc,IACvBoD,MAAK,SAACC,GACqB,MAApBA,EAASC,QACTR,EAAQO,EAASE,SAGxBG,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,iB,+BAIH,IAAD,EACuCpG,KAAKV,MAAzCyK,EADH,EACGA,SAAUjE,EADb,EACaA,WAAYoE,EADzB,EACyBA,UAC9B,OACI,yBAAKlL,UAAU,QACX,kBAAC,GAAoBmI,IACrB,yBAAKnI,UAAU,UACX,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,SAAd,wCACA,kBAAC,GAAD,CACIsQ,MAAO,CAAC,CACJrO,KAAK,6CACLyD,IAAI,KACN,CACEzD,KAAK,uCACLyD,IAAI,WAMpB,yBAAK1F,UAAU,UACX,yBAAKA,UAAU,QAAQE,IAAK6K,EAASpH,MAAOxD,IAAI,MAGpD,yBAAKH,UAAU,2BACX,yBAAKA,UAAU,aAEX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,SAAS+K,EAASrH,OAChC,yBAAK1D,UAAU,YACf,uBAAGA,UAAU,QAAQ+K,EAAStG,MAC9B,uBAAGzE,UAAU,WAAW+K,EAASC,WAIzC,yBAAKhL,UAAU,cACd8G,EAAWlF,KAAK,SAACsC,EAAMpC,GACpB,OACI,kBAAC,EAAD,eAAeC,IAAKD,GAAWoC,SAO3C,wBAAIlE,UAAU,SAAd,4GACA,yBAAKA,UAAU,YACf,yBAAKA,UAAU,gCACVkL,EAAUtJ,KAAK,SAACsC,EAAMpC,GACnB,OACI,kBAAC,EAAD,eAAUC,IAAKD,GAAWoC,a,GAnH/BhC,IAAMC,WA4Hd3C,gBA3IS,SAAC4C,GAErB,O,2VAAO,IADqBA,EAApBwQ,oBAMe,SAACnL,GACxB,MAAO,CACHtB,cAAe,SAACD,GAAiBuB,EAAStB,GAAcD,KACxD+E,YAAa,SAAC/E,GAAiBuB,ExBiFZ,SAACvB,GAC1B,MAAO,CAAE5E,KD9EkB,gBC8EE4E,WwBlFiB+E,CAAY/E,KACpDE,QAAS,SAACF,GAAiBuB,EAASrB,GAAQF,QAgIrC1G,CAA6CgT,I,+NCpJ5D,IAkBMK,G,YAEF,WAAYvS,EAAuBC,GAAwB,IAAD,8BACtD,4CAAMD,EAAOC,KAER+F,cAAgB,EAAKA,cAAc3F,KAAnB,gBAHiC,E,iFAOtDK,KAAKsF,kB,sCAGQ,IACLH,EAAkBnF,KAAKV,MAAvB6F,cACRK,IAAMC,IAAIpD,EAAoB,IAC7BqD,MAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAAgB,CAAC,IAAD,EACcD,EAASE,KAAxCC,EADiB,EACjBA,WAAYC,EADK,EACLA,eACpBZ,EAAc,CAACW,aAAYC,uBAGlCC,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,iB,+BAIH,IAAD,EACkCpG,KAAKV,MAApCwG,EADH,EACGA,WAAYC,EADf,EACeA,eACpB,OACI,yBAAK/G,UAAU,cACX,kBAAC,GAAoBmI,IACrB,yBAAKnI,UAAU,UACX,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,SAAd,wCACA,kBAAC,GAAD,CACIsQ,MAAO,CAAC,CACJrO,KAAK,6CACLyD,IAAI,KACN,CACEzD,KAAK,uCACLyD,IAAI,WAMpB,yBAAK1F,UAAU,2BACX,yBAAKA,UAAU,cACV8G,EAAWlF,KAAK,SAACsC,EAAMpC,GACpB,OACI,kBAAC,EAAD,eAAeC,IAAKD,GAAWoC,QAI3C,yBAAKlE,UAAU,oBACV+G,EAAenF,KAAK,SAACsC,EAAMpC,GACxB,OACI,yBAAKC,IAAKD,GACN,yBAAK9B,UAAU,gBACX,wBAAIA,UAAU,QAAQkE,EAAKR,OAC3B,wBAAI1D,UAAU,eAAekE,EAAKN,aAClC,kBAAC,EAAD,CACIjE,KAAM,yFACNF,SAAS,mBACTC,WAAW,GACXE,UAAW,CAAC,kBACZC,OAAQ,WAzE3B,IAAC6D,IAyEkDQ,EAAKR,MAxE7Ef,OAAOC,SAASC,KAAhB,4BAA4Ca,OA2EZ,yBAAK1D,UAAU,cACX,yBAAKE,IAAG,UAAK6C,GAAL,OAAsBmB,EAAKP,OAASxD,IAAI,yB,GAxE3D+B,IAAMC,WAqFpB3C,gBAvGS,SAAC4C,GAErB,O,2VAAO,IADuBA,EAAtB0Q,sBAMe,SAACrL,GACxB,MAAO,CACHtB,cAAe,SAACD,GAAiBuB,EAAStB,GAAcD,QA8FjD1G,CAA6CqT,I,+NC7E5D,IAeME,G,YACJ,WAAYzS,EAAsBC,GAAuB,IAAD,8BACtD,4CAAMD,EAAOC,KACRyS,YAAc,EAAKA,YAAYrS,KAAjB,gBAEnB,EAAKqS,cAJiD,E,2EAOzC,IAAD,EAC2BhS,KAAKV,MAApC2S,EADI,EACJA,YAAaC,EADT,EACSA,cACrB1M,IAAMC,IAAIlD,EAAkB,IAC3BmD,MAAK,SAACC,GACH,GAA2B,MAAvBA,EAASE,KAAKgB,KAAc,CAAC,IAAD,EACClB,EAASE,KAAKA,KAAtCqF,EADuB,EACvBA,SAAU7K,EADa,EACbA,WACjB4R,EAAY/G,GACZgH,EAAc7R,OAGnB2F,OAAM,SAACC,GACJC,QAAQC,IAAI,QAASF,MAExBG,SAAQ,iB,+BAMT,OACE,6BACE,kBAAC,KAAD,KACE,yBAAKpH,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOmT,KAAK,IAAIC,OAAK,EAACC,UAAW7L,KACjC,kBAAC,KAAD,CAAO2L,KAAK,UAAUE,UAAW,kBAC/B,kBAAC,GACKjI,OAKR,kBAAC,KAAD,CAAO+H,KAAK,WAAWE,UAAW1C,KAClC,kBAAC,KAAD,CAAOwC,KAAK,YAAYE,UAAW1B,KACnC,kBAAC,KAAD,CAAOwB,KAAK,SAASE,UAAWpB,KAChC,kBAAC,KAAD,CAAOkB,KAAK,eAAeE,UAAWC,KACtC,kBAAC,KAAD,CAAOH,KAAK,QAAQC,OAAK,EAACC,UAAWf,KACrC,kBAAC,KAAD,CAAOa,KAAK,gBAAgBE,UAAWb,KACvC,kBAAC,KAAD,CAAOW,KAAK,cAAcC,OAAK,EAACC,UAAWE,KAC3C,kBAAC,KAAD,CAAOJ,KAAK,OAAOC,OAAK,EAACC,UAAWhD,KACpC,kBAAC,KAAD,CAAU8C,KAAK,IAAI1N,GAAG,UAExB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAmB9F,KAAM,6H,GApDXuC,IAAMC,WA4D1BqR,GAAehU,aA3EG,SAAC4C,GAEvB,O,2VAAO,IADoBA,EAAnBC,mBAMiB,SAACoF,GAC1B,MAAO,CACLwL,YAAY,SAAC/M,GAAuBuB,E1BqEb,SAACvB,GAC1B,MAAO,CAAE5E,KDhFiB,eCgFE4E,W0BtEmB+M,CAAY/M,KACzDgN,cAAc,SAAChN,GAA0BuB,E1BwEhB,SAACvB,GAC5B,MAAO,CAAC5E,KDnFoB,iBCmFC4E,W0BzEuBgN,CAAchN,QAiE/C1G,CAA6CuT,IAQnDU,GANH,WACV,OACE,kBAACD,GAAD,OCzGgBE,QACW,cAA7B/Q,OAAOC,SAAS+Q,UAEe,UAA7BhR,OAAOC,SAAS+Q,UAEhBhR,OAAOC,SAAS+Q,SAASjB,MACvB,2D,0kBCyBN,IAAMkB,GAAc,SAACC,GACnB,OAAOA,EAAWjS,KAAK,SAACsC,GACtB,OAAOA,EAAK6L,UAkhBD1N,GA9gBe,WAAuC,IAAtC9B,EAAqC,uDAA7B0L,GAAcpM,EAAe,uCAElE,G7BhC+B,sB6BgC3BA,EAAOyB,KAA4B,CAAC,IAC9ByI,EAAmBxJ,EAAnBwJ,eACR,OAAO,MACFxJ,EADL,CAEEwJ,eAAe,MACVA,EADS,CAEZI,gBAAgBJ,EAAeI,gBAAkBtK,EAAOqG,YAK9D,G7BhC2B,kB6BgCvBrG,EAAOyB,KAAwB,CAAC,IAC1ByI,EAAmBxJ,EAAnBwJ,eACR,OAAO,MACFxJ,EADL,CAEEwJ,eAAe,MACVA,EADS,CAEZE,YAAW,EACXC,SAASrK,EAAOqG,YAKtB,G7BrC0B,iB6BqCtBrG,EAAOyB,KAAuB,CAAC,IACzByI,EAAqCxJ,EAArCwJ,eAAgB3B,EAAqB7H,EAArB6H,iBAChBG,EAAeH,EAAfG,WACFuL,EAAQ,MACTvT,EADS,CAEZwJ,eAAe,MACVA,EADS,CAEZC,cAAc4J,GAAY/T,EAAOqG,QAAQkG,oBAE3ChE,iBAAiB,MACZA,EADW,CAEdE,aAAa,CACX5E,MAAM,sHACNO,MAAM2P,GAAY/T,EAAOqG,QAAQiG,sBAEnC5D,WAAW,MACNA,EADK,CAERtE,MAAM,CAAC,CACLxE,SAAS,WACT+I,KAAK3I,EAAOqG,QAAQmG,eACpB,CACA5M,SAAS,YACT+I,KAAK3I,EAAOqG,QAAQoG,gBACpB,CACA7M,SAAS,UACT+I,KAAK3I,EAAOqG,QAAQqG,qBAK5B,OAAOuH,EAGT,G7BrE4B,mB6BqExBjU,EAAOyB,KAAyB,CAClC,IAAMwS,EAAQ,MACTvT,EADS,CAEZc,WAAWxB,EAAOqG,UAEpB,OAAO4N,EAGT,OAAOvT,GC5GH8N,GAAc0F,aAAgB,CAChC1R,kBACAsL,cDyNyB,WAAuD,IAAtDpN,EAAqD,uDAA7C6K,GAAiBvL,EAA4B,uCAEjF,GAAIA,EAAOyB,OAASsE,GAClB,OAAO,MACFrF,GAIP,G7B1NwB,e6B0NpBV,EAAOyB,KAET,OADAiI,aAAaqG,WAAW,QACjB,MACFrP,EADL,CAEEkJ,UAAU,CACR3B,SAAS,GACT8B,WAAW,EACXC,WAAW,EACXC,oBAAoB,KAK1B,GAAIjK,EAAOyB,OAAS0E,GAAmB,CAAC,IAC9BxD,EAAoBjC,EAApBiC,gBAD6B,EAEE3C,EAAOqG,QAAtC0B,EAF6B,EAE7BA,QAF6B,EAEpBC,KAFoB,EAEdhB,KAFc,EAERkB,MAC7B,OAAO,MACFxH,EADL,CAEEoH,qBAAsB,CACpBC,QAAQA,EACRE,SAAS,CAAC,CACRvG,GAAI,IACJO,MAAO,EACPG,KAAMpC,EAAOqG,QACb8G,UAAW,aACXL,aAAc,IACd9I,MAAO,IACPE,SAAU,GACV6I,OAAQ,MAEV5E,iBAAgB,EAChBC,oBAAmB,EACnBhB,MAAM,GACNY,KAAK,EACLE,MAAM,GAERvF,gBAAgB,MACXA,EADU,CAEb0F,qBAAoB,EACpBjH,YAAY,OAKlB,GAAIpB,EAAOyB,OAASuE,GAAqB,CAAC,IAChC8B,EAA0CpH,EAA1CoH,qBAAsBnF,EAAoBjC,EAApBiC,gBAE9B,OAAO,MACFjC,EADL,CAEEoH,qBAAqB,MAChBA,EADe,CAElBK,iBAAgB,EAChBC,oBAAmB,IAErBzF,gBAAgB,MACXA,EADU,CAEb0F,qBAAoB,EACpBjH,YAAY,OAKlB,GAAIpB,EAAOyB,OAASwE,GAA6B,CAAC,IACxCtD,EAAoBjC,EAApBiC,gBADuC,EAER3C,EAAOqG,QAAtC0B,EAFuC,EAEvCA,QAASC,EAF8B,EAE9BA,KAAMhB,EAFwB,EAExBA,KAAMkB,EAFkB,EAElBA,MAC7B,OAAO,MACFxH,EADL,CAEEoH,qBAAsB,CACpBC,QAAQA,EACRE,SAASjB,EACTmB,iBAAgB,EAChBC,oBAAmB,EACnBhB,MAAM,GACNY,KAAKA,EACLE,MAAMA,GAERvF,gBAAgB,MACXA,EADU,CAEb0F,qBAAoB,EACpBjH,YAAY,OAKlB,GAAIpB,EAAOyB,OAASyE,GAA0B,CAAC,IACrCvD,EAAoBjC,EAApBiC,gBADoC,EAEX3C,EAAOqG,QAAhC0B,EAFoC,EAEpCA,QAASC,EAF2B,EAE3BA,KAAMZ,EAFqB,EAErBA,MACvB,OAAO,MACF1G,EADL,CAEEoH,qBAAsB,CACpBC,QAAQA,EACRE,SAAS,GACTE,iBAAgB,EAChBC,oBAAmB,EACnBhB,MAAMA,EACNY,KAAKA,EACLE,MAAM,GAERvF,gBAAgB,MACXA,EADU,CAEb0F,qBAAoB,EACpBjH,YAAY,OAKlB,G7B9U6B,oB6B8UzBpB,EAAOyB,KAA0B,CAAC,IAC5BuH,EAAmBtI,EAAnBsI,eAD2B,EAEXhJ,EAAOqG,QAAvBvG,EAF2B,EAE3BA,KAAMoJ,EAFqB,EAErBA,MACd,OAAO,MACFxI,EADL,CAEEsI,eAAe,MACVA,EADS,CAEZlJ,OACAoJ,QACAD,QAAO,MAKb,G7B3V6B,oB6B2VzBjJ,EAAOyB,KAA0B,CAAC,IAC5BuH,EAAmBtI,EAAnBsI,eACR,OAAO,MACFtI,EADL,CAEEsI,eAAe,MACVA,EADS,CAEZC,QAAO,MAKb,G7BpWiC,wB6BoW7BjJ,EAAOyB,KAA8B,CAAC,IAChCmI,EAA8BlJ,EAA9BkJ,UAAWM,EAAmBxJ,EAAnBwJ,eAEfiK,EAA6B,GAC7BnK,EAAoB,EACpBoK,GAAgB,EALmB,uBAOvC,YAAoBxK,EAAU3B,SAA9B,+CAAwC,CAAC,IAAhCwF,EAA+B,QAClCA,EAAQ/L,KAAO1B,EAAOqG,QAAQ3E,IAC9B+L,EAAQX,eAAiB9M,EAAOqG,QAAQyG,cAC1CqH,EAAY5C,KAAZ,MACK9D,EADL,CAEEL,MAAOK,EAAQL,MAAQpN,EAAOqG,QAAQ+G,SAExCpD,GAAcyD,EAAQzJ,MAAShE,EAAOqG,QAAQ+G,MAAQK,EAAQzJ,MAC9DoQ,GAAQ,IAERD,EAAY5C,KAAK9D,GACjBzD,GAAcyD,EAAQzJ,MAAQyJ,EAAQL,QAlBH,oFAsBlCgH,IACHD,EAAcA,EAAYE,OAAOrU,EAAOqG,SACxC2D,GAAchK,EAAOqG,QAAQrC,MAAQhE,EAAOqG,QAAQ+G,OAGtD,IAAMkH,EAAqB,CACzBrM,SAASkM,EACTpK,WAAWoK,EAAYzD,OACvB1G,WAAWA,EACXC,oBAAoB,GAGhBR,EAA0BI,KAAK0K,UAAUD,GAC/C5K,aAAaoG,QAAQ,OAAQrG,GAE7B,IAAMwK,EAAQ,MACTvT,EADS,CAEZkJ,UAAW0K,EACXpK,eAAe,MACVA,EADS,CAEZI,gBAAgB6J,EAAYzD,WAGhC,OAAOuD,EAGT,G7BjZkC,yB6BiZ9BjU,EAAOyB,KAA+B,CAAC,IACjCmI,EAA8BlJ,EAA9BkJ,UAAWM,EAAmBxJ,EAAnBwJ,eAEfiK,EAA6B,GAC7BnK,EAAoB,EAJgB,uBAMxC,YAAoBJ,EAAU3B,SAA9B,+CAAwC,CAAC,IAAhCwF,EAA+B,QAClCA,EAAQ/L,KAAO1B,EAAOqG,SACxB8N,EAAY5C,KAAZ,MACK9D,EADL,CAEEL,MAAMK,EAAQL,MAAQ,KAExBpD,IAAeyD,EAAQL,MAAQ,GAAKK,EAAQzJ,QAE5CmQ,EAAY5C,KAAK9D,GACjBzD,GAAcyD,EAAQL,MAAQK,EAAQzJ,QAfF,oFAmBxC,IAAMsQ,EAAqB,CACzBrM,SAASkM,EACTpK,WAAWoK,EAAYzD,OACvB1G,WAAWA,EACXC,oBAAoB,GAGhBR,EAA0BI,KAAK0K,UAAUD,GAG/C,OAFA5K,aAAaoG,QAAQ,OAAQrG,GAEtB,MACF/I,EADL,CAEEkJ,UAAU0K,EACVpK,eAAe,MACVA,EADS,CAEZI,gBAAgB6J,EAAYzD,WAKlC,G7BvbmC,0B6Bub/B1Q,EAAOyB,KAAgC,CAAC,IAClCmI,EAA8BlJ,EAA9BkJ,UAAWM,EAAmBxJ,EAAnBwJ,eAEfiK,EAA6B,GAC7BnK,EAAoB,EAJiB,yBAMzC,cAAoBJ,EAAU3B,SAA9B,iDAAwC,CAAC,IAAhCwF,GAA+B,SAClCA,GAAQ/L,KAAO1B,EAAOqG,UACpBoH,GAAQL,OAAS,GACnB+G,EAAY5C,KAAZ,MACK9D,GADL,CAEEL,MAAMK,GAAQL,MAAQ,KAExBpD,IAAeyD,GAAQL,MAAQ,GAAKK,GAAQzJ,QAE5CmQ,EAAY5C,KAAK9D,IACjBzD,GAAcyD,GAAQL,MAAQK,GAAQzJ,SAhBH,0FAqBzC,IAAMsQ,GAAqB,CACzBrM,SAASkM,EACTpK,WAAWoK,EAAYzD,OACvB1G,WAAWA,EACXC,oBAAoB,GAGhBR,GAA0BI,KAAK0K,UAAUD,IAG/C,OAFA5K,aAAaoG,QAAQ,OAAQrG,IAEtB,MACF/I,EADL,CAEEkJ,UAAU0K,GACVpK,eAAe,MACVA,EADS,CAEZI,gBAAgB6J,EAAYzD,WAKlC,G7BnesC,6B6BmelC1Q,EAAOyB,KAAmC,CAAC,IACrCmI,GAA8BlJ,EAA9BkJ,UAAWM,GAAmBxJ,EAAnBwJ,eAEfiK,GAA6B,GAC7BnK,GAAoB,EAJoB,0BAM5C,cAAoBJ,GAAU3B,SAA9B,mDAAwC,CAAC,IAAhCwF,GAA+B,SAClCA,GAAQ/L,KAAO1B,EAAOqG,UACxB8N,GAAY5C,KAAK9D,IACjBzD,IAAcyD,GAAQL,MAAQK,GAAQzJ,QATE,2FAa5C,IAAMsQ,GAAqB,CACzBrM,SAASkM,GACTpK,WAAWoK,GAAYzD,OACvB1G,WAAWA,GACXC,oBAAoB,GAGhBR,GAA0BI,KAAK0K,UAAUD,IAG/C,OAFA5K,aAAaoG,QAAQ,OAAQrG,IAEtB,MACF/I,EADL,CAEEkJ,UAAU0K,GACVpK,eAAe,MACVA,GADS,CAEZI,gBAAgB6J,GAAYzD,WAKlC,OAAOhQ,GCpgBL+B,YDyKuB,WAAkD,IAAjD/B,EAAgD,uDAAxCgL,GAAe1L,EAAyB,uCAC1E,GAAoB,SAAhBA,EAAOyB,KACT,OAAO,MACFf,GAIP,G7BzJ4B,mB6ByJxBV,EAAOyB,KAAyB,CAAC,IAAD,EACKzB,EAAOqG,QAAtCY,EAD0B,EAC1BA,WAAYC,EADc,EACdA,eACpB,OAAO,MACFxG,EADL,CAEE4D,wBAAwB,CACtBC,oBAAoB0C,EACpBvC,kBAAkBwC,KAKxB,G7BnKsB,a6BmKlBlH,EAAOyB,KAAmB,CAAC,IACrBgG,EAAkB/G,EAAlB+G,cACR,OAAO,MACF/G,EADL,CAEE+G,cAAc,MACTA,EADQ,CAEXzC,QAAQhF,EAAOqG,YAKrB,OAAO3F,GCrMLmR,eDwM0B,WAAwD,IAAvDnR,EAAsD,uDAA9CmL,GAAkB7L,EAA4B,uCAEnF,M7BtLgC,uB6BsL5BA,EAAOyB,KACF,MACFf,EADL,CAEEoL,UAAU,MACL9L,EAAOqG,WAKT3F,GClNLyR,gBDqgB2B,WAAuC,IAAtCzR,EAAqC,uDAA7B8J,GAAcxK,EAAe,uCAEnE,G7B5fwC,+B6B4fpCA,EAAOyB,KAAqC,CAAC,IAAD,EACtBzB,EAAOqG,QAAvBjE,EADsC,EACtCA,KAAMb,EADgC,EAChCA,MACViT,EAAiC,GAErC,OADAA,EAAQpS,GAAQb,EACT,MACFb,EADL,GAEK8T,GAIP,M7BrgBkC,yB6BqgB9BxU,EAAOyB,KACFf,E7BrgBwB,wB6BwgB7BV,EAAOyB,KACF,MACF+I,IAIA9J,GC1hBL8R,aD6hBwB,WAAoC,IAAnC9R,EAAkC,uDAA1BkK,GAAW5K,EAAe,uCAE7D,G7BjhBqC,4B6BihBjCA,EAAOyB,KAAkC,CAAC,IAAD,EACnBzB,EAAOqG,QAAvBjE,EADmC,EACnCA,KAAMb,EAD6B,EAC7BA,MACViT,EAAiC,GAErC,OADAA,EAAQpS,GAAQb,EACT,MACFb,EADL,GAEK8T,GAIP,M7B1hB8B,oB6B0hB1BxU,EAAOyB,KACF,MACFmJ,IAIAlK,GC9iBLgS,YDiJuB,WAAmC,IAAlChS,EAAiC,uDAAzBqK,GAAU/K,EAAe,uCAE3D,G7BhI4B,mB6BgIxBA,EAAOyB,KAAyB,CAAC,IAC3BwF,EAAejH,EAAOqG,QAAtBY,WACR,OAAO,MACFvG,EADL,CAEEuG,eAIJ,M7BvIsB,a6BuIlBjH,EAAOyB,KACF,MACFf,EADL,CAEEsK,SAAShL,EAAOqG,UAIb3F,GCjKLqS,gBDuG2B,WAAuC,IAAtCrS,EAAqC,uDAA7BuK,GAAcjL,EAAe,uCAEnE,G7BvF4B,mB6BuFxBA,EAAOyB,KAAyB,CAAC,IAC3BwF,EAAejH,EAAOqG,QAAtBY,WACR,OAAO,MACFvG,EADL,CAEEuG,eAIJ,M7B7F2B,kB6B6FvBjH,EAAOyB,KACF,MACFf,EADL,CAEEwK,SAASlL,EAAOqG,U7BjGE,a6BqGlBrG,EAAOyB,KACF,MACFf,EADL,CAEE2K,UAAUrL,EAAOqG,UAId3F,GC9HLuS,kBDiI6B,WAAyC,IAAxCvS,EAAuC,uDAA/B4K,GAAgBtL,EAAe,uCAEvE,G7BlH4B,mB6BkHxBA,EAAOyB,KAAyB,CAAC,IAAD,EACKzB,EAAOqG,QAAtCY,EAD0B,EAC1BA,WAAYC,EADc,EACdA,eACpB,OAAO,MACFxG,EADL,CAEEuG,aACAC,mBAIJ,OAAOxG,KCvIM+T,GAFDC,aAAYlG,I,cCP1BmG,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,GAAD,OAEJI,SAASC,eAAe,SHyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpO,MAAK,SAAAqO,GACjCA,EAAaC,iB,2FI3InB,gCAsBAC,iBAAO,CAAE9B,KAAM+B,kBAAQC,EAAD,iBARH,S","file":"static/js/main.e6a95748.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { IActionButton } from '../types';\n\nconst renderIcon = (iconName:string, iconSvgSrc:string) => {\n    if (iconName)\n        return (<i className={`${iconName} custom-icon`} />)\n    if (iconSvgSrc)\n        return (<img src={iconSvgSrc} alt=\"\" />)\n}\n\nconst ActionButton = ({ iconName, iconSvgSrc, text, classList, action }:IActionButton) => {\n    const classes:string = [\"ActionButton\", ...classList].join(\" \")\n    return (\n        <div className={classes} onClick={action}>\n            {renderIcon(iconName, iconSvgSrc)}\n            <span>{text}</span>\n        </div>\n    )\n}\n\nexport default connect()(ActionButton)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISearchForm, IWarehouse, IHandleSearch } from '../types'\nimport ActionButton from './ActionButton';\n\ninterface ISearchFormFilter extends ISearchForm {\n    selectedFilter:string|undefined\n}\n\ninterface ISearchFormCustom extends ISearchForm {\n    action:IHandleSearch\n}\n\nconst mapStateToProps = (reducer:any):ISearchForm => {\n    const warehouses:IWarehouse[] = reducer.DefaultReducer.warehouses\n    const { searchFormState } = reducer.HomeReducer.bigSearchBlockState\n    const newState = {\n        ...searchFormState,\n        warehouses\n    }\n    return newState\n}\n\nclass SearchFormHome extends React.Component<ISearchFormCustom, ISearchFormFilter> {\n\n    constructor(props:ISearchFormCustom, state:ISearchFormFilter) {\n        super(props, state)\n\n        this.state = {\n            ...props,\n            selectedFilter:undefined\n        }\n\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this)\n        this.handleSearchFieldChange = this.handleSearchFieldChange.bind(this)\n        this.handleFilterChange = this.handleFilterChange.bind(this)\n    }\n\n\n    handleSearchSubmit(event:React.MouseEvent<HTMLButtonElement>):void {\n        event.preventDefault()\n        const { searchInput, selectedFilter } = this.state\n        const { action } = this.props\n        action(searchInput, selectedFilter)\n        this.setState({\n            searchInput:\"\"\n        })\n    }\n\n    handleSearchFieldChange(event:React.ChangeEvent<HTMLInputElement>):void {\n        event.preventDefault()\n        this.setState({\n            searchInput: event.target.value\n        })\n    }\n\n    handleFilterChange(event:React.ChangeEvent<HTMLSelectElement>):void {\n        this.setState({\n            selectedFilter: event.target.value\n        })\n    }\n\n    render() {\n        const { searchInput } = this.state\n        const { warehouses } = this.props\n        return (\n            <div className=\"SearchFormHome\">\n                <div className=\"input-group standart-container\">\n                    <input\n                        type=\"text\"\n                        id=\"searchInput\"\n                        value={searchInput}\n                        className=\"form-control\"\n                        aria-label=\"Sarch in warehouses\"\n                        onChange={this.handleSearchFieldChange}\n                        placeholder=\"Введіть назву товару\"\n                    />\n                    <select className=\"custom-select\" id=\"inputGroupSelect04\"\n                        aria-label=\"Example select with button addon\"\n                        onChange={this.handleFilterChange}>\n                        <option selected>У всіх Аптеках</option>\n                        {warehouses.map((warehouse, index) => {\n                            return (\n                                <option key={`warehouses-home-${index}`} value={warehouse.uuid}>\n                                    {`№${warehouse.uuid} ${warehouse.name}`}\n                                </option>\n                            )\n                        })}\n                    </select>\n                    <div className=\"input-group-append\">\n                        <ActionButton\n                            text=\"Шукати\"\n                            classList={[\"default-button\"]}\n                            action={this.handleSearchSubmit}\n                            iconName=\"\"\n                            iconSvgSrc=\"\"\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SearchFormHome)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IBigSearchBlock } from '../types';\nimport SearchFormHome from './SearchFormHome';\n\nconst mapStateToProps = (reducer:any):IBigSearchBlock => {\n    const { bigSearchBlockState } = reducer.HomeReducer\n    const { warehouses } = reducer.DefaultReducer\n    return {\n        ...bigSearchBlockState,\n        warehouses\n    }\n}\n\nconst action = (searchKey:string, selectedFiler:string|undefined) => {\n    window.location.href = `/search?searchKey=${searchKey}&selectedFilter=${selectedFiler}`\n}\n\nclass BigSearchBlock extends React.Component<IBigSearchBlock, IBigSearchBlock> {\n    render() {\n        return (\n            <div className=\"BigSearchBlock\">\n                <div className=\"standart-container\">\n                    <h1>Знайдіть та забронюй</h1>\n                    <h3>Ви зможете отримати ваше бронювання у зручній для вас аптеці, без черги</h3>\n                    <SearchFormHome action={action}/> \n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default connect(mapStateToProps)(BigSearchBlock)","const envPath = ():string => {\n    switch (process.env.NODE_ENV) {\n        case \"development\":\n            return \"http://www.apteka-znahar.com.ua\"\n\n        case \"test\":\n            return \"\"\n\n        case \"production\":\n            return \"\"\n    \n        default:\n            return \"\"\n    }\n}\n\nconst MAIN_BACKEND = envPath()\n\nexport const IMAGES_BACKEND = `${MAIN_BACKEND}`\n\nexport const GET_PRODUCTS_URL = `${MAIN_BACKEND}/znahar/products/`\nexport const REGISTER_USER = `${MAIN_BACKEND}/api/user/register`\nexport const ORDERS_URL = `${MAIN_BACKEND}/znahar/orders/`\nexport const LOGIN_URL = `${MAIN_BACKEND}/api/token/`\nexport const REFRESH_TOKEN_URL = `${MAIN_BACKEND}/api/token/refresh`\nexport const GET_USER_URL = `${MAIN_BACKEND}/api/user/retrieve`\nexport const GET_PROMOTIONS_URL = `${MAIN_BACKEND}/api/promotions/`\nexport const GET_NEWS_URL = `${MAIN_BACKEND}/api/news/`\nexport const GET_SETTINGS_URL = `${MAIN_BACKEND}/znahar/settings/`\nexport const GET_WAREHOUSES_URL = `${MAIN_BACKEND}/znahar/warehouses/`","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IPromotionItem } from '../types';\nimport { IMAGES_BACKEND } from '../constants';\n\n\nclass PromotionItem extends React.Component<IPromotionItem, IPromotionItem> {\n    constructor(props:IPromotionItem, state:IPromotionItem) {\n        super(props, state)\n\n        this.redirectToSearch = this.redirectToSearch.bind(this)\n    }\n\n    redirectToSearch(title:string) {\n        window.location.href = `/search?searchKey=${title}`\n    }\n    render() {\n        const {\n            image,\n            title,\n            description,\n            price,\n            discount_price,\n            discount\n        } = this.props\n\n        return (\n            <div onClick={() => {this.redirectToSearch(title)}} className=\"PromotionItem\">\n                <div className=\"imageBlock\">\n                    <img src={`${IMAGES_BACKEND}${image}`} alt=\"photoUrl\" className=\"image\"/>\n                    <p className=\"discount\">-{discount}%</p>\n                </div>\n                <h1 className=\"name\">{title}</h1>\n                <h3 className=\"description\">{description}</h3>\n                <div className=\"priceBlock\">\n                    <p className=\"price\">{price}</p>\n                    <p className=\"discountPrice\">{discount_price}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default connect()(PromotionItem)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IPromotionItem } from '../types'\nimport PromotionItem from './PromotionItem';\nimport ActionButton from './ActionButton';\n\n\ninterface IPromotionsSmallList {\n    items:IPromotionItem[]\n}\n\nconst mapStateToProps = (reducer:any) => {\n    const { promotionsSmallList } = reducer.HomeReducer.promotionsSmallBoxState\n    return {\n        ...promotionsSmallList\n    }\n}\n\nclass PromotionsSmallList extends React.Component<IPromotionsSmallList, IPromotionsSmallList> {\n    render() {\n        const { items } = this.props\n        return (\n            <div className=\"PromotionsSmallList\">\n                {items.map( (item, index) => {\n                    return (\n                        <PromotionItem key={index} {...item}/>\n                    )\n                })}\n                <ActionButton\n                    text={\"Показати всі Пропозиції\"}\n                    action={() => {window.location.href = \"/promotions\"}}\n                    iconName=\"\"\n                    iconSvgSrc=\"\"\n                    classList={[\"default-button\"]}\n                />\n            </div>\n        )\n    }\n}\n\n\nexport default connect(mapStateToProps)(PromotionsSmallList)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IPromotionBigItem } from '../types';\nimport ActionButton from './ActionButton';\nimport { IMAGES_BACKEND } from '../constants';\n\ninterface IPromotionBigItemComponent {\n    items:IPromotionBigItem[]\n}\n\nconst redirectToSearch = (title:string) => {\n    window.location.href = `/search?searchKey=${title}`\n}\n\nclass PromotionBigItem extends React.Component<IPromotionBigItemComponent, IPromotionBigItemComponent> {\n    render() {\n        const { items } = this.props\n\n        return (\n            <div className=\"PromotionBigItem\">\n                {items.map( (item, index) => {\n                    return (\n                        <div key={index}>\n                            <div className=\"contentBlock\">\n                                <h1 className=\"name\">{item.title}</h1>\n                                <h3 className=\"description\">{item.description}</h3>\n                                <ActionButton\n                                    text={\"Додати до Кошика\"}\n                                    iconName=\"fas fa-cart-plus\"\n                                    iconSvgSrc=\"\"\n                                    classList={[\"default-button\"]}\n                                    action={() => {redirectToSearch(item.title)}}\n                                />\n                            </div>\n                            <div className=\"imageBlock\">\n                                <img src={`${IMAGES_BACKEND}${item.image}`} alt=\"photoUrl\"/>\n                            </div>\n                        </div>\n                    )\n                })}\n                \n            </div>\n        )\n    }\n}\n\n\nexport default connect()(PromotionBigItem)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IPromotionsSmallBox } from '../types';\nimport PromotionsSmallList from './PromotionsSmallList';\nimport PromotionBigItem from './PromotionBigItem';\n\nconst mapStateToProps = (reducer:any) => {\n    const { promotionsSmallBoxState } = reducer.HomeReducer\n    return {\n        ...promotionsSmallBoxState\n    }\n}\n\nclass PromotionsSmallBox extends React.Component<IPromotionsSmallBox, IPromotionsSmallBox> {\n    render() {\n        const { promotionsSmallList, promotionsBigList } = this.props\n\n        return (\n            <div className=\"PromotionsSmallBox standart-container\">\n                <PromotionsSmallList items={promotionsSmallList}/>\n                <PromotionBigItem items={promotionsBigList}/>\n            </div>   \n        )\n    }\n}\n\n\nexport default connect(mapStateToProps)(PromotionsSmallBox)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { INewsItem } from '../types'\nimport { IMAGES_BACKEND } from '../constants';\n\nconst NewsItem = ({\n    image, title, \n    content_short, date,\n}:INewsItem) => {\n    return (\n        <div className=\"NewsItem\">\n            <img className=\"image\" src={image} alt=\"photoUrl\"/>\n            <h6 className=\"title\">{title}</h6>\n            <p className=\"description\">{content_short.slice(0, 75)}...</p>\n            <div className=\"bottomBlock\">\n                <p className=\"date\">{date}</p>\n                {/* <p className=\"views\">{views}</p> */}\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(NewsItem)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { INewsItem } from '../types';\nimport NewsItem from './NewsItem';\n\ninterface INewsList {\n    items:INewsItem[]\n}\n\nclass NewsList extends React.Component<INewsList, INewsList> {\n    render() {\n        const { items } = this.props\n\n        return (\n            <div className=\"NewsList standart-container\">\n                <h1 className=\"title\">Актуальні Новини</h1>\n                <div className=\"divider\"></div>\n                <div className=\"itemsList\">\n                    {items.map( (item, index) => {\n                        return (\n                            <NewsItem key={index} {...item}/>\n                        )\n                    })}\n                </div>\n                <div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default connect()(NewsList)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { INewsBlock } from '../types';\nimport NewsList from './NewsList';\n\n\nclass NewsBlock extends React.Component<INewsBlock, INewsBlock> {\n    render() {\n        const { newList, flexibleInfoList } = this.props\n\n        return (\n            <div className=\"NewsBlock\">\n                {/* <FlexibleInfoList /> */}\n                <NewsList items={newList}/>\n            </div>\n        )\n    }\n}\n\n\nexport default connect()(NewsBlock)","import React, { FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { ISubscribeForm } from '../types';\nimport ActionButton from './ActionButton';\n\nclass SubscribeForm extends React.Component<ISubscribeForm, ISubscribeForm> {\n\n    constructor(props:ISubscribeForm, state:ISubscribeForm) {\n        super(props, state)\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(_e:FormEvent<HTMLFormElement>) {\n        const { action, value } = this.props\n        action(value)\n    }\n\n    render() {\n        const { value } = this.props\n        return (\n            <div className=\"SubscribeForm\">\n                <div className=\"input-group\">\n                    <input\n                        type=\"text\"\n                        id=\"searchInput\"\n                        value={value}\n                        className=\"form-control input\"\n                        aria-label=\"Sarch in warehouses\"\n                        // onChange={this.handleSearchFieldChange}\n                        placeholder=\"Ваш email\"\n                    />\n                    <div className=\"input-group-append\">\n                        <ActionButton\n                            text={\"Підписатись\"}\n                            classList={[\"default-button\", \"button\"]}\n                            action={() => {}}\n                            iconName={\"\"}\n                            iconSvgSrc=\"\"\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(SubscribeForm)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISubscribeBlock } from '../types';\nimport SubscribeForm from './SubscribeForm';\n\nconst SubscribeBlock = ({ title, description, subscribeForm }:ISubscribeBlock) => {\n    return (\n        <div className=\"SubscribeBlock\">\n            <h1 className=\"title\">{title}</h1>\n            <h3 className=\"description\">{description}</h3>\n            <SubscribeForm {...subscribeForm}/>\n        </div>\n    )\n}\n\nexport default connect()(SubscribeBlock)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IMainMenuData } from '../types';\nimport { Link } from 'react-router-dom';\n\nconst getItemClasses = (isItemActive:boolean):string => {\n    return isItemActive ? \"nav-item active\": \"nav-item\"\n}\n\nconst addSpanForSR = (isItemActive:boolean) => {\n    if (isItemActive)\n        return (\n            <span className=\"sr-only\">(current)</span>\n        )\n}\n\n\nconst MainMenuBig = ({items, logoUrl}:IMainMenuData) => {\n    return (\n        <div className=\"MainMenuBig\">\n            <div className=\"logo\">\n                <a className=\"navbar-brand\" href=\"/\">\n                    <img src={logoUrl} alt=\"Logo\"/>\n                </a>\n            </div>\n            <div className=\"row menu\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light\">\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav nav\">\n                            {items.map( (item, index) => {\n                                return (\n                                    <li key={index} className={getItemClasses(false)}>\n                                        <Link className=\"nav-link\" to={item.url}>\n                                            {item.name}\n                                            {addSpanForSR(false)}\n                                        </Link>\n                                    </li>\n                                )\n                            })}\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(MainMenuBig)","export const INIT_PRODUCTS_SEARCH = \"INIT_PRODUCTS_SEARCH\"\nexport const SET_PRODUCTS_SEARCH = \"SET_PRODUCTS_SEARCH\"\nexport const SET_PRODUCTS_SEARCH_SUCCESS = \"SET_PRODUCTS_SEARCH_SUCCESS\"\nexport const SET_PRODUCTS_SEARCH_FAIL = \"SET_PRODUCTS_SEARCH_FAIL\"\nexport const SET_PRODUCTS_SEARCH_END = \"SET_PRODUCTS_SEARCH_END\"\nexport const SET_PRODUCTS_FAKE = \"SET_PRODUCTS_FAKE\"\nexport const SHOW_INFO_BLOCK = \"SHOW_INFO_BLOCK\"\nexport const HIDE_INFO_BLOCK = \"HIDE_INFO_BLOCK\"\n\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\"\nexport const REMOVE_PRODUCT_FROM_CART = \"REMOVE_PRODUCT_FROM_CART\"\n\nexport const PLUS_PRODUCT_TO_CART = \"PLUS_PRODUCT_TO_CART\"\nexport const MINUS_PRODUCT_TO_CART = \"MINUS_PRODUCT_TO_CART\"\n\n\nexport const CLEAR_CART = \"CLEAR_CART\"\nexport const PLUS_ITEM_CART = \"PLUS_ITEM_CART\"\nexport const MINUS_ITEM_CART = \"MINUS_ITEM_CART\"\nexport const ADD_ITEM_TOP_CART = \"ADD_ITEM_TOP_CART\"\nexport const REMOVE_ITEM_TOP_CART = \"REMOVE_ITEM_TOP_CART\"\nexport const CLEAR_TOP_CART = \"CLEAR_TOP_CART\"\n\nexport const CHANGE_REGISTER_FORM_FIELD = \"CHANGE_REGISTER_FORM_FIELD\"\nexport const SUBMIT_REGISTER_FORM = \"SUBMIT_REGISTER_FORM\"\nexport const CLEAN_REGISTER_FORM = \"CLEAN_REGISTER_FORM\"\n\nexport const CHANGE_LOGIN_FORM_FIELD = \"CHANGE_LOGIN_FORM_FIELD\"\nexport const CLEAN_LOGIN_FORM = \"CLEAN_LOIN_FORM\"\n\nexport const SET_USER_DATA = \"SET_USER_DATA\"\nexport const SET_USER_FULL_DATA = \"SET_USER_FULL_DATA\"\n\nexport const SET_PROMOTIONS = \"SET_PROMOTIONS\"\nexport const SET_NEWS = \"SET_NEWS\"\nexport const SET_NEWS_POST = \"SET_NEWS_POST\"\n\nexport const SET_SETTINGS = \"SET_SETTINGS\"\nexport const SET_WAREHOUSES = \"SET_WAREHOUSES\"\n","import {\n  INIT_PRODUCTS_SEARCH,\n  SET_PRODUCTS_SEARCH,\n  SET_PRODUCTS_SEARCH_SUCCESS,\n  SET_PRODUCTS_SEARCH_FAIL,\n  SET_PRODUCTS_FAKE,\n  SHOW_INFO_BLOCK,\n  HIDE_INFO_BLOCK,\n  ADD_PRODUCT_TO_CART,\n  ADD_ITEM_TOP_CART,\n  REMOVE_PRODUCT_FROM_CART,\n  PLUS_PRODUCT_TO_CART,\n  MINUS_PRODUCT_TO_CART,\n  CLEAR_CART,\n  CHANGE_REGISTER_FORM_FIELD,\n  CLEAN_REGISTER_FORM,\n  CHANGE_LOGIN_FORM_FIELD,\n  CLEAN_LOGIN_FORM,\n  SET_USER_DATA,\n  SET_USER_FULL_DATA,\n  SET_PROMOTIONS,\n  SET_NEWS,\n  SET_NEWS_POST,\n  SET_SETTINGS,\n  SET_WAREHOUSES\n} from \"./types\";\nimport { IInfoLayer, IProductItem, IUser, IPromotionBigItem, IPromotionItem, INewsItem, INewsPost, IWarehouse, ISettings } from \"../types\";\n\nexport function initProductsInSearch(payload:any) {\n  return { type: INIT_PRODUCTS_SEARCH, payload };\n}\n\nexport function getProductsRequestSended() {\n  return { type: SET_PRODUCTS_SEARCH, payload: {} };\n}\n\nexport function setProductsSuccess(products:any[]) {\n  return { type: SET_PRODUCTS_SEARCH_SUCCESS, payload: products };\n}\n\nexport function setProductsFail() {\n  return { type: SET_PRODUCTS_SEARCH_FAIL, payload: {} };\n}\n\nexport function getProductsFake(searchKey:string) {\n  return { type: SET_PRODUCTS_FAKE, payload: searchKey };\n}\n\nexport const showInfoLayer = (payload:IInfoLayer) => {\n  return { type:SHOW_INFO_BLOCK, payload}\n}\n\nexport const hideInfoLayer = () => {\n  return { type:HIDE_INFO_BLOCK, payload:{}}\n}\n\nexport const addProductToCart = (payload:IProductItem) => {\n  return { type:ADD_PRODUCT_TO_CART, payload }\n}\n\nexport const clearCart = () => {\n  return { type:CLEAR_CART, payload:{} }\n}\n\nexport const removeProductFromCart = (payload:string) => {\n  return { type:REMOVE_PRODUCT_FROM_CART, payload }\n}\n\nexport const plusProductToCart = (payload:number) => {\n  return { type:PLUS_PRODUCT_TO_CART, payload }\n}\n\nexport const minusProductFromCart = (payload:number) => {\n  return { type:MINUS_PRODUCT_TO_CART, payload }\n}\n\nexport const addItemTopCart = (payload:number) => {\n  return { type:ADD_ITEM_TOP_CART, payload }\n}\n\nexport const changeRegisterFormField = (payload:{name:string, value:string}) => {\n  return { type:CHANGE_REGISTER_FORM_FIELD, payload}\n}\n\nexport const cleanRegisterForm = () => {\n  return { type:CLEAN_REGISTER_FORM, payload:{}}\n}\n\nexport const changeLoginFormField = (payload:{name:string, value:string}) => {\n  return { type:CHANGE_LOGIN_FORM_FIELD, payload}\n}\n\nexport const cleanLoginForm = () => {\n  return { type:CLEAN_LOGIN_FORM, payload:{}}\n}\n\nexport const setUserData = (payload:string) => {\n  return { type:SET_USER_DATA, payload}\n}\n\nexport const setUserFullData = (payload:IUser) => {\n  return { type:SET_USER_FULL_DATA, payload}\n}\n\nexport const setPromotions = (payload:{promotions:IPromotionItem[], promotions_big:IPromotionBigItem[]}) => {\n  return { type:SET_PROMOTIONS, payload}\n}\n\nexport const setNews = (payload:INewsItem[]) => {\n  return { type:SET_NEWS, payload}\n}\n\nexport const setNewsPost = (payload:INewsPost) => {\n  return { type:SET_NEWS_POST, payload}\n}\n\nexport const setSettings = (payload:ISettings) => {\n  return { type:SET_SETTINGS, payload }\n}\n\nexport const setWarehouses = (payload:IWarehouse[]) => {\n  return {type:SET_WAREHOUSES, payload}\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { IHomePage } from '../types/Interfaces'\nimport BigSearchBlock from '../components/BigSearchBlock'\nimport PromotionsSmallBox from '../components/PromotionsSmallBox'\nimport NewsBlock from '../components/NewsBlock'\nimport SubscribeBlock from '../components/SubscribeBlock'\nimport MainMenuBig from '../components/MainMenuBig'\nimport { setPromotions, setNews } from '../actions'\nimport axios from 'axios'\nimport { GET_PROMOTIONS_URL, GET_NEWS_URL } from '../constants';\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        setPromotions: (payload:any) => {dispatch(setPromotions(payload))},\n        setNews: (payload:any) => {dispatch(setNews(payload))}\n    }\n}\n\nconst mapStateToProps = (reducer:any):IHomePage => {\n    const { HomeReducer } = reducer\n    const { BigSearchBlock } = HomeReducer\n    const { warehouses } = reducer.DefaultReducer\n    return {\n        ...HomeReducer\n    }\n}\n\nclass HomePage extends React.Component<IHomePage, IHomePage> {\n    constructor(props:IHomePage, state:IHomePage) {\n        super(props, state)\n\n        this.getPromotions = this.getPromotions.bind(this)\n        this.getNews = this.getNews.bind(this)\n\n        this.getNews()\n        this.getPromotions()\n    }\n\n    componentDidMount() {\n        \n    }\n\n    getPromotions() {\n        const { setPromotions } = this.props\n        axios.get(GET_PROMOTIONS_URL, {})\n        .then((response) => {\n            if (response.status === 200) {\n                const { promotions, promotions_big } = response.data\n                setPromotions({promotions, promotions_big})\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {  \n        })\n    }\n\n    getNews() {\n        const { setNews } = this.props\n        axios.get(GET_NEWS_URL, {})\n        .then((response) => {\n            if (response.status === 200) {\n                setNews(response.data)\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {  \n        })\n    }\n\n    render() {\n        const {\n            mainMenuOriginState,\n            promotionsSmallBoxState,\n            newBlockState,\n            subscribeBlockState,\n        } = this.props\n        return (\n            <div className=\"HomePage\">\n                <MainMenuBig {...mainMenuOriginState}/>\n                <BigSearchBlock />\n                <PromotionsSmallBox {...promotionsSmallBoxState}/>\n                <NewsBlock {...newBlockState}/>\n                <SubscribeBlock {...subscribeBlockState}/>\n            </div>\n        )\n    }\n}\n\nconst Home = connect(mapStateToProps, mapDispatchToProps)(HomePage)\n\nexport default Home;\n","import {\n    ISearchState,\n    IProduct,\n    IGetProductsRequest,\n    ISearchForm,\n    ITopNavBarState,\n    IMainMenuData,\n    IHomePage,\n    IBigSearchBlock,\n    IActionButton,\n    IPromotionBigItem,\n    IPromotionsSmallBox,\n    INewsBlock,\n    INewsList,\n    ICarouselBlock,\n    ISubscribeBlock,\n    ISubscribeForm,\n    IFooterBlock,\n    IContactsList,\n    ISocialList,\n    IBackForm,\n    IBackFormAction,\n    IWarehouse,\n    IInfoLayer,\n    IProfilePage,\n    IUser,\n    ICart,\n    IRootApp,\n    IRegisterForm,\n    ILoginForm,\n    IPromotionItem,\n    INewsItem,\n    INewsPage,\n    INewsPostPage,\n    INewsPost,\n    IPromotionsPage\n} from '../../types'\n\nexport const initProducts:IProduct[] = []\n\nexport const productsRequestState:IGetProductsRequest = {\n    message:\"\",\n    error:\"\",\n    code:0,\n    products:initProducts,\n    total:0,\n    isRequestSended:false,\n    isResponseRecieved:false\n}\n\nexport const searchFormState:ISearchForm = {\n    searchInput: \"\",\n    searchFormSubmitted:false,\n    // action:(searchKey:string, selectedFiler:string|undefined) => {\n    //     window.location.href = `/search?searchKey=${searchKey}&selectedFilter=${selectedFiler}`\n    // },\n    warehouses:[]\n}\n\nexport const mainMenuSimpleState:IMainMenuData = {\n    logoUrl:\"/static/images/logo.png\",\n    items:[{\n        name:\"Головна\",\n        url:\"/\"\n    },{\n        name:\"Акції\",\n        url:\"/promotions\"\n    },{\n        name:\"Найближча Аптека\",\n        url:\"/map\"\n    },{\n        name:\"Новини\",\n        url:\"/news\"\n    },{\n        name:\"Контакти\",\n        url:\"/contacts\"\n    }],\n\n}\n\nexport const mainMenuOriginState:IMainMenuData = {\n    ...mainMenuSimpleState\n}\n\nexport const bigSearchBlockState:IBigSearchBlock = {\n    searchFormState:searchFormState,\n    warehouses:[]\n}\n\nexport const actionButton:IActionButton = {\n    text:\"Show all\",\n    action: () => {},\n    classList:[],\n    iconName:\"\",\n    iconSvgSrc:\"\"\n}\n\nexport const promotionBigItem:IPromotionBigItem = {\n    id:-1,\n    image:\"/static/images/big-pills.png\",\n    title:\"Profilaktone\",\n    description:\"Містить масло печінки акули, вітаміни А, D, E, C та мінерали Цинк і Селен. Масло печінки акули, що міститься в продукті походить від уловів біля Ісландії та Фарерських островів.\",\n    price:100,\n    discount_price:80,\n    discount:20,\n    // actionButton: actionButton\n}\n\nexport const promotionsSmallBoxState:IPromotionsSmallBox = {\n    promotionsSmallList:[],\n    promotionsBigList:[]\n}\n\nexport const newList:INewsList = {\n    items:[],\n    title:\"Актуальні Новини\"\n}\n\nexport const newBlockState:INewsBlock = {\n    newList:[],\n    flexibleInfoList:{}\n}\n\nexport const carouselState:ICarouselBlock = {\n    title: \"Експерти Нам Довіряють\",\n    items: [{\n        photoUrl: \"https://encrypted-tbn0.gstatic.com/static/images?q=tbn:ANd9GcS9pKhNdORp7GaKjJUTFPfZwZfURmKVFiK5dWKn8eJQM5J40HHlaw\",\n        title: \"Катерина Шевченко\",\n        description: \"Співзасновник ТОВ “Фарма Медікал”\",\n        content: \"Доброго дня, замовила туніку 'селен' та костюм 'хельсінкі' все підійшло чудово, якість, просто супер дякую Вам Панянка. А ще приємно вразив маленький запашний презент, дякую.\"\n    },{\n        photoUrl: \"https://encrypted-tbn0.gstatic.com/static/images?q=tbn:ANd9GcS9pKhNdORp7GaKjJUTFPfZwZfURmKVFiK5dWKn8eJQM5J40HHlaw\",\n        title: \"Катерина Шевченко\",\n        description: \"Співзасновник ТОВ “Фарма Медікал”\",\n        content: \"Доброго дня, замовила туніку 'селен' та костюм 'хельсінкі' все підійшло чудово, якість, просто супер дякую Вам Панянка. А ще приємно вразив маленький запашний презент, дякую.\"\n    },{\n        photoUrl: \"https://encrypted-tbn0.gstatic.com/static/images?q=tbn:ANd9GcS9pKhNdORp7GaKjJUTFPfZwZfURmKVFiK5dWKn8eJQM5J40HHlaw\",\n        title: \"Катерина Шевченко\",\n        description: \"Співзасновник ТОВ “Фарма Медікал”\",\n        content: \"Доброго дня, замовила туніку 'селен' та костюм 'хельсінкі' все підійшло чудово, якість, просто супер дякую Вам Панянка. А ще приємно вразив маленький запашний презент, дякую.\"\n    }],\n    activeIndex: 0\n}\n\nexport const subscribeForm:ISubscribeForm = {\n    value:\"\",\n    action:(value:string) => {}\n}\n\nexport const subscribeBlockState:ISubscribeBlock = {\n    title:\"Зекономте час та гроші!\",\n    description:\"Підпишіться і ми надсилатимемо вам найкращі пропозиції\",\n    subscribeForm:subscribeForm\n}\n\nexport const footerMenu:IMainMenuData = {\n    logoUrl:\"/static/images/logo.png\",\n    items:[{\n        name:\"Пошук та бронювання\",\n        url:\"/search\"\n    },{\n        name:\"Акції\",\n        url:\"/promotions\"\n    },{\n        name:\"Оптовим кліентам\",\n        url:\"/for-clients\"\n    },{\n        name:\"Найблища Аптека\",\n        url:\"/map\"\n    },{\n        name:\"Новини\",\n        url:\"/news\"\n    },{\n        name:\"Мій Кабінет\",\n        url:\"/profile\"\n    }],\n\n}\n\nexport const contactsList:IContactsList = {\n    title:\"Контактна інформація\",\n    items:[]\n}\n\n\nexport const socialList:ISocialList = {\n    title:\"Ми у соцмережах\",\n    items:[{\n        iconName:\"facebook\",\n        link:\"https://facebook.com\"\n    },{\n        iconName:\"instagram\",\n        link:\"https://instagram.com\"\n    },{\n        iconName:\"youtube\",\n        link:\"https://youtube.com\"\n    }]\n}\n\nexport const backForm:IBackFormAction = {\n    title:\"Форма Зворотнього звязку\",\n    name:\"\",\n    cell:\"\",\n    message:\"\",\n    action:() => {}\n}\n\nexport const footerBlockState:IFooterBlock = {\n    footerMenu:footerMenu,\n    contactsList:contactsList,\n    socialList:socialList,\n    backForm:backForm\n}\n\nexport const warehouses:IWarehouse[] = []\n\n// export const warehouses:IWarehouse[] = [{\n//     id:\"1\",\n//     address:\"вул. Хімічна, 22\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"2\",\n//     address:\"вул. Мазепи, 11\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"3\",\n//     address:\"вул. Виговського, 29а\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"4\",\n//     address:\"просп. Червоної Калини, 64\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"5\",\n//     address:\"вул. Городоцька, 82\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"6\",\n//     address:\"вул. Симоненка, 3\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"7\",\n//     address:\"вул. Богдана Хмельницького, 1\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"8\",\n//     address:\"вул. Дорошенка, 6\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"9\",\n//     address:\"вул. Личаківська, 54/2\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"10\",\n//     address:\"вул. Сихівська, 22\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"11\",\n//     address:\"вул. Пасічна, 70\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// },{\n//     id:\"12\",\n//     address:\"вул. Шевченка, 366в\",\n//     description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n//     photoUrl:\"http://www.apteka-znahar.com.ua/static/images/khimichna.jpg\",\n//     coordinates:undefined\n// }]\n\nconst warehousesIdList:{[id:string]:number} = {\n    \"1\":0,\n    \"2\":1,\n    \"3\":2,\n    \"4\":3,\n    \"5\":4,\n    \"6\":5,\n    \"7\":6,\n    \"8\":7,\n    \"9\":8,\n    \"10\":9,\n    \"11\":10,\n    \"12\":11\n}\n\nexport const getWarehouseById = (id:string, warehouses:IWarehouse[]):IWarehouse => {\n    console.log(\"getWarehouseById\", id, warehouses)\n    return warehouses[warehousesIdList[id]]\n}\n\nexport const infoLayerState:IInfoLayer = {\n    text:\"Стрепсілс з віт. С апельсин льодяники №24 успішно додано до списку бронювання\",\n    active:false,\n    timer:0,\n    showInfoLayer: (payload:IInfoLayer) => {},\n    hideInfoLayer: () => {}\n}\n\nexport const userInitState:IUser = {\n    id:-1,\n    photoUrl:\"\",\n    fname:\"\",\n    lname:\"\",\n    email:\"\",\n    cell:\"\"\n}\n\nlet initCartState:ICart\n\nconst cartStateJsonStr = localStorage.getItem(\"cart\")\nif (cartStateJsonStr) {\n    initCartState = JSON.parse(cartStateJsonStr)\n} else {\n    initCartState = {\n        products:[],\n        totalCount:0,\n        totalPrice:0,\n        totalPriceDiscount:0\n    }\n}\n\nexport const cartState:ICart = {\n    ...initCartState\n}\n\nexport const topNavBarState:ITopNavBarState = {\n    phonesNumbers:[],\n    isUserAuth:false,\n    userName:\"\",\n    cartOrdersCount:initCartState.totalCount,\n    setUserData:(payload:string) => {}\n}\n\nexport const registerForm:IRegisterForm = {\n    name:\"\",\n    email:\"\",\n    cell:\"\",\n    password:\"\",\n    changeRegisterFormField:(payload:{name:string, value:string}) => {},\n    cleanRegisterForm:() => {}\n}\n\nexport const loginForm:ILoginForm = {\n    email:\"\",\n    password:\"\",\n    changeLoginFormField:(payload:{name:string, value:string}) => {},\n    cleanLoginForm:() => {}\n}\n\n\nexport const newsPage:INewsPage = {\n    newsList:[],\n    promotions:[],\n    setPromotions:(payload:{promotions:IPromotionItem[], promotions_big:IPromotionBigItem[]}) => {},\n    setNews:(payload:INewsItem[]) => {}\n}\n\nexport const newsPostPage:INewsPostPage = {\n    newsPost:{\n        id:-1,\n        title:\"\",\n        content:\"\",\n        date: \"\",\n        image:\"\"\n    },\n    promotions:[],\n    setPromotions:(payload:{promotions:IPromotionItem[], promotions_big:IPromotionBigItem[]}) => {},\n    setNewsPost:(payload:INewsPost) => {},\n    setNews:(payload:INewsItem[]) => {},\n    otherNews:[]\n}\n\nexport const promotionsPage:IPromotionsPage = {\n    promotions:[],\n    promotions_big:[],\n    setPromotions:(payload:{promotions:IPromotionItem[], promotions_big:IPromotionBigItem[]}) => {},\n}\n\n/**\n * PAGES |\n *       |\n *       V\n */\nexport const searchInitState:ISearchState = {\n    productsRequestState: productsRequestState,\n    searchFormState: searchFormState,\n    topNavBarState: topNavBarState,\n    mainMenuSimpleState: mainMenuSimpleState,\n    setProductsSuccess:(products) => {  },\n    getProductsRequestSended:() => { },\n    infoLayerState:infoLayerState,\n    cartState:cartState\n}\n\nexport const homePageState:IHomePage = {\n    topNavBarState: topNavBarState,\n    bigSearchBlockState: bigSearchBlockState,\n    mainMenuOriginState: mainMenuOriginState,\n    promotionsSmallBoxState: promotionsSmallBoxState,\n    newBlockState: newBlockState,\n    carouselState: carouselState,\n    subscribeBlockState: subscribeBlockState,\n    footerBlockState: footerBlockState,\n    setPromotions:(payload:{promotions:IPromotionItem[], promotions_big:IPromotionBigItem[]}) => {},\n    setNews:(payload:INewsItem[]) => {}\n}\n\nexport const profilePageState:IProfilePage = {\n    topNavBarState: topNavBarState,\n    mainMenuSimpleState: mainMenuSimpleState,\n    userState:userInitState,\n    cartState:cartState,\n    infoLayerState:infoLayerState,\n    removeProductFromCart:(payload:string) => {},\n    plusProductToCart:(payload:number) => {},\n    minusProductFromCart:(payload:number) => {},\n    showInfoLayer:(payload:any) => {},\n    clearCart:() => {},\n    setUserFullData:(payload:IUser) => {},\n    warehouses:[]\n}\n\nexport const defaultState:IRootApp = {\n    infoLayerState:infoLayerState,\n    topNavBarState:topNavBarState,\n    settings:{\n        id:0,\n        contact_cell_footer:[],\n        contact_cell_top:[],\n        facebook_link:\"\",\n        instagram_link:\"\",\n        youtube_link:\"\",\n        contact_email:\"\"\n    },\n    warehouses:[],\n    footerBlockState:footerBlockState,\n}\n\nexport const initialState = {\n    userState:userInitState,\n    searchState:searchInitState\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getWarehouseById } from '../redusers/initState';\nimport ActionButton from './ActionButton';\nimport { IProduct, IInfoLayer, IProductItem, IWarehouse } from '../types';\nimport { showInfoLayer, addProductToCart, addItemTopCart } from '../actions';\n\nexport interface SearchListItemProps {\n    id:string,\n    index:number,\n    name:string,\n    warehouse_id:string,\n    photoUrl:string,\n    price:number,\n    discount:number,\n    remain:number,\n    warehousesList:IWarehouse[],\n    showInfoLayer:(payload:any) => void,\n    addProductToCart:(payload:IProductItem) => void,\n    addItemTopCart:(payload:number) => void\n}\n\nexport interface SearchListItemState {\n    id:string,\n    index:number,\n    name:string,\n    warehouseId:string,\n    photoUrl:string,\n    price:number,\n    discount:number,\n    remain:number\n}\n\nconst mapStateToProps = (reducer:any, other:any) => {\n    return {\n        \n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        showInfoLayer: (payload:IInfoLayer) => {dispatch(showInfoLayer(payload))},\n        addProductToCart: (payload:IProductItem) => {dispatch(addProductToCart(payload))},\n        addItemTopCart: (payload:number) => {dispatch(addItemTopCart(payload))}\n    }\n}\n\nclass SearchListItemComponent extends React.Component<SearchListItemProps, SearchListItemState> {\n\n    constructor(props:SearchListItemProps, state:SearchListItemState) {\n        super(props, state)\n\n        this.addToCart = this.addToCart.bind(this)\n    }\n\n    addToCart() {\n        const {\n            id,\n            index,\n            name,\n            warehouse_id,\n            photoUrl,\n            price,\n            discount,\n            remain,\n            showInfoLayer,\n            addProductToCart,\n            addItemTopCart\n        } = this.props\n        showInfoLayer({\n            text:`${name} успішно додано до списку бронювання`,\n            timer:1,\n        })\n        const newProduct:IProductItem = {\n            id, index, name, warehouse_id,\n            photo_url:photoUrl,\n            discount, remain, price,\n            count:1\n        }\n        addProductToCart(newProduct)\n        addItemTopCart(newProduct.count)\n    }\n\n    render() {\n        const {\n            id, index, name, warehouse_id, photoUrl, price,\n            discount, remain, warehousesList\n        } = this.props\n        const warehouse = getWarehouseById(warehouse_id, warehousesList)\n        return (\n            <tr key={id}>\n                <td>{name}</td>\n                <td>{`#${warehouse.uuid} ${warehouse.name}`}</td>\n                <td>{price}</td>\n                <td>{remain}</td>\n                <td>\n                    <ActionButton\n                        text={\"Забронювати\"}\n                        iconName=\"\"\n                        iconSvgSrc=\"\"\n                        classList={[\"addToCart\"]}\n                        action={this.addToCart}\n                    />\n                </td>\n            </tr>\n        )\n    }\n}\n\nconst SearchListItem = connect(null, mapDispatchToProps)(SearchListItemComponent)\n\nexport default SearchListItem","import React from 'react';\nimport { connect } from 'react-redux';\nimport SearchListItem, { SearchListItemProps } from './SearchListItem';\nimport { IWarehouse } from '../types';\n\ninterface SearchListProps {\n    products:Array<SearchListItemProps>,\n    isProductsLoaded:boolean,\n    warehousesList:IWarehouse[],\n}\n\ninterface SearchListState {\n    products:Array<SearchListItemProps>\n}\n\nconst XOR = (a:boolean,b:boolean) => {\n    return !( ( a && !b ) || ( !a && b ) )\n}\n\nconst mapStateToProps = (reducer:any, other:any) => {\n    const { \n        products,\n        isRequestSended,\n        isResponseRecieved\n    } = reducer.SearchReducer.productsRequestState\n    const isProductsLoaded = XOR(isRequestSended, isResponseRecieved)\n    return {\n        products, isProductsLoaded\n    }\n}\n\nclass SearchListComponent extends React.Component<SearchListProps, SearchListState> {\n\n    render() {\n        const {\n            products, isProductsLoaded, warehousesList\n        } = this.props\n\n        if (isProductsLoaded)\n            return (\n                <tbody>\n                    {products.map((product:SearchListItemProps, index:number) => {\n                        return (\n                            <SearchListItem \n                                key={index}\n                                id={product.id}\n                                index={index}\n                                name={product.name}\n                                warehouse_id={product.warehouse_id}\n                                photoUrl={product.photoUrl}\n                                price={product.price}\n                                discount={product.discount}\n                                remain={product.remain}\n                                warehousesList={warehousesList}\n                            />\n                        )   \n                    })}\n                </tbody>\n            )\n        else\n            return (\n                <h1>No results</h1>\n            )\n    }\n}\n\nconst SearchList = connect(mapStateToProps)(SearchListComponent)\n\nexport default SearchList\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISearchForm, IHandleSearch } from '../types'\nimport ActionButton from './ActionButton';\n// import { warehouses } from '../redusers/initState';\n\nconst XOR = (a:boolean,b:boolean) => {\n    return !( ( a && !b ) || ( !a && b ) )\n}\n\nconst mapStateToProps = (reducer:any):ISearchForm => {\n    const { searchFormState } = reducer.SearchReducer\n    const { warehouses } = reducer.DefaultReducer\n    return {\n        ...searchFormState,\n        warehouses,\n    }\n}\n\ninterface ISearchFormFilter extends ISearchForm {\n    selectedFilter:string\n}\n\ninterface ISearchFormCustom extends ISearchForm {\n    action:IHandleSearch\n}\n\n// const dispatchToProps = (dispatch:any) => {\n//     return {\n//         getProductsInSearch: (searchKey:string) => dispatch(getProductsInSearch(searchKey)),\n//         getProductsFake: (searchKey:string) => dispatch(getProductsFake(searchKey))\n//     }\n// }\n\nclass SearchFormComponent extends React.Component<ISearchFormCustom, ISearchFormFilter> {\n\n    constructor(props:ISearchFormCustom, state:ISearchFormFilter) {\n        super(props, state)\n\n        this.state = {\n            ...props,\n            selectedFilter:\"У всіх Аптеках\"\n        }\n\n        this.handleSearchFormSubmit = this.handleSearchFormSubmit.bind(this)\n        this.handleSearchFieldChange = this.handleSearchFieldChange.bind(this)\n        this.handleFilterChange = this.handleFilterChange.bind(this)\n        this.handleSearch = this.handleSearch.bind(this)\n\n        const search = window.location.search\n        const params = new URLSearchParams(search)\n        const searchInput = params.get('searchKey')\n        const selectedFilter = params.get('selectedFilter')\n\n        const { action } = this.props\n        this.handleSearch(\n            searchInput === null ? \"\" : searchInput,\n            selectedFilter === null ? \"У всіх Аптеках\" : selectedFilter,\n            action\n        )\n\n    }\n\n    // componentDidMount() {\n    //     const search = window.location.search\n    //     const params = new URLSearchParams(search)\n    //     const searchInput = params.get('searchKey')\n    //     const selectedFilter = params.get('selectedFilter')\n\n    //     const { action } = this.props\n    //     this.handleSearch(\n    //         searchInput === null ? \"\" : searchInput,\n    //         selectedFilter === null ? \"У всіх Аптеках\" : selectedFilter,\n    //         action\n    //     )\n    // }\n\n    handleSearch(searchInput:string, selectedFilter:string, action:IHandleSearch) {\n        action(searchInput, selectedFilter)\n        // this.setState({\n        //     searchInput: \"\"\n        // })\n    }\n\n    handleSearchFormSubmit(event:React.FormEvent<HTMLFormElement>):void {\n        event.preventDefault()\n        const { searchInput, selectedFilter } = this.state\n        const { action } = this.props\n        this.handleSearch(searchInput, selectedFilter, action)\n    }\n\n    handleSearchFieldChange(event:React.ChangeEvent<HTMLInputElement>):void {\n        event.preventDefault()\n        this.setState({\n            searchInput: event.target.value\n        })\n    }\n\n    handleFilterChange(event:React.ChangeEvent<HTMLSelectElement>):void {\n        this.setState({\n            selectedFilter: event.target.value\n        })\n    }\n\n    render() {\n        const { searchInput, warehouses } = this.state\n        return (\n            <div className=\"SearchForm\">\n                <div className=\"content standart-container\">\n                    <h1 className=\"title\">Пошук</h1>\n\n                    <div className=\"input-group standart-container\">\n                        <input\n                            type=\"text\"\n                            id=\"searchInput\"\n                            value={searchInput}\n                            className=\"form-control\"\n                            aria-label=\"Sarch in warehouses\"\n                            onChange={this.handleSearchFieldChange}\n                            placeholder=\"Введіть назву товару\"\n                        />\n                        <select className=\"custom-select\" id=\"inputGroupSelect04\"\n                            aria-label=\"Example select with button addon\"\n                            onChange={this.handleFilterChange}\n                            >\n                            <option selected>У всіх Аптеках</option>\n                            {warehouses.map((warehouse, index) => {\n                                return (\n                                    <option key={`warehouse-${index}`} value={warehouse.uuid}>\n                                        {`№${warehouse.uuid} ${warehouse.name}`}\n                                    </option>\n                                )\n                            })}\n                        </select>\n                        <div className=\"input-group-append\">\n                            <ActionButton\n                                text=\"Шукати\"\n                                classList={[\"default-button\"]}\n                                action={this.handleSearchFormSubmit}\n                                iconName=\"\"\n                                iconSvgSrc=\"\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst SearchForm = connect(mapStateToProps)(SearchFormComponent)\n\nexport default SearchForm","import React from 'react'\nimport { connect } from 'react-redux'\nimport SearchList from './SearchList'\nimport SearchForm from './SearchForm'\nimport { IHandleSearch, IWarehouse } from '../types'\n\ninterface SearchBlockProps {\n    products:Array<any>,\n    isRequestSended:boolean,\n    isResponseRecieved:boolean,\n    searchInput:string,\n    searchFormSubmitted:boolean,\n    handleSearch:IHandleSearch,\n    warehousesList:IWarehouse[]\n}\n\ninterface SearchBlockState {\n\n}\n\nconst mapStateToProps = (reducer:any, other:any) => {\n    const { SearchReducer } = reducer\n    const { warehouses } = reducer.DefaultReducer\n    const { productsRequestState, searchFormState } = SearchReducer\n    const { products, isRequestSended, isResponseRecieved } = productsRequestState\n    const { searchFormSubmitted, searchInput } = searchFormState\n    return {\n        products, isRequestSended, isResponseRecieved,\n        searchInput, searchFormSubmitted,\n        warehousesList:warehouses\n    }\n}\n\nconst SearchTableHeader = () => {\n    return(\n        <thead className=\"thead-dark\">\n            <tr>\n                <th>Назва Товару</th>\n                <th>Аптека</th>\n                <th>Ціна</th>\n                <th>Кількість</th>\n                <th></th>\n            </tr> \n        </thead>\n    )\n}\n\nconst XOR = (a:boolean,b:boolean) => {\n    return !( ( a && !b ) || ( !a && b ) )\n}\n\nclass SearchBlock extends React.Component<SearchBlockProps, SearchBlockState> {\n    render() {\n        const {\n            products,\n            isRequestSended,\n            isResponseRecieved,\n            handleSearch,\n            warehousesList\n        } = this.props\n\n        const isProductsLoaded = XOR(isRequestSended, isResponseRecieved)\n\n        return (\n            <div className=\"SearchBlock\">\n                <SearchForm action={handleSearch}/>\n                <table className=\"table standart-container\">\n                    <SearchTableHeader />\n                    <SearchList\n                        products={products}\n                        isProductsLoaded={isProductsLoaded}\n                        warehousesList={warehousesList}\n                    />\n                </table>     \n            </div>\n            \n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SearchBlock)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IMainMenuData } from '../types';\nimport { Link } from 'react-router-dom';\n\nconst getItemClasses = (isItemActive:boolean):string => {\n    return isItemActive ? \"nav-item active\": \"nav-item\"\n}\n\nconst addSpanForSR = (isItemActive:boolean) => {\n    if (isItemActive)\n        return (\n            <span className=\"sr-only\">(current)</span>\n        )\n}\n\n\nconst MainMenuSimple = ({items, logoUrl}:IMainMenuData) => {\n    return (\n        <div className=\"MainMenuSimple\">\n            <div className=\"row standart-container menu\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            <img src={logoUrl} alt=\"Logo\"/>\n                        </a>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav nav\">\n                            {items.map( (item, index) => {\n                                return (\n                                    <li key={index} className={getItemClasses(false)}>\n                                        <Link className=\"nav-link\" to={item.url}>\n                                            {item.name}\n                                            {addSpanForSR(false)}\n                                        </Link>\n                                    </li>\n                                )\n                            })}\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(MainMenuSimple)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISearchState, IInfoLayer } from '../types';\nimport { showInfoLayer, hideInfoLayer } from '../actions';\nimport { Animated } from \"react-animated-css\"\n\n\nconst mapStateToProps = (rootReducer:ISearchState, props:IInfoLayer):IInfoLayer => {\n    const { infoLayerState } = rootReducer\n    return {\n        ...infoLayerState\n    }\n}\n\nconst mapDispathToProps = (dispatch:any) => {\n    return {\n        showInfoLayer: (payload:IInfoLayer) => dispatch(showInfoLayer(payload)),\n        hideInfoLayer: () => dispatch(hideInfoLayer())\n    }\n}\n\nconst InfoLayer = ({text, timer, active, hideInfoLayer }:IInfoLayer) => {\n    let animationIDuration:number\n    let animationInDelay:number\n    let animationOutDuration:number\n    if (active && timer !== 0) {\n        setTimeout( () => {\n            hideInfoLayer()\n        }, (timer * 1000) + 600)\n        animationIDuration = 300\n        animationOutDuration = 300\n        animationInDelay = 0\n    } else if (!active && timer !== 0) {\n        animationIDuration = 300\n        animationOutDuration = 300\n        animationInDelay = 0\n    } else {\n        animationIDuration = 0\n        animationOutDuration = 0\n        animationInDelay = 300\n    }\n    \n    return (\n        <Animated\n            animationIn=\"fadeIn\"\n            animationOut=\"fadeOut\"\n            isVisible={active}\n            animationOutDuration={animationOutDuration}\n            animationInDuration={animationIDuration}\n            animationInDelay={animationInDelay}\n        >\n            <div className=\"InfoLayer\">\n                <div className=\"wrapper\">\n                    <div className=\"block\">\n                        <p className=\"text\">{text}</p>\n                    </div>\n                </div>\n            </div>\n        </Animated>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(InfoLayer)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { mainMenuSimpleState } from '../redusers/initState'\nimport { \n    getProductsRequestSended,\n    setProductsSuccess\n} from '../actions'\nimport SearchBlock from '../components/SearchBlock'\nimport axios from 'axios'\nimport { ISearchState } from '../types'\nimport MainMenuSimple from '../components/MainMenuSimple'\nimport InfoLayer from '../components/InfoLayer'\nimport { GET_PRODUCTS_URL } from '../constants';\n\n\n// interface SearchProps extends ISearchState {\n//     getProductsRequestSended: IAction,\n//     setProductsSuccess: IActionPayload\n// }\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        getProductsRequestSended: () => dispatch(getProductsRequestSended()),\n        setProductsSuccess: (products:any) => dispatch(setProductsSuccess(products))\n    }\n  }\n\nconst mapStateToProps = (reducer:any) => {\n    const { SearchReducer } = reducer\n    return {\n        ...SearchReducer\n    }\n}\n\n\nclass SearchPage extends React.Component<ISearchState, ISearchState> {\n\n    constructor(props:ISearchState, state:ISearchState) {\n        super(props, state)\n\n        this.state = {\n            ...props\n        }\n\n        this.handleSearch = this.handleSearch.bind(this)\n    }\n\n    // componentWillUnmount() {\n    //     const { cartState } = this.props\n    //     const cartStateJsonStr:string = JSON.stringify(cartState)\n    //     localStorage.setItem(\"cart\", cartStateJsonStr)\n    // }\n\n    handleSearch(searchKey:string, warehouse_id:string) {\n        const { \n            getProductsRequestSended,\n            setProductsSuccess\n        } = this.props\n        getProductsRequestSended()\n\n        let params:{[key:string]:any} = {\n            offset:0,\n            limit:10,\n            filter_name:searchKey,\n        }\n        if (warehouse_id === \"У всіх Аптеках\")\n            params[\"warehouses\"] = [1,2,3,4,5,6,7,8,9]\n        else\n            params[\"warehouses\"] = [warehouse_id]\n\n        axios.get(GET_PRODUCTS_URL, {\n            params\n        })\n        .then((response) => {\n            if (response.data.code === 200) {\n                setProductsSuccess(response.data)    \n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\")\n            \n        })\n        .finally(() => {\n\n        })\n    }\n\n    render() {\n        const { productsRequestState, searchFormState, infoLayerState } = this.props\n        const { products, isRequestSended, isResponseRecieved } = productsRequestState\n        const { searchFormSubmitted, searchInput } = searchFormState\n\n        return (\n            <div className=\"search-page\">\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <SearchBlock\n                    products={products}\n                    isRequestSended={isRequestSended}\n                    isResponseRecieved={isResponseRecieved}\n                    searchInput={searchInput}\n                    searchFormSubmitted={searchFormSubmitted}\n                    handleSearch={this.handleSearch}\n                />\n                <InfoLayer {...infoLayerState}/>\n            </div>\n        )\n    }\n}\n\nconst Search = connect(mapStateToProps, mapDispatchToProps)(SearchPage)\n\nexport default Search;","import React from 'react'\nimport { connect } from 'react-redux'\nimport ActionButton from './ActionButton'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { setUserData } from '../actions'\nimport { REFRESH_TOKEN_URL, GET_USER_URL } from '../constants'\n\ninterface TopNavBarData {\n    phonesNumbers:string[],\n    isUserAuth:boolean,\n    cartOrdersCount:number,\n    userName:string,\n    setUserData:(payload:string) => void\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        setUserData: (payload:string) => {dispatch(setUserData(payload))}\n    }\n}\n\nconst mapStateToProps = (reducer:any):TopNavBarData => {\n    const { topNavBarState } = reducer.DefaultReducer\n    return {\n        ...topNavBarState\n    }\n}\n\nconst renderLoginRegister = () => {\n    return (\n        <div className=\"authBlock\">\n            <ActionButton\n                text={\"Увійти\"}\n                iconName=\"\"\n                action={() => {window.location.href=\"/login\"}}\n                classList={[\"svg-icon\"]}\n                iconSvgSrc=\"/static/svg/user.svg\"\n            />\n            <ActionButton\n                text={\"Зареєструватися\"}\n                iconName=\"\"\n                action={() => {window.location.href=\"/register\"}}\n                classList={[\"svg-icon\"]}\n                iconSvgSrc=\"/static/svg/user.svg\"\n            />\n        </div>\n    )\n}\n\nconst renderUserStatus = (name:string) => {\n    return (\n        <div className=\"authBlock\">\n            <div></div>\n            <div className=\"user-status\">\n                <span>{name}</span>\n            </div>\n        </div>\n    )\n}\n\nconst renderAuth = (isUserAuth:boolean, userName:string) => {\n    if (isUserAuth)\n        return renderUserStatus(userName)\n    else\n        return renderLoginRegister()\n}\n\nconst handleRefreshToken = (refreshToken:string) => {\n    axios.post(REFRESH_TOKEN_URL, {\n        refresh:refreshToken\n    })\n    .then((response) => {\n        if (response.status === 200) {\n            const { access } = response.data\n            localStorage.setItem(\"accessToken\", access)\n            window.location.reload()\n        }\n    })\n    .catch((error) => {\n        console.log(\"ERROR\", error)\n    })\n    .finally(() => {\n\n    })\n}\n\nconst getUserInfo = (\n        accessToken:string,\n        refreshToken:string,\n        refreshCallBack:(refreshToken:string) => void,\n        setUserDataAction:(payoad:string) => void\n    ) => {\n    axios.get(GET_USER_URL, {\n        headers: {Authorization: \"Bearer \" + accessToken}\n    })\n    .then((response) => {\n        if (response.status === 200) {\n            const { fname, lname, email} = response.data\n            const userName = email\n            localStorage.setItem(\"userName\", userName)\n            setUserDataAction(userName)\n        } else if (response.status === 401) {\n            // refreshCallBack(refreshToken)\n            // TODO:\n            localStorage.removeItem(\"accessToken\")\n            localStorage.removeItem(\"refreshToken\")\n            window.location.href = \"/login\"\n        }\n    })\n    .catch((error) => {\n        console.log(\"ERROR\", error)\n    })\n    .finally(() => {\n\n    })\n}\n\nconst checkUserData = (setUserData:(payload:string) => void) => {\n    const userName = localStorage.getItem(\"userName\")\n    if (!userName) {\n        const accessToken = localStorage.getItem(\"accessToken\")\n        const refreshToken = localStorage.getItem(\"refreshToken\")\n\n        if (accessToken && refreshToken) {\n            getUserInfo(\n                accessToken,\n                refreshToken,\n                handleRefreshToken,\n                setUserData\n            )\n        }\n    } else {\n        setUserData(userName)\n    }\n}\n\nconst TopNavBar = ({phonesNumbers, isUserAuth, cartOrdersCount, setUserData, userName}:TopNavBarData) => {\n    checkUserData(setUserData)\n    return (\n        <div className=\"TopNavBar\">\n            <div className=\"left-block TopNavBar-block\">\n                <div className=\"phones\">\n                    <span>Аптечна довідка:</span>\n                    {phonesNumbers.map((phone, index) => {\n                        return (\n                            <span className=\"phoneNumber\" key={index}>{phone}</span>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"right-block TopNavBar-block\">\n                {renderAuth(isUserAuth, userName)}\n                <Link to=\"/profile\">\n                    <ActionButton\n                        text={`Ваш кошик: ${cartOrdersCount} товарів`}\n                        iconName=\"\"\n                        iconSvgSrc=\"/static/svg/basket.svg\"\n                        action={() => {}}\n                        classList={[\"cart\", \"svg-icon\"]}\n                    />\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavBar)","import React from 'react';\n\ninterface BottomFooterBlockData {\n    text:string\n}\n\nconst BottomFooterBlock = ({ text }:BottomFooterBlockData) => {\n    return (\n        <div className=\"BottomFooterBlock\">\n            <span className=\"copyright\">{text}</span>\n        </div>\n    )\n}\n\nexport default BottomFooterBlock","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IMainMenuData } from '../types';\nimport { Link } from 'react-router-dom';\n\n\nconst FooterMenu = ({ items, logoUrl }:IMainMenuData) => {\n    return (\n        <div className=\"FooterMenu\">\n            <div className=\"Logo\">\n                <img src={logoUrl} alt=\"Logo\"/>\n            </div>\n            <ul className=\"nav flex-column menu\">\n                {items.map( (item, index) => {\n                    return (\n                        <li key={index} className=\"nav-item menuItem\">\n                            <Link className=\"nav-link menuLink\" to={item.url}>\n                                {item.name}\n                            </Link>\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default connect()(FooterMenu)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IContactsList } from '../types';\n\n\nconst FooterContacts = ({ items, title }:IContactsList) => {\n    return (\n        <div className=\"FooterContacts\">\n            <h2 className=\"footerHeader\">{title}</h2>\n            <ul className=\"contacts\">\n                {items.map( (item, index) => {\n                    return (\n                        <li key={index}>{item}</li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default connect()(FooterContacts)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISocialList } from '../types';\n\n\nconst FooterSocial = ({ items, title }:ISocialList) => {\n    return (\n        <div className=\"FooterSocial\">\n            <h2 className=\"footerHeader\">{title}</h2>\n            <div className=\"social\">\n                {items.map( (item, index) => {\n                    return (\n                        <a key={index} href={item.link}>\n                            <img src={`/static/svg/${item.iconName}.svg`} alt=\"\"/>\n                        </a>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(FooterSocial)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IBackForm } from '../types';\n\nclass FooterBackForm extends React.Component<IBackForm, IBackForm> {\n\n    handleSearchFormSubmit() {\n\n    }\n\n    render() {\n        const { title } = this.props\n        return (\n            <div className=\"FooterBackForm\">\n                <h2 className=\"footerHeader\">\n                    {title}\n                </h2>\n\n                <form className=\"form\" onSubmit={this.handleSearchFormSubmit}>\n\n                    <input \n                        type=\"text\"\n                        className=\"searchFormField\"\n                        id=\"backFormName\"\n                        value=\"\"\n                        placeholder=\"Ваше Ім’я\"\n                    />\n\n                    <input \n                        type=\"text\"\n                        className=\"searchFormField\"\n                        id=\"backFormCell\"\n                        value=\"\"\n                        placeholder=\"Телефон\"\n                    />\n\n                    <textarea\n                        id=\"backFormMessage\"\n                        value=\"\"\n                        name=\"\"\n                        cols={30}\n                        rows={3}\n                        placeholder=\"Повідомлення\"\n                    />\n\n                    <button type=\"submit\">Надіслати</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect()(FooterBackForm)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IFooterBlock, IRootApp } from '../types';\nimport FooterMenu from './FooterMenu';\nimport FooterContacts from './FooterContacts';\nimport FooterSocial from './FooterSocial';\nimport FooterBackForm from './FooterBackForm';\n\nconst mapStateToProps = (reducer:any):IFooterBlock => {\n    const { footerBlockState } = reducer.DefaultReducer\n    return {\n      ...footerBlockState\n    }\n}\n\nconst FooterBlock = ({\n    footerMenu, contactsList, socialList, backForm\n}:IFooterBlock) => {\n    return (\n        <div className=\"FooterBlock standart-container\">\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <FooterMenu {...footerMenu}/>\n                </div>\n                <div className=\"col-md-3\">\n                    <FooterContacts {...contactsList}/>\n                </div>\n                {/* <div className=\"col-md-3\">\n                    <FooterSocial {...socialList}/>\n                </div>\n                <div className=\"col-md-3\">\n                    <FooterBackForm {...backForm}/>\n                </div> */}\n\n                <div className=\"col-md-6\">\n                    <div className=\"row\">\n                        <div className=\"col-md-5\">\n                            <FooterSocial {...socialList}/>\n                        </div>\n                        <div className=\"col-md-7\">\n                            <FooterBackForm {...backForm}/>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps)(FooterBlock)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { IHomePage } from '../types/Interfaces'\nimport MainMenuBig from '../components/MainMenuBig'\n\n\nclass NotFoundPage extends React.Component<IHomePage, IHomePage> {\n    render() {\n        const {\n            mainMenuOriginState\n        } = this.props\n        return (\n            <div className=\"NotFoundPage\">\n                <MainMenuBig {...mainMenuOriginState}/>\n                <h1 className=\"code\">404</h1>\n                <h2 className=\"text\">Сторінки не існує</h2>\n            </div>\n        )\n    }\n}\n\nexport default connect()(NotFoundPage)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\n\ninterface IBreadcrumbpPage {\n    name:string,\n    url:string|null\n}\n\ninterface IBreadcrumbp {\n    pages:IBreadcrumbpPage[]\n}\n\nconst renderLink = (page:IBreadcrumbpPage) => {\n    if (page.url) {\n        return (\n            <Link to={page.url}>{page.name}</Link>\n        )\n    } else {\n        return (\n            <span>{page.name}</span>\n        )\n    }\n}\n\nconst renderDivider = (index:number, length:number) => {\n    if (index !== length - 1) {\n        return (\n            <span>/</span>\n        )\n    } else {\n        return (\n            <span></span>\n        )\n    }\n}\n\nconst Breadcrumbp = ({pages}:IBreadcrumbp) => {\n    const length = pages.length\n    return (\n        <p className=\"breadCrumpb\">\n            {pages.map( (page, index) => {\n                return (\n                    <span key={index}>\n                        {renderLink(page)}{renderDivider(index, length)}\n                    </span>\n                )\n            })}\n        </p>\n    )\n}\n\nexport default connect()(Breadcrumbp)","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainMenuSimple from '../components/MainMenuSimple'\nimport { IProfilePage, IInfoLayer, IWarehouse, IUser } from '../types'\nimport ActionButton from '../components/ActionButton'\nimport { getWarehouseById } from '../redusers/initState'\nimport axios from 'axios'\nimport {\n    removeProductFromCart,\n    plusProductToCart,\n    minusProductFromCart,\n    showInfoLayer,\n    clearCart,\n    setUserFullData\n} from '../actions'\nimport InfoLayer from '../components/InfoLayer'\nimport Breadcrumbp from '../components/Breadcrumbp'\nimport { ORDERS_URL, GET_USER_URL } from '../constants'\n\ninterface IProductData {\n    id:string,\n    quantity:number\n}\n\ninterface IOrderRequest {\n    warehouse_id:string,\n    products:IProductData[]\n}\n\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        removeProductFromCart: (payload:string) => {dispatch(removeProductFromCart(payload))},\n        plusProductToCart: (payload:number) => {dispatch(plusProductToCart(payload))},\n        minusProductFromCart: (payload:number) => {dispatch(minusProductFromCart(payload))},\n        showInfoLayer: (payload:IInfoLayer) => {dispatch(showInfoLayer(payload))},\n        clearCart: () => {dispatch(clearCart())},\n        setUserFullData: (payload:IUser) => {dispatch(setUserFullData(payload))}\n    }\n}\n\nconst mapStateToProps = (reducer:any) => {\n    const { ProfileReducer, SearchReducer, DefaultReducer } = reducer\n    return {\n        ...ProfileReducer,\n        cartState:SearchReducer.cartState,\n        topNavBarState:SearchReducer.topNavBarState,\n        infoLayerState:SearchReducer.infoLayerState,\n        warehouses:DefaultReducer.warehouses\n    }\n}\n\nconst renderUserPhoto = (photoUrl:string) => {\n    if (photoUrl)\n        return (\n            <img src={photoUrl} alt=\"user photo\"/>\n        )\n    else\n        return (\n            <img src=\"/static/images/user.png\" alt=\"user photo\"/>\n        )\n}\n\nclass Profile extends React.Component<IProfilePage, IProfilePage> {\n    constructor(props:IProfilePage, state:IProfilePage) {\n        super(props, state)\n\n        this.removeItemFromCart = this.removeItemFromCart.bind(this)\n        this.createOrder = this.createOrder.bind(this)\n        this.sendFinishMessage = this.sendFinishMessage.bind(this)\n    }\n\n    componentDidMount() {\n        const accessToken = localStorage.getItem(\"accessToken\")\n        axios.get(GET_USER_URL, {\n            headers: {Authorization: \"Bearer \" + accessToken}\n        })\n        .then((response) => {\n            if (response.status === 200) {\n                const { setUserFullData } = this.props\n                setUserFullData(response.data)\n            }\n        })\n        .catch((error) => {\n            window.location.href = \"/login\"\n        })\n        .finally(() => {\n\n        })\n    }\n\n    sendFinishMessage(warehousesError:string[]) {\n        const { showInfoLayer, warehouses } = this.props\n        let text:string = \"Деякі товари з вашого списку не вдалось забронювати: \\n\"\n\n        if (warehousesError.length === 0) {\n            showInfoLayer({\n                text:\"Вітаємо, ви успішно здійснили бронювання, найблищим часом наш працівник зателефонує вам для уточнення деталей\",\n                timer:2,\n            })\n        } else {\n            let warehouse:IWarehouse\n            for (let warehouseId of warehousesError) {\n                warehouse = getWarehouseById(warehouseId, warehouses)\n                text += `№${warehouseId} ${warehouse.name}`\n            }\n            showInfoLayer({\n                text,\n                timer:2,\n            })\n        }\n        const { clearCart } = this.props\n        clearCart()   \n    }\n\n    removeItemFromCart(itemId:string) {\n        const { removeProductFromCart } = this.props\n        removeProductFromCart(itemId)\n    }\n\n    createOrder() {\n        const { cartState } = this.props\n\n        let orders:{[key:string]:IOrderRequest} = {}\n        let ordersLength:number = 0\n\n        for (let productItem of cartState.products) {\n            if (orders[productItem.warehouse_id]) {\n                orders[productItem.warehouse_id].products.push({\n                    id:productItem.id,\n                    quantity:productItem.count\n                })\n                ordersLength++\n            } else {\n                orders[productItem.warehouse_id] = {\n                    warehouse_id:productItem.warehouse_id,\n                    products:[{\n                        id:productItem.id,\n                        quantity:productItem.count\n                    }]\n                }\n                ordersLength++\n            }\n        }\n\n        let finalOrders:IOrderRequest[] = []\n\n        for (let warehouseId in orders) {\n            finalOrders.push(orders[warehouseId])\n        }\n\n        const accessToken = localStorage.getItem(\"accessToken\")\n        const { showInfoLayer } = this.props\n\n\n        axios.post(ORDERS_URL, {\n            orders:finalOrders\n        }, {\n            headers: {Authorization: \"Bearer \" + accessToken}\n        })\n        .then((response) => {\n            if (response.status === 201) {\n                showInfoLayer({\n                    text:\"Вітаємо, ви успішно здійснили бронювання, найблищим часом наш працівник зателефонує вам для уточнення деталей\",\n                    timer:2,\n                })\n            } else {\n                showInfoLayer({\n                    text:\"Деякі товари з вашого списку не вдалось забронювати\",\n                    timer:2,\n                })\n            }\n        })\n        .catch((error) => {\n            showInfoLayer({\n                text:\"Помилка системи. Приносимо вибачення за тимчасові незручності\",\n                timer:2,\n            })\n        })\n        .finally(() => {\n            const { clearCart } = this.props\n            clearCart()  \n        })\n\n    }\n\n\n\n    render() {\n        const { mainMenuSimpleState, userState, cartState, infoLayerState, warehouses } = this.props\n        const { products, totalCount, totalPriceDiscount, totalPrice } = cartState\n\n        let price:string\n\n        if (totalPriceDiscount === -1)\n            price = totalPrice.toFixed(2)\n        else\n            price = totalPriceDiscount.toFixed(2)\n\n        return (\n            <div className=\"Profile\">\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <div className=\"header\">\n                    <div className=\"content standart-container\">\n                        <h1 className=\"title\">Мій кабінет</h1>\n                        <Breadcrumbp\n                            pages={[{\n                                name:\"Головна\",\n                                url:\"/\"\n                            },{\n                                name:\"Мій кабінет\",\n                                url:null\n                            }]}\n                        />\n                    </div>\n                </div>\n                <div className=\"body standart-container\">\n                    <div className=\"leftSidebar\">\n                        <div className=\"userPhoto\">\n                            {renderUserPhoto(userState.photoUrl)}\n                        </div>\n                        <div className=\"menu\">\n                            {/* <ul>\n                                <li>Мої Бронювання</li>\n                                <li>Ваучер на знижку</li>\n                                <li>Налаштування</li>\n                                <li>Історія Бронювань</li>\n                                <hr/>\n                                <li>Вихід</li>\n                            </ul> */}\n                        </div>\n                    </div>\n                    <div className=\"rightSidebar\">\n                        <div className=\"userBio\">\n                            <h1 className=\"userName\">{userState.fname} {userState.lname}</h1>\n                            <p className=\"userEmail\">{userState.email}</p>\n                            <p className=\"userCell\">{userState.cell}</p>\n                        </div>\n                        <div className=\"cartOrders\">\n                            <div className=\"info\">\n                                <span className=\"text\">{`Мої Бронювання (${totalCount}од. / ${price} грн)`}</span>\n                                <ActionButton\n                                    text={\"Підтвердити\"}\n                                    action={this.createOrder}\n                                    classList={[\"default-button\", \"button\"]}\n                                    iconName=\"\"\n                                    iconSvgSrc=\"\"\n                                />\n                            </div>\n\n                            <div className=\"ordersList cart\">\n                                <table className=\"table\">\n                                    <thead className=\"thead-dark\">\n                                        <tr>\n                                            <th>Назва Товару</th>\n                                            <th>Аптека</th>\n                                            <th>Ціна</th>\n                                            <th>Кількість</th>\n                                            <th></th>\n                                        </tr> \n                                    </thead>\n                                    <tbody>\n                                        {products.map( (product, index) => {\n                                            const { name, warehouse_id, price, count, id } = product\n                                            const warehouse = getWarehouseById(warehouse_id, warehouses)\n                                            return (\n                                                <tr key={index}>\n                                                    <td>{name}</td>\n                                                    <td>{`№${warehouse_id} ${warehouse.name}`}</td>\n                                                    <td>{price}</td>\n                                                    <td>{count}</td>\n                                                    <td>\n                                                        <ActionButton\n                                                            text=\"Delete\"\n                                                            iconName=\"\"\n                                                            iconSvgSrc=\"\"\n                                                            classList={[]}\n                                                            action={() => {this.removeItemFromCart(id)}}\n                                                        />\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })}\n                                    </tbody>\n                                </table>\n                            </div>\n\n                            {/* <div className=\"info\">\n                                <span className=\"text\">Мої Бронювання (2457.88 грн)</span>\n                                <ActionButton\n                                    text={\"Відмінити\"}\n                                    action={() => {}}\n                                    classList={[\"default-button\", \"button\"]}\n                                    iconName=\"\"\n                                    iconSvgSrc=\"\"\n                                />\n                            </div> */}\n\n                            {/* <div className=\"ordersList\">\n                                <table className=\"table\">\n                                    <thead className=\"thead-dark\">\n                                        <tr>\n                                            <th>Назва Товару</th>\n                                            <th>Аптека</th>\n                                            <th>Ціна</th>\n                                            <th>Кількість</th>\n                                            <th></th>\n                                        </tr> \n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>Стрепсілс б/цукру лимон льодяники №16</td>\n                                            <td>№12, Пасічна, 70</td>\n                                            <td>69.45</td>\n                                            <td>1</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Стрепсілс б/цукру лимон льодяники №16</td>\n                                            <td>№12, Пасічна, 70</td>\n                                            <td>69.45</td>\n                                            <td>1</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Стрепсілс б/цукру лимон льодяники №16</td>\n                                            <td>№12, Пасічна, 70</td>\n                                            <td>69.45</td>\n                                            <td>1</td>\n                                            <td></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n                <InfoLayer {...infoLayerState}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)","import React from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport Breadcrumbp from '../components/Breadcrumbp'\nimport MainMenuSimple from '../components/MainMenuSimple'\nimport { mainMenuSimpleState } from '../redusers/initState'\nimport { IRegisterForm } from '../types';\nimport { changeRegisterFormField, cleanRegisterForm } from '../actions';\nimport { REGISTER_USER } from '../constants';\n\n\nconst mapStateToProps = (reducer:any) => {\n    const { RegisterReducer } = reducer\n    return {\n        ...RegisterReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        changeRegisterFormField: (payload:{name:string, value:string}) => {dispatch(changeRegisterFormField(payload))},\n        cleanRegisterForm: () => {dispatch(cleanRegisterForm())}\n    }\n}\n\n\nclass Register extends React.Component<IRegisterForm, IRegisterForm> {\n\n    constructor(props:IRegisterForm, state:IRegisterForm) {\n        super(props, state)\n\n        this.handleFieldChange = this.handleFieldChange.bind(this)\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\n        this.registerUser = this.registerUser.bind(this)\n    }\n\n    handleFieldChange(event:React.ChangeEvent<HTMLInputElement>) {\n        event.preventDefault()\n        const { changeRegisterFormField } = this.props\n        changeRegisterFormField({\n            name:event.target.name,\n            value:event.target.value\n        })\n    }\n\n    registerUser() {\n        const { name, email, cell, password, cleanRegisterForm } = this.props\n        axios.post(REGISTER_USER, {\n            fname:name, email, cell, password\n        })\n        .then((response) => {\n            if (response.status === 201) {\n                cleanRegisterForm()\n                window.location.href = \"/login\"\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {\n\n        })\n    }\n\n    handleFormSubmit(event:React.FormEvent<HTMLFormElement>) {\n        event.preventDefault()\n        this.registerUser()\n    }\n\n    render() {\n        const { name, email, cell, password } = this.props\n        return (\n            <div className=\"Register\">\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <div className=\"header\">\n                    <div className=\"content standart-container\">\n                        <h1 className=\"title\">Реєстрація</h1>\n                        <Breadcrumbp\n                            pages={[{\n                                name:\"Головна\",\n                                url:\"/\"\n                            },{\n                                name:\"Реєстрація\",\n                                url:null\n                            }]}\n                        />\n                    </div>\n                </div>\n                <div className=\"body standart-container\">\n                    <form className=\"form\" onSubmit={this.handleFormSubmit}>\n                        <div className=\"form-group\">\n                            <label>Ім’я</label>\n                            <input onChange={this.handleFieldChange} value={name} name=\"name\" type=\"text\" className=\"form-control\" id=\"inputName\" placeholder=\"\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Електронна Скринька</label>\n                            <input onChange={this.handleFieldChange} value={email} name=\"email\" type=\"email\" className=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Email\" />\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Контактний Номер</label>\n                            <input onChange={this.handleFieldChange} value={cell} type=\"text\" name=\"cell\" className=\"form-control\" id=\"inputCell\" placeholder=\"+38 000 000 00 00\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Пароль</label>\n                            <input onChange={this.handleFieldChange} value={password} type=\"password\" name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"********\" />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","import React from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport Breadcrumbp from '../components/Breadcrumbp'\nimport MainMenuSimple from '../components/MainMenuSimple'\nimport { mainMenuSimpleState } from '../redusers/initState'\nimport { ILoginForm } from '../types';\nimport { changeLoginFormField, cleanLoginForm } from '../actions';\nimport { LOGIN_URL } from '../constants';\n\n\nconst mapStateToProps = (reducer:any) => {\n    const { LoginReducer } = reducer\n    return {\n        ...LoginReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        changeLoginFormField: (payload:{name:string, value:string}) => {dispatch(changeLoginFormField(payload))},\n        cleanLoginForm: () => {dispatch(cleanLoginForm())}\n    }\n}\n\n\nclass Login extends React.Component<ILoginForm, ILoginForm> {\n\n    constructor(props:ILoginForm, state:ILoginForm) {\n        super(props, state)\n\n        this.handleFieldChange = this.handleFieldChange.bind(this)\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\n        this.loginUser = this.loginUser.bind(this)\n    }\n\n    handleFieldChange(event:React.ChangeEvent<HTMLInputElement>) {\n        event.preventDefault()\n        const { changeLoginFormField } = this.props\n        changeLoginFormField({\n            name:event.target.name,\n            value:event.target.value\n        })\n    }\n\n    loginUser() {\n        const { email, password, cleanLoginForm } = this.props\n        axios.post(LOGIN_URL, {\n            email, password\n        })\n        .then((response) => {\n            if (response.status === 200) {\n                const { access, refresh } = response.data\n                localStorage.setItem(\"accessToken\", access)\n                localStorage.setItem(\"refreshToken\", refresh)\n                cleanLoginForm()\n                window.location.href = \"/\"\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {\n\n        })\n    }\n\n    handleFormSubmit(event:React.FormEvent<HTMLFormElement>) {\n        event.preventDefault()\n        this.loginUser()\n    }\n\n    render() {\n        const { email, password } = this.props\n        return (\n            <div className=\"Register\">\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <div className=\"header\">\n                    <div className=\"content standart-container\">\n                        <h1 className=\"title\">Вхід</h1>\n                        <Breadcrumbp\n                            pages={[{\n                                name:\"Головна\",\n                                url:\"/\"\n                            },{\n                                name:\"Вхід\",\n                                url:null\n                            }]}\n                        />\n                    </div>\n                </div>\n                <div className=\"body standart-container\">\n                    <form className=\"form\" onSubmit={this.handleFormSubmit}>\n                        <div className=\"form-group\">\n                            <label>Електронна Скринька</label>\n                            <input onChange={this.handleFieldChange} value={email} name=\"email\" type=\"email\" className=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Email\" />\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Пароль</label>\n                            <input onChange={this.handleFieldChange} value={password} type=\"password\" name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"********\" />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainMenuSimple from '../components/MainMenuSimple';\nimport { mainMenuSimpleState } from '../redusers/initState';\nimport Breadcrumbp from '../components/Breadcrumbp';\n\n\nconst ForClients = () => {\n    return (\n        <div className=\"ForClients\">\n            <MainMenuSimple { ...mainMenuSimpleState }/>\n            <div className=\"header\">\n                <div className=\"content standart-container\">\n                    <h1 className=\"title\">Оптовим Кліентам</h1>\n                    <Breadcrumbp\n                        pages={[{\n                            name:\"Головна\",\n                            url:\"/\"\n                        },{\n                            name:\"Оптовим клієнтам\",\n                            url:null\n                        }]}\n                    />\n                </div>\n            </div>\n\n            <div className=\"body standart-container\">\n                <h1 className=\"title\">Оптовим Кліентам</h1>\n                <div className=\"divider\"></div>\n                <div className=\"text\">\n                    <p>Як отримати Картку клієнта:\n                    Картку клієнта можна придбати в будь-якій аптеці мережі за ціною 5 гривень (знижка та нарахування балів на першу і наступні покупки) або отримати за акційною ціною 1 гривня після одноразової покупки на суму від 100 гривень (знижка і нарахування балів – на наступні покупки). </p>\n                    <p>За ціною 10 гривень можна отримати Картку клієнта у комплекті з двома міні-картками (картками-брелками). Усі картки з одного комплекту мають один номер, на який накопичуються «бали довіри». Використати (списати) бали можна тільки за основною Карткою.</p>\n                    <p>Як отримати Соціальну картку:\n                    Пенсіонери, особи з інвалідністю І та ІІ груп, ветерани війни та учасники бойових дій за умови пред’явлення посвідчення можуть придбати Соціальну картку за ціною 3 гривні (знижка та нарахування балів на першу і наступні покупки) або отримати за акційною ціною 1 гривня після одноразової покупки на суму від 100 гривень (знижка та нарахування балів – на наступні покупки).</p>\n                </div>\n                <div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(ForClients)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { INewsPage } from '../types'\nimport MainMenuSimple from '../components/MainMenuSimple'\nimport { mainMenuSimpleState } from '../redusers/initState'\nimport Breadcrumbp from '../components/Breadcrumbp'\nimport { Link } from 'react-router-dom'\nimport { setPromotions, setNews } from '../actions'\nimport { GET_PROMOTIONS_URL, GET_NEWS_URL } from '../constants'\nimport axios from 'axios'\nimport PromotionItem from '../components/PromotionItem';\n\n\nconst mapStateToProps = (reducer:any) => {\n    const { NewsReducer } = reducer\n    return {\n        ...NewsReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        setPromotions: (payload:any) => {dispatch(setPromotions(payload))},\n        setNews: (payload:any) => {dispatch(setNews(payload))}\n    }\n}\n\nclass News extends React.Component<INewsPage, INewsPage> {\n\n    constructor(props:INewsPage, state:INewsPage) {\n        super(props, state)\n\n        this.getPromotions = this.getPromotions.bind(this)\n        this.getNews = this.getNews.bind(this)\n    }\n\n    componentDidMount() {\n        this.getNews()\n        this.getPromotions()\n    }\n\n    getPromotions() {\n        const { setPromotions } = this.props\n        axios.get(GET_PROMOTIONS_URL, {})\n        .then((response) => {\n            if (response.status === 200) {\n                const { promotions, promotions_big } = response.data\n                setPromotions({promotions, promotions_big})\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {  \n        })\n    }\n\n    getNews() {\n        const { setNews } = this.props\n        axios.get(GET_NEWS_URL, {})\n        .then((response) => {\n            if (response.status === 200) {\n                setNews(response.data)\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {  \n        })\n    }\n\n    render() {\n        const { newsList, promotions } = this.props\n        return (\n            <div className=\"News\">\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <div className=\"header\">\n                    <div className=\"content standart-container\">\n                        <h1 className=\"title\">Новини</h1>\n                        <Breadcrumbp\n                            pages={[{\n                                name:\"Головна\",\n                                url:\"/\"\n                            },{\n                                name:\"Новини\",\n                                url:null\n                            }]}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"body standart-container\">\n                    <div className=\"leftBlock\">\n                    {newsList.map( (post, index) => {\n                        return (\n                            <div key={index} className=\"post\">\n                                <img className=\"image\" src={post.image} alt=\"\"/>\n                                <h1 className=\"title\">{post.title}</h1>\n                                <p className=\"date\">{post.date}</p>\n                                <p className=\"content\">{post.content_short}</p>\n                                <Link className=\"button\" to={`/news/${post.id}`}>Читати Далі</Link>\n                            </div>    \n                        )\n                    })}\n                    </div>\n                    <div className=\"rightBlock\">\n                    {promotions.map( (item, index) => {\n                        return (\n                            <PromotionItem key={index} {...item}/>\n                        )\n                    })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(News)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { INewsPostPage } from '../types'\nimport MainMenuSimple from '../components/MainMenuSimple'\nimport { mainMenuSimpleState } from '../redusers/initState'\nimport Breadcrumbp from '../components/Breadcrumbp'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { setPromotions, setNewsPost, setNews } from '../actions'\nimport { GET_PROMOTIONS_URL, GET_NEWS_URL } from '../constants'\nimport axios from 'axios'\nimport PromotionItem from '../components/PromotionItem';\nimport NewsItem from '../components/NewsItem';\n\n\ninterface RouteInfo {\n    postId: string;\n}\n\ninterface ComponentProps extends RouteComponentProps<RouteInfo>, INewsPostPage {\n}\n\nconst mapStateToProps = (reducer:any) => {\n    const { NewsPostReducer } = reducer\n    return {\n        ...NewsPostReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        setPromotions: (payload:any) => {dispatch(setPromotions(payload))},\n        setNewsPost: (payload:any) => {dispatch(setNewsPost(payload))},\n        setNews: (payload:any) => {dispatch(setNews(payload))}\n    }\n}\n\nclass NewsPost extends React.Component<ComponentProps, ComponentProps> {\n\n    constructor(props:ComponentProps, state:ComponentProps) {\n        super(props, state)\n\n        this.getPromotions = this.getPromotions.bind(this)\n        this.getNewsPost = this.getNewsPost.bind(this)\n        this.getNews = this.getNews.bind(this)\n    }\n\n    componentDidMount() {\n        this.getNewsPost()\n        this.getPromotions()\n        this.getNews()\n    }\n\n    getPromotions() {\n        const { setPromotions } = this.props\n        axios.get(GET_PROMOTIONS_URL, {})\n        .then((response) => {\n            if (response.status === 200) {\n                const { promotions, promotions_big } = response.data\n                setPromotions({promotions, promotions_big})\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {  \n        })\n    }\n\n    getNewsPost() {\n        const { setNewsPost, match } = this.props\n        axios.get(`${GET_NEWS_URL}${match.params.postId}`, {})\n        .then((response) => {\n            if (response.status === 200) {\n                setNewsPost(response.data)\n            } else {\n                window.location.href = \"/news\"\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n            window.location.href = \"/news\"\n        })\n        .finally(() => {  \n        })\n    }\n\n    getNews() {\n        const { setNews } = this.props\n        axios.get(GET_NEWS_URL, {})\n        .then((response) => {\n            if (response.status === 200) {\n                setNews(response.data)\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {  \n        })\n    }\n\n    render() {\n        const { newsPost, promotions, otherNews } = this.props\n        return (\n            <div className=\"News\">\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <div className=\"header\">\n                    <div className=\"content standart-container\">\n                        <h1 className=\"title\">Новини</h1>\n                        <Breadcrumbp\n                            pages={[{\n                                name:\"Головна\",\n                                url:\"/\"\n                            },{\n                                name:\"Новини\",\n                                url:null\n                            }]}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"banner\">\n                    <img className=\"image\" src={newsPost.image} alt=\"\"/>\n                </div>\n\n                <div className=\"body standart-container\">\n                    <div className=\"leftBlock\">\n\n                        <div className=\"post\">\n                            <h1 className=\"title\">{newsPost.title}</h1>\n                            <div className=\"divider\"></div>\n                            <p className=\"date\">{newsPost.date}</p>\n                            <p className=\"content\">{newsPost.content}</p>\n                        </div>   \n\n                    </div>\n                    <div className=\"rightBlock\">\n                    {promotions.map( (item, index) => {\n                        return (\n                            <PromotionItem key={index} {...item}/>\n                        )\n                    })}\n                    </div>\n                    \n                </div>\n\n                <h1 className=\"title\">Вас може зацікавити</h1>\n                <div className=\"divider\"></div>\n                <div className=\"itemsList standart-container\">\n                    {otherNews.map( (item, index) => {\n                        return (\n                            <NewsItem key={index} {...item}/>\n                        )\n                    })}\n                </div> \n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsPost)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setPromotions } from '../actions'\nimport { IPromotionsPage } from '../types'\nimport axios from 'axios'\nimport { GET_PROMOTIONS_URL, IMAGES_BACKEND } from '../constants';\nimport MainMenuSimple from '../components/MainMenuSimple';\nimport { mainMenuSimpleState } from '../redusers/initState';\nimport Breadcrumbp from '../components/Breadcrumbp';\nimport PromotionItem from '../components/PromotionItem';\nimport ActionButton from '../components/ActionButton';\n\nconst mapStateToProps = (reducer:any) => {\n    const { PromotionsReducer } = reducer\n    return {\n        ...PromotionsReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        setPromotions: (payload:any) => {dispatch(setPromotions(payload))}\n    }\n}\n\nconst redirectToSearch = (title:string) => {\n    window.location.href = `/search?searchKey=${title}`\n}\n\n\nclass PromotionsPage extends React.Component<IPromotionsPage, IPromotionsPage> {\n\n    constructor(props:IPromotionsPage, state:IPromotionsPage) {\n        super(props, state)\n\n        this.getPromotions = this.getPromotions.bind(this)\n    }\n\n    componentDidMount() {\n        this.getPromotions()\n    }\n\n    getPromotions() {\n        const { setPromotions } = this.props\n        axios.get(GET_PROMOTIONS_URL, {})\n        .then((response) => {\n            if (response.status === 200) {\n                const { promotions, promotions_big } = response.data\n                setPromotions({promotions, promotions_big})\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {  \n        })\n    }\n\n    render() {\n        const { promotions, promotions_big } = this.props\n        return (\n            <div className=\"Promotions\">\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <div className=\"header\">\n                    <div className=\"content standart-container\">\n                        <h1 className=\"title\">Новини</h1>\n                        <Breadcrumbp\n                            pages={[{\n                                name:\"Головна\",\n                                url:\"/\"\n                            },{\n                                name:\"Новини\",\n                                url:null\n                            }]}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"body standart-container\">\n                    <div className=\"promotions\">\n                        {promotions.map( (item, index) => {\n                            return (\n                                <PromotionItem key={index} {...item}/>\n                            )\n                        })}\n                    </div>\n                    <div className=\"PromotionBigItem\">\n                        {promotions_big.map( (item, index) => {\n                            return (\n                                <div key={index}>\n                                    <div className=\"contentBlock\">\n                                        <h1 className=\"name\">{item.title}</h1>\n                                        <h3 className=\"description\">{item.description}</h3>\n                                        <ActionButton\n                                            text={\"Додати до Кошика\"}\n                                            iconName=\"fas fa-cart-plus\"\n                                            iconSvgSrc=\"\"\n                                            classList={[\"default-button\"]}\n                                            action={() => {redirectToSearch(item.title)}}\n                                        />\n                                    </div>\n                                    <div className=\"imageBlock\">\n                                        <img src={`${IMAGES_BACKEND}${item.image}`} alt=\"photoUrl\"/>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PromotionsPage)","import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport './App.css';\nimport Home from './pages/Home';\nimport Search from './pages/Search';\nimport { \n  searchInitState,\n  // topNavBarState,\n  homePageState,\n  infoLayerState,\n  // footerBlockState\n} from './redusers/initState'\nimport store from './store';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { IAction, IActionPayload, IRootApp, ISettings, IWarehouse } from './types'\nimport TopNavBar from './components/TopNavBar';\nimport BottomFooterBlock from './components/BottomFooterBlock';\nimport FooterBlock from './components/FooterBlock';\nimport NotFoundPage from './pages/NotFoundPage';\nimport Profile from './pages/Profile';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport ForClients from './pages/ForClients';\nimport News from './pages/News';\nimport NewsPost from './pages/NewsPost';\nimport Promotions from './pages/Promotions';\nimport { GET_SETTINGS_URL } from './constants';\nimport { setSettings, setWarehouses } from './actions';\n\ninterface IRootAppAction {\n  setSettings:(payload:ISettings) => void,\n  setWarehouses:(payload:IWarehouse[]) => void\n}\n\n\n\nconst mapStateToProps = (reducer:any):IRootApp => {\n  const { DefaultReducer } = reducer\n  return {\n    ...DefaultReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n  return {\n    setSettings:(payload:ISettings) => {dispatch(setSettings(payload))},\n    setWarehouses:(payload:IWarehouse[]) => {dispatch(setWarehouses(payload))}\n  }\n}\n\n\nclass AppTemplate extends React.Component<IRootAppAction, IRootAppAction> {\n  constructor(props:IRootAppAction, state:IRootAppAction) {\n    super(props, state)\n    this.getSettings = this.getSettings.bind(this)\n\n    this.getSettings()\n  }\n\n  getSettings() {\n    const { setSettings, setWarehouses } = this.props\n    axios.get(GET_SETTINGS_URL, {})\n    .then((response) => {\n        if (response.data.code === 200) {\n          const {settings, warehouses} = response.data.data\n          setSettings(settings)\n          setWarehouses(warehouses)\n        }\n    })\n    .catch((error) => {\n        console.log(\"ERROR\", error)\n    })\n    .finally(() => {\n  \n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div className=\"App\">\n            <TopNavBar />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/search\" component={() =>\n                <Search\n                  {...searchInitState}\n                  // getProductsRequestSended={getProductsRequestSended}\n                  // setProductsSuccess={setProductsSuccess}\n                />\n              }/>\n              <Route path=\"/profile\" component={Profile} />\n              <Route path=\"/register\" component={Register}/>\n              <Route path=\"/login\" component={Login}/>\n              <Route path=\"/for-clients\" component={ForClients} />\n              <Route path=\"/news\" exact component={News} />\n              <Route path=\"/news/:postId\" component={NewsPost}/>\n              <Route path=\"/promotions\" exact component={Promotions} />\n              <Route path=\"/404\" exact component={NotFoundPage} />\n              <Redirect path=\"*\" to=\"/404\" />\n            </Switch>\n            <FooterBlock />\n            <BottomFooterBlock text={\"©2019 Аптека Знахар Львів\"}/>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\nconst AppConnected = connect(mapStateToProps, mapDispatchToProps)(AppTemplate)\n\nconst App = () => {\n  return (\n    <AppConnected />\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { \n  INIT_PRODUCTS_SEARCH,\n  SET_PRODUCTS_SEARCH,\n  SET_PRODUCTS_SEARCH_SUCCESS,\n  SET_PRODUCTS_SEARCH_FAIL,\n  SET_PRODUCTS_FAKE,\n  SHOW_INFO_BLOCK,\n  HIDE_INFO_BLOCK,\n  ADD_PRODUCT_TO_CART,\n  ADD_ITEM_TOP_CART,\n  REMOVE_PRODUCT_FROM_CART,\n  PLUS_PRODUCT_TO_CART,\n  MINUS_PRODUCT_TO_CART,\n  CLEAR_CART,\n  CHANGE_REGISTER_FORM_FIELD,\n  SUBMIT_REGISTER_FORM,\n  CLEAN_REGISTER_FORM,\n  CHANGE_LOGIN_FORM_FIELD,\n  CLEAN_LOGIN_FORM,\n  SET_USER_DATA,\n  SET_USER_FULL_DATA,\n  SET_PROMOTIONS,\n  SET_NEWS,\n  SET_NEWS_POST,\n  SET_SETTINGS,\n  SET_WAREHOUSES\n} from \"../actions/types\";\n\nimport {\n  searchInitState,\n  homePageState,\n  defaultState,\n  profilePageState,\n  registerForm,\n  loginForm,\n  newsPage,\n  newsPostPage,\n  promotionsPage\n} from './initState';\n\nimport { IHomePage, ISearchState, IProductItem, ICart, IProfilePage } from \"../types\";\n\n\nconst extractCell = (listOfCell:{phone:string}[]) => {\n  return listOfCell.map( (item) => {\n    return item.phone\n  })\n}\n\nexport const DefaultReducer = (state = defaultState, action:any) => {\n\n  if (action.type === ADD_ITEM_TOP_CART) {\n    const { topNavBarState } = state\n    return {\n      ...state,\n      topNavBarState: {\n        ...topNavBarState,\n        cartOrdersCount:topNavBarState.cartOrdersCount + action.payload\n      }\n    }\n  }\n\n  if (action.type === SET_USER_DATA) {\n    const { topNavBarState } = state\n    return {\n      ...state,\n      topNavBarState:{\n        ...topNavBarState,\n        isUserAuth:true,\n        userName:action.payload\n      }\n    }\n  }\n\n  if (action.type === SET_SETTINGS) {\n    const { topNavBarState, footerBlockState } = state\n    const { socialList } = footerBlockState\n    const newState = {\n      ...state,\n      topNavBarState:{\n        ...topNavBarState,\n        phonesNumbers:extractCell(action.payload.contact_cell_top)\n      },\n      footerBlockState:{\n        ...footerBlockState,\n        contactsList:{\n          title:\"Контактна інформація\",\n          items:extractCell(action.payload.contact_cell_footer)\n        },\n        socialList:{\n          ...socialList,\n          items:[{\n            iconName:\"facebook\",\n            link:action.payload.facebook_link\n          },{\n            iconName:\"instagram\",\n            link:action.payload.instagram_link\n          },{\n            iconName:\"youtube\",\n            link:action.payload.youtube_link\n          }]\n        }\n      }\n    }\n    return newState\n  }\n\n  if (action.type === SET_WAREHOUSES) {\n    const newState = {\n      ...state,\n      warehouses:action.payload\n    }\n    return newState\n  }\n\n  return state\n}\n\nexport const NewsPostReducer = (state = newsPostPage, action:any) => {\n\n  if (action.type === SET_PROMOTIONS) {\n    const { promotions } = action.payload\n    return {\n      ...state,\n      promotions\n      }\n  }\n\n  if (action.type === SET_NEWS_POST) {\n    return {\n      ...state,\n      newsPost:action.payload\n    }\n  }\n\n  if (action.type === SET_NEWS) {\n    return {\n      ...state,\n      otherNews:action.payload\n    }\n  }\n\n  return state\n}\n\nexport const PromotionsReducer = (state = promotionsPage, action:any) => {\n\n  if (action.type === SET_PROMOTIONS) {\n    const { promotions, promotions_big } = action.payload\n    return {\n      ...state,\n      promotions,\n      promotions_big\n      }\n  }\n\n  return state\n}\n\nexport const NewsReducer = (state = newsPage, action:any) => {\n\n  if (action.type === SET_PROMOTIONS) {\n    const { promotions } = action.payload\n    return {\n      ...state,\n      promotions\n      }\n  }\n\n  if (action.type === SET_NEWS) {\n    return {\n      ...state,\n      newsList:action.payload\n    }\n  }\n\n  return state\n}\n\nexport const HomeReducer = (state = homePageState, action:any):IHomePage => {\n  if (action.type === \"VOID\") {    \n    return {\n      ...state\n    }\n  }\n\n  if (action.type === SET_PROMOTIONS) {\n    const { promotions, promotions_big } = action.payload\n    return {\n      ...state,\n      promotionsSmallBoxState:{\n        promotionsSmallList:promotions,\n        promotionsBigList:promotions_big\n        }\n      }\n  }\n\n  if (action.type === SET_NEWS) {\n    const { newBlockState } = state\n    return {\n      ...state,\n      newBlockState:{\n        ...newBlockState,\n        newList:action.payload\n      }\n    }\n  }\n\n  return state\n}\n\nexport const ProfileReducer = (state = profilePageState, action:any):IProfilePage => {\n\n  if (action.type === SET_USER_FULL_DATA) {\n    return {\n      ...state,\n      userState:{\n        ...action.payload\n      }\n    }\n  }\n\n  return state\n}\n\n\nexport const SearchReducer = (state = searchInitState, action:any):ISearchState => {\n\n  if (action.type === INIT_PRODUCTS_SEARCH) {    \n    return {\n      ...state\n    }\n  }\n\n  if (action.type === CLEAR_CART) {\n    localStorage.removeItem(\"cart\")\n    return {\n      ...state,\n      cartState:{\n        products:[],\n        totalCount:0,\n        totalPrice:0,\n        totalPriceDiscount:-1\n      }\n    }\n  }\n\n  if (action.type === SET_PRODUCTS_FAKE) {    \n    const { searchFormState } = state\n    const { message, code, data, total } = action.payload\n    return {\n      ...state,\n      productsRequestState: {\n        message:message,\n        products:[{\n          id: \"1\",\n          index: 1,\n          name: action.payload,\n          photo_url: \"http://URL\",\n          warehouse_id: \"9\",\n          price: 100,\n          discount: 15,\n          remain: 102\n        }],\n        isRequestSended:true,\n        isResponseRecieved:true,\n        error:\"\",\n        code:0,\n        total:1\n      },\n      searchFormState: {\n        ...searchFormState,\n        searchFormSubmitted:false,\n        searchInput:\"\"\n      },\n    }\n  }\n\n  if (action.type === SET_PRODUCTS_SEARCH) {\n    const { productsRequestState, searchFormState } = state\n\n    return {\n      ...state,\n      productsRequestState: {\n        ...productsRequestState,\n        isRequestSended:true,\n        isResponseRecieved:false,\n      },\n      searchFormState: {\n        ...searchFormState,\n        searchFormSubmitted:true,\n        searchInput:\"\",\n      },\n    }\n  }\n\n  if (action.type === SET_PRODUCTS_SEARCH_SUCCESS) {\n    const { searchFormState } = state\n    const { message, code, data, total } = action.payload\n    return {\n      ...state,\n      productsRequestState: {\n        message:message,\n        products:data,\n        isRequestSended:true,\n        isResponseRecieved:true,\n        error:\"\",\n        code:code,\n        total:total\n      },\n      searchFormState: {\n        ...searchFormState,\n        searchFormSubmitted:false,\n        searchInput:\"\"\n      },\n    }\n  }\n\n  if (action.type === SET_PRODUCTS_SEARCH_FAIL) {\n    const { searchFormState } = state\n    const { message, code, error } = action.payload\n    return {\n      ...state,\n      productsRequestState: {\n        message:message,\n        products:[],\n        isRequestSended:true,\n        isResponseRecieved:true,\n        error:error,\n        code:code,\n        total:0\n      },\n      searchFormState: {\n        ...searchFormState,\n        searchFormSubmitted:false,\n        searchInput:\"\"\n      },\n    }\n  }\n\n  if (action.type === SHOW_INFO_BLOCK) {\n    const { infoLayerState } = state\n    const { text, timer } = action.payload\n    return {\n      ...state,\n      infoLayerState: {\n        ...infoLayerState,\n        text,\n        timer,\n        active:true\n      }\n    };\n  }\n\n  if (action.type === HIDE_INFO_BLOCK) {\n    const { infoLayerState } = state\n    return {\n      ...state,\n      infoLayerState: {\n        ...infoLayerState,\n        active:false\n      }\n    };\n  }\n\n  if (action.type === ADD_PRODUCT_TO_CART) {\n    const { cartState, topNavBarState } = state\n\n    let newProducts:IProductItem[] = []\n    let totalPrice:number = 0\n    let found:boolean = false\n\n    for (let product of cartState.products) {\n      if (product.id === action.payload.id &&\n          product.warehouse_id === action.payload.warehouse_id) {\n        newProducts.push({\n          ...product,\n          count: product.count + action.payload.count,\n        })\n        totalPrice += product.price + (action.payload.count * product.price)\n        found = true\n      } else {\n        newProducts.push(product)\n        totalPrice += product.price * product.count\n      }\n    }\n\n    if (!found) {\n      newProducts = newProducts.concat(action.payload)\n      totalPrice += action.payload.price * action.payload.count\n    }\n\n    const newCartState:ICart = {\n      products:newProducts,\n      totalCount:newProducts.length,\n      totalPrice:totalPrice,\n      totalPriceDiscount:-1\n    }\n\n    const cartStateJsonStr:string = JSON.stringify(newCartState)\n    localStorage.setItem(\"cart\", cartStateJsonStr)\n\n    const newState = {\n      ...state,\n      cartState: newCartState,\n      topNavBarState: {\n        ...topNavBarState,\n        cartOrdersCount:newProducts.length\n      }\n    }\n    return newState\n  }\n\n  if (action.type === PLUS_PRODUCT_TO_CART) {\n    const { cartState, topNavBarState } = state\n\n    let newProducts:IProductItem[] = []\n    let totalPrice:number = 0\n\n    for (let product of cartState.products) {\n      if (product.id === action.payload) {\n        newProducts.push({\n          ...product,\n          count:product.count + 1\n        })\n        totalPrice += (product.count + 1) * product.price\n      } else {\n        newProducts.push(product)\n        totalPrice += product.count * product.price\n      }\n    }\n\n    const newCartState:ICart = {\n      products:newProducts,\n      totalCount:newProducts.length,\n      totalPrice:totalPrice,\n      totalPriceDiscount:-1\n    }\n\n    const cartStateJsonStr:string = JSON.stringify(newCartState)\n    localStorage.setItem(\"cart\", cartStateJsonStr)\n\n    return {\n      ...state,\n      cartState:newCartState,\n      topNavBarState: {\n        ...topNavBarState,\n        cartOrdersCount:newProducts.length\n      }\n    }\n  }\n\n  if (action.type === MINUS_PRODUCT_TO_CART) {\n    const { cartState, topNavBarState } = state\n\n    let newProducts:IProductItem[] = []\n    let totalPrice:number = 0\n\n    for (let product of cartState.products) {\n      if (product.id === action.payload) {\n        if (product.count >= 1) {\n          newProducts.push({\n            ...product,\n            count:product.count - 1\n          })\n          totalPrice += (product.count - 1) * product.price\n        } else {\n          newProducts.push(product)\n          totalPrice += product.count * product.price\n        }\n      }\n    }\n\n    const newCartState:ICart = {\n      products:newProducts,\n      totalCount:newProducts.length,\n      totalPrice:totalPrice,\n      totalPriceDiscount:-1\n    }\n\n    const cartStateJsonStr:string = JSON.stringify(newCartState)\n    localStorage.setItem(\"cart\", cartStateJsonStr)\n\n    return {\n      ...state,\n      cartState:newCartState,\n      topNavBarState: {\n        ...topNavBarState,\n        cartOrdersCount:newProducts.length\n      }\n    }\n  }\n\n  if (action.type === REMOVE_PRODUCT_FROM_CART) {\n    const { cartState, topNavBarState } = state\n\n    let newProducts:IProductItem[] = []\n    let totalPrice:number = 0\n\n    for (let product of cartState.products) {\n      if (product.id !== action.payload) {\n        newProducts.push(product)\n        totalPrice += product.count * product.price\n      }\n    }\n\n    const newCartState:ICart = {\n      products:newProducts,\n      totalCount:newProducts.length,\n      totalPrice:totalPrice,\n      totalPriceDiscount:-1\n    }\n\n    const cartStateJsonStr:string = JSON.stringify(newCartState)\n    localStorage.setItem(\"cart\", cartStateJsonStr)\n\n    return {\n      ...state,\n      cartState:newCartState,\n      topNavBarState: {\n        ...topNavBarState,\n        cartOrdersCount:newProducts.length\n      }\n    }\n  }\n\n  return state;\n}\n\nexport const RegisterReducer = (state = registerForm, action:any) => {\n\n  if (action.type === CHANGE_REGISTER_FORM_FIELD) {\n    const { name, value } = action.payload\n    let newForm:{[name:string]:string} = {}\n    newForm[name] = value\n    return {\n      ...state,\n      ...newForm\n    }\n  }\n\n  if (action.type === SUBMIT_REGISTER_FORM) {\n    return state\n  }\n\n  if (action.type === CLEAN_REGISTER_FORM) {\n    return {\n      ...registerForm\n    }\n  }\n\n  return state\n}\n\nexport const LoginReducer = (state = loginForm, action:any) => {\n\n  if (action.type === CHANGE_LOGIN_FORM_FIELD) {\n    const { name, value } = action.payload\n    let newForm:{[name:string]:string} = {}\n    newForm[name] = value\n    return {\n      ...state,\n      ...newForm\n    }\n  }\n\n  if (action.type === CLEAN_LOGIN_FORM) {\n    return {\n      ...loginForm\n    }\n  }\n\n  return state\n}\n\nexport default DefaultReducer\n","import { createStore, combineReducers } from \"redux\";\nimport DefaultReducer, {\n    SearchReducer, HomeReducer, ProfileReducer,\n    RegisterReducer, LoginReducer, NewsReducer, NewsPostReducer,\n    PromotionsReducer\n} from \"../redusers\";\n\nconst rootReducer = combineReducers({\n    DefaultReducer,\n    SearchReducer,\n    HomeReducer,\n    ProfileReducer,\n    RegisterReducer,\n    LoginReducer,\n    NewsReducer,\n    NewsPostReducer,\n    PromotionsReducer\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;","import \"./lib/env\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport './App.css';\nimport './styles/index.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { resolve } from \"path\"\n\nimport { config } from \"dotenv\"\n\n\nconst envPath = ():string => {\n    switch (process.env.NODE_ENV) {\n        case \"development\":\n            return \".local\"\n\n        case \"test\":\n            return \".test\"\n\n        case \"production\":\n            return \"\"\n    \n        default:\n            return \"\"\n    }\n}\n\n\nconfig({ path: resolve(__dirname, `../.env${envPath()}`) })"],"sourceRoot":""}