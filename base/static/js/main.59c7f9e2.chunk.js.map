{"version":3,"sources":["components/ActionButton.tsx","redusers/initState/index.ts","components/SearchFormHome.tsx","components/BigSearchBlock.tsx","components/PromotionItem.tsx","components/PromotionsSmallList.tsx","components/PromotionBigItem.tsx","components/PromotionsSmallBox.tsx","components/NewsItem.tsx","components/NewsList.tsx","components/NewsBlock.tsx","components/SubscribeForm.tsx","components/SubscribeBlock.tsx","components/MainMenuBig.tsx","pages/Home.tsx","actions/types/index.ts","actions/index.ts","components/SearchListItem.tsx","components/SearchList.tsx","components/SearchForm.tsx","components/SearchBlock.tsx","components/MainMenuSimple.tsx","components/InfoLayer.tsx","constants/index.ts","pages/Search.tsx","redusers/index.ts","store/index.ts","components/TopNavBar.tsx","components/BottomFooterBlock.tsx","components/FooterMenu.tsx","components/FooterContacts.tsx","components/FooterSocial.tsx","components/FooterBackForm.tsx","components/FooterBlock.tsx","pages/NotFoundPage.tsx","components/Breadcrumbp.tsx","pages/Profile.tsx","pages/Register.tsx","pages/Login.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["connect","iconName","iconSvgSrc","text","classList","action","classes","join","className","onClick","src","alt","renderIcon","initCartState","productsRequestState","message","error","code","products","total","isRequestSended","isResponseRecieved","searchFormState","searchInput","searchFormSubmitted","searchKey","selectedFiler","window","location","href","mainMenuSimpleState","logoUrl","items","name","url","mainMenuOriginState","bigSearchBlockState","actionButton","console","log","promotionsSmallBoxState","promotionsSmallList","photoUrl","description","price","discountPrice","discount","promotionBigItem","newBlockState","newList","title","shortDescription","date","Date","views","flexibleInfoList","subscribeBlockState","subscribeForm","value","footerBlockState","footerMenu","contactsList","socialList","link","backForm","cell","warehouses","id","address","coordinates","undefined","warehousesIdList","getWarehouseById","infoLayerState","active","timer","showInfoLayer","payload","hideInfoLayer","userInitState","fname","lname","email","cartStateJsonStr","localStorage","getItem","cartState","JSON","parse","totalCount","totalPrice","totalPriceDiscount","topNavBarState","phonesNumbers","isUserAuth","userName","cartOrdersCount","setUserData","registerForm","password","changeRegisterFormField","cleanRegisterForm","loginForm","changeLoginFormField","cleanLoginForm","searchInitState","setProductsSuccess","getProductsRequestSended","homePageState","carouselState","content","activeIndex","profilePageState","userState","removeProductFromCart","plusProductToCart","minusProductFromCart","clearCart","setUserFullData","defaultState","SearchFormHome","props","state","selectedFilter","handleSearchSubmit","bind","handleSearchFieldChange","handleFilterChange","event","preventDefault","this","setState","target","type","aria-label","onChange","placeholder","selected","map","warehouse","index","key","React","Component","BigSearchBlock","reducer","PromotionItem","PromotionsSmallList","item","HomeReducer","PromotionBigItem","PromotionsSmallBox","toDateString","NewsList","NewsBlock","SubscribeForm","handleSubmit","_e","data-toggle","data-target","aria-controls","aria-expanded","isItemActive","to","addSpanForSR","HomePage","Home","INIT_PRODUCTS_SEARCH","SET_PRODUCTS_SEARCH","SET_PRODUCTS_SEARCH_SUCCESS","SET_PRODUCTS_SEARCH_FAIL","SET_PRODUCTS_FAKE","SearchListItemComponent","addToCart","warehouse_id","remain","addProductToCart","addItemTopCart","newProduct","photo_url","count","SearchListItem","dispatch","SearchListComponent","isProductsLoaded","product","SearchList","other","a","b","SearchReducer","SearchFormComponent","handleSearchFormSubmit","handleSearch","search","params","URLSearchParams","get","SearchForm","SearchTableHeader","SearchBlock","rootReducer","animationIDuration","animationInDelay","animationOutDuration","setTimeout","animationIn","animationOut","isVisible","animationInDuration","MAIN_BACKEND","GET_PRODUCTS_URL","REGISTER_USER","ORDERS_URL","LOGIN_URL","GET_USER_URL","SearchPage","offset","limit","filter_name","axios","then","response","data","catch","finally","Search","DefaultReducer","combineReducers","removeItem","newProducts","found","concat","newCartState","length","stringify","setItem","newState","push","ProfileReducer","RegisterReducer","newForm","LoginReducer","store","createStore","renderAuth","checkUserData","accessToken","refreshToken","refreshCallBack","setUserDataAction","headers","Authorization","status","getUserInfo","handleRefreshToken","phone","BottomFooterBlock","FooterBackForm","onSubmit","cols","rows","NotFoundPage","pages","page","renderLink","renderDivider","Profile","removeItemFromCart","createOrder","sendFinishMessage","warehousesError","warehouseId","itemId","order","orders","ordersLength","productItem","products_data","counter","post","toFixed","Register","handleFieldChange","handleFormSubmit","registerUser","aria-describedby","Login","loginUser","access","refresh","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59c7f9e2.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { IActionButton } from '../types';\n\nconst renderIcon = (iconName:string, iconSvgSrc:string) => {\n    if (iconName)\n        return (<i className={`${iconName} custom-icon`} />)\n    if (iconSvgSrc)\n        return (<img src={iconSvgSrc} alt=\"\" />)\n}\n\nconst ActionButton = ({ iconName, iconSvgSrc, text, classList, action }:IActionButton) => {\n    const classes:string = [\"ActionButton\", ...classList].join(\" \")\n    return (\n        <div className={classes} onClick={action}>\n            {renderIcon(iconName, iconSvgSrc)}\n            <span>{text}</span>\n        </div>\n    )\n}\n\nexport default connect()(ActionButton)\n","import {\n    ISearchState,\n    IProduct,\n    IGetProductsRequest,\n    ISearchForm,\n    ITopNavBarState,\n    IMainMenuData,\n    IHomePage,\n    IBigSearchBlock,\n    IActionButton,\n    IPromotionsSmallList,\n    IPromotionBigItem,\n    IPromotionsSmallBox,\n    INewsBlock,\n    INewsList,\n    ICarouselBlock,\n    ISubscribeBlock,\n    ISubscribeForm,\n    IFooterBlock,\n    IContactsList,\n    ISocialList,\n    IBackForm,\n    IBackFormAction,\n    IWarehouse,\n    IInfoLayer,\n    IProfilePage,\n    IUser,\n    ICart,\n    IRootApp,\n    IRegisterForm,\n    ILoginForm\n} from '../../types'\n\nexport const initProducts:IProduct[] = []\n\nexport const productsRequestState:IGetProductsRequest = {\n    message:\"\",\n    error:\"\",\n    code:0,\n    products:initProducts,\n    total:0,\n    isRequestSended:false,\n    isResponseRecieved:false\n}\n\nexport const searchFormState:ISearchForm = {\n    searchInput: \"\",\n    searchFormSubmitted:false,\n    action:(searchKey:string, selectedFiler:string|undefined) => {\n        window.location.href = `/search?searchKey=${searchKey}&selectedFilter=${selectedFiler}`\n    }\n}\n\nexport const mainMenuSimpleState:IMainMenuData = {\n    logoUrl:\"/images/logo.png\",\n    items:[{\n        name:\"Головна\",\n        url:\"/\"\n    },{\n        name:\"Акції\",\n        url:\"/promotions\"\n    },{\n        name:\"Найближча Аптека\",\n        url:\"/map\"\n    },{\n        name:\"Новини\",\n        url:\"/news\"\n    },{\n        name:\"Контакти\",\n        url:\"/contacts\"\n    }],\n\n}\n\nexport const mainMenuOriginState:IMainMenuData = {\n    ...mainMenuSimpleState\n}\n\nexport const bigSearchBlockState:IBigSearchBlock = {\n    searchFormState: searchFormState,\n}\n\nexport const actionButton:IActionButton = {\n    text:\"Show all\",\n    action: () => {console.log(\"ACTION BUTTON PUSH\")},\n    classList:[],\n    iconName:\"\",\n    iconSvgSrc:\"\"\n}\n\nexport const promotionBigItem:IPromotionBigItem = {\n    photoUrl:\"/images/big-pills.png\",\n    name:\"Profilaktone\",\n    description:\"Містить масло печінки акули, вітаміни А, D, E, C та мінерали Цинк і Селен. Масло печінки акули, що міститься в продукті походить від уловів біля Ісландії та Фарерських островів.\",\n    price:100,\n    discountPrice:80,\n    discount:20,\n    actionButton: actionButton\n}\n\nexport const promotionsSmallList:IPromotionsSmallList = {\n    items: [{\n        photoUrl:\"/images/small-pills.png\",\n        name:\"Bionorica, Синупрет 20 таблетоктаблеток таблеток\",\n        description:\"\",\n        price:100,\n        discountPrice:80,\n        discount:20\n    },{\n        photoUrl:\"/images/small-pills.png\",\n        name:\"Bionorica, Синупрет 40 таблетоктаблеток таблеток\",\n        description:\"\",\n        price:100,\n        discountPrice:80,\n        discount:20\n    },{\n        photoUrl:\"/images/small-pills.png\",\n        name:\"Bionorica, Синупрет 20 таблетоктаблеток таблеток\",\n        description:\"\",\n        price:100,\n        discountPrice:80,\n        discount:20\n    },{\n        photoUrl:\"/images/small-pills.png\",\n        name:\"Bionorica, Синупрет 40 таблетоктаблеток таблеток\",\n        description:\"\",\n        price:100,\n        discountPrice:80,\n        discount:20\n    }],\n    actionButton: actionButton\n}\n\nexport const promotionsSmallBoxState:IPromotionsSmallBox = {\n    promotionsSmallList: promotionsSmallList,\n    promotionBigItem: promotionBigItem\n}\n\nexport const newList:INewsList = {\n    items:[{\n        photoUrl:\"https://cdn.pixabay.com/photo/2015/04/19/08/32/rose-729509__340.jpg\",\n        title:\"Якщо ходити пішки щодня\",\n        shortDescription:\"Ще Гіппократ говорив, що піша прогулянка замінює людині найефективніші ліки.\",\n        date:new Date(),\n        views:0,\n        src:\"#\"\n    },{\n        photoUrl:\"https://cdn.pixabay.com/photo/2015/04/19/08/32/rose-729509__340.jpg\",\n        title:\"Які вправи варто робити\",\n        shortDescription:\"Лише в 1-2% випадків біль у спині є сигналом про серйозну проблему зі \",\n        date:new Date(),\n        views:0,\n        src:\"#\"\n    },{\n        photoUrl:\"https://cdn.pixabay.com/photo/2015/04/19/08/32/rose-729509__340.jpg\",\n        title:\"4 ефективні засоби\",\n        shortDescription:\"Втім, причиною високої пітливості може виявитися стрес, невроз і зміни в …\",\n        date:new Date(),\n        views:0,\n        src:\"#\"\n    },{\n        photoUrl:\"https://cdn.pixabay.com/photo/2015/04/19/08/32/rose-729509__340.jpg\",\n        title:\"Ознаки перетренування\",\n        shortDescription:\"Для початку давайте навчимося визначати ознаки перетренування.\",\n        date:new Date(),\n        views:0,\n        src:\"#\"\n    }],\n    title:\"Актуальні Новини\"\n}\n\nexport const newBlockState:INewsBlock = {\n    newList:newList,\n    flexibleInfoList:{}\n}\n\nexport const carouselState:ICarouselBlock = {\n    title: \"Експерти Нам Довіряють\",\n    items: [{\n        photoUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS9pKhNdORp7GaKjJUTFPfZwZfURmKVFiK5dWKn8eJQM5J40HHlaw\",\n        title: \"Катерина Шевченко\",\n        description: \"Співзасновник ТОВ “Фарма Медікал”\",\n        content: \"Доброго дня, замовила туніку 'селен' та костюм 'хельсінкі' все підійшло чудово, якість, просто супер дякую Вам Панянка. А ще приємно вразив маленький запашний презент, дякую.\"\n    },{\n        photoUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS9pKhNdORp7GaKjJUTFPfZwZfURmKVFiK5dWKn8eJQM5J40HHlaw\",\n        title: \"Катерина Шевченко\",\n        description: \"Співзасновник ТОВ “Фарма Медікал”\",\n        content: \"Доброго дня, замовила туніку 'селен' та костюм 'хельсінкі' все підійшло чудово, якість, просто супер дякую Вам Панянка. А ще приємно вразив маленький запашний презент, дякую.\"\n    },{\n        photoUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS9pKhNdORp7GaKjJUTFPfZwZfURmKVFiK5dWKn8eJQM5J40HHlaw\",\n        title: \"Катерина Шевченко\",\n        description: \"Співзасновник ТОВ “Фарма Медікал”\",\n        content: \"Доброго дня, замовила туніку 'селен' та костюм 'хельсінкі' все підійшло чудово, якість, просто супер дякую Вам Панянка. А ще приємно вразив маленький запашний презент, дякую.\"\n    }],\n    activeIndex: 0\n}\n\nexport const subscribeForm:ISubscribeForm = {\n    value:\"\",\n    action:(value:string) => {}\n}\n\nexport const subscribeBlockState:ISubscribeBlock = {\n    title:\"Зекономте час та гроші!\",\n    description:\"Підпишіться і ми надсилатимемо вам найкращі пропозиції\",\n    subscribeForm:subscribeForm\n}\n\nexport const footerMenu:IMainMenuData = {\n    logoUrl:\"/images/logo.png\",\n    items:[{\n        name:\"Пошук та бронювання\",\n        url:\"/search\"\n    },{\n        name:\"Акції\",\n        url:\"/promotions\"\n    },{\n        name:\"Оптовим кліентам\",\n        url:\"/for-clients\"\n    },{\n        name:\"Найблища Аптека\",\n        url:\"/map\"\n    },{\n        name:\"Новини\",\n        url:\"/news\"\n    },{\n        name:\"Мій Кабінет\",\n        url:\"/profile\"\n    }],\n\n}\n\nexport const contactsList:IContactsList = {\n    title:\"Контактна інформація\",\n    items:[\n        \"lubowitz.kara@hotmail.com\",\n        \"(032) 297-55-89\",\n        \"(032) 297-55-80\",\n        \"(032) 264-53-37\",\n        \"(067) 007-06-70\"\n    ]\n}\n\nexport const socialList:ISocialList = {\n    title:\"Ми у соцмережах\",\n    items:[{\n        iconName:\"facebook\",\n        link:\"https://facebook.com\"\n    },{\n        iconName:\"instagram\",\n        link:\"https://instagram.com\"\n    },{\n        iconName:\"youtube\",\n        link:\"https://youtube.com\"\n    }]\n}\n\nexport const backForm:IBackFormAction = {\n    title:\"Форма Зворотнього звязку\",\n    name:\"\",\n    cell:\"\",\n    message:\"\",\n    action:() => {}\n}\n\nexport const footerBlockState:IFooterBlock = {\n    footerMenu:footerMenu,\n    contactsList:contactsList,\n    socialList:socialList,\n    backForm:backForm\n}\n\nexport const warehouses:IWarehouse[] = [{\n    id:\"1\",\n    address:\"вул. Хімічна, 22\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"2\",\n    address:\"вул. Мазепи, 11\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"3\",\n    address:\"вул. Виговського, 29а\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"4\",\n    address:\"просп. Червоної Калини, 64\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"5\",\n    address:\"вул. Городоцька, 82\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"6\",\n    address:\"вул. Симоненка, 3\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"7\",\n    address:\"вул. Богдана Хмельницького, 1\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"8\",\n    address:\"вул. Дорошенка, 6\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"9\",\n    address:\"вул. Личаківська, 54/2\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"10\",\n    address:\"вул. Сихівська, 22\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"11\",\n    address:\"вул. Пасічна, 70\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n},{\n    id:\"12\",\n    address:\"вул. Шевченка, 366в\",\n    description:\"Години роботи: Пн-Пт: 8:00-21:00, Сб: 8:00 - 20:00, Нд: 9:00 - 19:00\",\n    photoUrl:\"http://www.apteka-znahar.com.ua/images/khimichna.jpg\",\n    coordinates:undefined\n}]\n\nconst warehousesIdList:{[id:string]:number} = {\n    \"1\":0,\n    \"2\":1,\n    \"3\":2,\n    \"4\":3,\n    \"5\":4,\n    \"6\":5,\n    \"7\":6,\n    \"8\":7,\n    \"9\":8,\n    \"10\":9,\n    \"11\":10,\n    \"12\":11\n}\n\nexport const getWarehouseById = (id:string):IWarehouse => {\n    return warehouses[warehousesIdList[id]]\n}\n\nexport const infoLayerState:IInfoLayer = {\n    text:\"Стрепсілс з віт. С апельсин льодяники №24 успішно додано до списку бронювання\",\n    active:false,\n    timer:0,\n    showInfoLayer: (payload:IInfoLayer) => {},\n    hideInfoLayer: () => {}\n}\n\nexport const userInitState:IUser = {\n    id:-1,\n    photoUrl:\"\",\n    fname:\"\",\n    lname:\"\",\n    email:\"\",\n    cell:\"\"\n}\n\nlet initCartState:ICart\n\nconst cartStateJsonStr = localStorage.getItem(\"cart\")\nif (cartStateJsonStr) {\n    initCartState = JSON.parse(cartStateJsonStr)\n} else {\n    initCartState = {\n        products:[],\n        totalCount:0,\n        totalPrice:0,\n        totalPriceDiscount:0\n    }\n}\n\nexport const cartState:ICart = {\n    ...initCartState\n}\n\nexport const topNavBarState:ITopNavBarState = {\n    phonesNumbers:[\n        \"(032) 297-55-89\",\n        \"(067) 007-06-07\"\n    ],\n    isUserAuth:false,\n    userName:\"\",\n    cartOrdersCount:initCartState.totalCount,\n    setUserData:(payload:string) => {}\n}\n\nexport const registerForm:IRegisterForm = {\n    name:\"\",\n    email:\"\",\n    cell:\"\",\n    password:\"\",\n    changeRegisterFormField:(payload:{name:string, value:string}) => {},\n    cleanRegisterForm:() => {}\n}\n\nexport const loginForm:ILoginForm = {\n    email:\"\",\n    password:\"\",\n    changeLoginFormField:(payload:{name:string, value:string}) => {},\n    cleanLoginForm:() => {}\n}\n\n/**\n * PAGES |\n *       |\n *       V\n */\nexport const searchInitState:ISearchState = {\n    productsRequestState: productsRequestState,\n    searchFormState: searchFormState,\n    topNavBarState: topNavBarState,\n    mainMenuSimpleState: mainMenuSimpleState,\n    setProductsSuccess:(products) => { console.log(\"setProductsSuccess\", products) },\n    getProductsRequestSended:() => { console.log(\"getProductsRequestSended\") },\n    infoLayerState:infoLayerState,\n    cartState:cartState\n}\n\nexport const homePageState:IHomePage = {\n    topNavBarState: topNavBarState,\n    bigSearchBlockState: bigSearchBlockState,\n    mainMenuOriginState: mainMenuOriginState,\n    promotionsSmallBoxState: promotionsSmallBoxState,\n    newBlockState: newBlockState,\n    carouselState: carouselState,\n    subscribeBlockState: subscribeBlockState,\n    footerBlockState: footerBlockState\n}\n\nexport const profilePageState:IProfilePage = {\n    topNavBarState: topNavBarState,\n    mainMenuSimpleState: mainMenuSimpleState,\n    userState:userInitState,\n    cartState:cartState,\n    infoLayerState:infoLayerState,\n    removeProductFromCart:(payload:number) => {},\n    plusProductToCart:(payload:number) => {},\n    minusProductFromCart:(payload:number) => {},\n    showInfoLayer:(payload:any) => {},\n    clearCart:() => {},\n    setUserFullData:(payload:IUser) => {}\n}\n\nexport const defaultState:IRootApp = {\n    infoLayerState:infoLayerState,\n    topNavBarState:topNavBarState,\n}\n\nexport const initialState = {\n    userState:userInitState,\n    searchState:searchInitState\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISearchForm } from '../types'\nimport ActionButton from './ActionButton';\nimport { warehouses } from '../redusers/initState';\n\ninterface ISearchFormFilter extends ISearchForm {\n    selectedFilter:string|undefined\n}\n\nclass SearchFormHome extends React.Component<ISearchForm, ISearchFormFilter> {\n\n    constructor(props:ISearchForm, state:ISearchFormFilter) {\n        super(props, state)\n\n        this.state = {\n            ...props,\n            selectedFilter:undefined\n        }\n\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this)\n        this.handleSearchFieldChange = this.handleSearchFieldChange.bind(this)\n        this.handleFilterChange = this.handleFilterChange.bind(this)\n    }\n\n\n    handleSearchSubmit(event:React.MouseEvent<HTMLButtonElement>):void {\n        event.preventDefault()\n        const { searchInput, selectedFilter } = this.state\n        const { action } = this.props\n        action(searchInput, selectedFilter)\n        this.setState({\n            searchInput:\"\"\n        })\n    }\n\n    handleSearchFieldChange(event:React.ChangeEvent<HTMLInputElement>):void {\n        event.preventDefault()\n        this.setState({\n            searchInput: event.target.value\n        })\n    }\n\n    handleFilterChange(event:React.ChangeEvent<HTMLSelectElement>):void {\n        this.setState({\n            selectedFilter: event.target.value\n        })\n    }\n\n    render() {\n        const { searchInput } = this.state\n        return (\n            <div className=\"SearchFormHome\">\n                <div className=\"input-group standart-container\">\n                    <input\n                        type=\"text\"\n                        id=\"searchInput\"\n                        value={searchInput}\n                        className=\"form-control\"\n                        aria-label=\"Sarch in warehouses\"\n                        onChange={this.handleSearchFieldChange}\n                        placeholder=\"Введіть назву товару\"\n                    />\n                    <select className=\"custom-select\" id=\"inputGroupSelect04\"\n                        aria-label=\"Example select with button addon\"\n                        onChange={this.handleFilterChange}>\n                        <option selected>У всіх Аптеках</option>\n                        {warehouses.map((warehouse, index) => {\n                            return (\n                                <option key={index} value={warehouse.id}>\n                                    {`№${warehouse.id} ${warehouse.address}`}\n                                </option>\n                            )\n                        })}\n                    </select>\n                    <div className=\"input-group-append\">\n                        <ActionButton\n                            text=\"Шукати\"\n                            classList={[\"default-button\"]}\n                            action={this.handleSearchSubmit}\n                            iconName=\"\"\n                            iconSvgSrc=\"\"\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(SearchFormHome)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IBigSearchBlock } from '../types';\nimport SearchFormHome from './SearchFormHome';\n\nconst mapStateToProps = (reducer:any) => {\n    const { bigSearchBlockState } = reducer\n    return {\n        ...bigSearchBlockState\n    }\n}\n\nclass BigSearchBlock extends React.Component<IBigSearchBlock, IBigSearchBlock> {\n    render() {\n        const { searchFormState } = this.props\n\n        return (\n            <div className=\"BigSearchBlock\">\n                <div className=\"standart-container\">\n                    <h1>Знайдіть та забронюй</h1>\n                    <h3>Ви зможете отримати ваше бронювання у зручній для вас аптеці, без черги</h3>\n                    <SearchFormHome {...searchFormState}/> \n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default connect(mapStateToProps)(BigSearchBlock)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IPromotionItem } from '../types';\n\n\nclass PromotionItem extends React.Component<IPromotionItem, IPromotionItem> {\n    render() {\n        const {\n            photoUrl,\n            name,\n            description,\n            price,\n            discountPrice,\n            discount\n        } = this.props\n\n        return (\n            <div className=\"PromotionItem\">\n                <div className=\"imageBlock\">\n                    <img src={photoUrl} alt=\"photoUrl\" className=\"image\"/>\n                    <p className=\"discount\">-{discount}%</p>\n                </div>\n                <h1 className=\"name\">{name}</h1>\n                <h3 className=\"description\">{description}</h3>\n                <div className=\"priceBlock\">\n                    <p className=\"price\">{price}</p>\n                    <p className=\"discountPrice\">{discountPrice}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default connect()(PromotionItem)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IPromotionsSmallList } from '../types';\nimport PromotionItem from './PromotionItem';\nimport ActionButton from './ActionButton';\n\nconst mapStateToProps = (reducer:any) => {\n    console.log(\"PromotionsSmallList mapStateToProps\", reducer)\n    const { promotionsSmallList } = reducer.HomeReducer.promotionsSmallBoxState\n    return {\n        ...promotionsSmallList\n    }\n}\n\nclass PromotionsSmallList extends React.Component<IPromotionsSmallList, IPromotionsSmallList> {\n    render() {\n        const { items } = this.props\n\n        return (\n            <div className=\"PromotionsSmallList\">\n                {items.map( (item, index) => {\n                    return (\n                        <PromotionItem key={index} {...item}/>\n                    )\n                })}\n                <ActionButton\n                    text={\"Показати всі Пропозиції\"}\n                    action={() => {}}\n                    iconName=\"\"\n                    iconSvgSrc=\"\"\n                    classList={[\"default-button\"]}\n                />\n            </div>\n        )\n    }\n}\n\n\nexport default connect(mapStateToProps)(PromotionsSmallList)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IPromotionBigItem } from '../types';\nimport ActionButton from './ActionButton';\n\n\nclass PromotionBigItem extends React.Component<IPromotionBigItem, IPromotionBigItem> {\n    render() {\n        const {\n            photoUrl,\n            name,\n            description,\n            actionButton\n        } = this.props\n\n        return (\n            <div className=\"PromotionBigItem\">\n                <div className=\"contentBlock\">\n                    <h1 className=\"name\">{name}</h1>\n                    <h3 className=\"description\">{description}</h3>\n                    <ActionButton\n                        text={\"Додати до Кошика\"}\n                        iconName=\"fas fa-cart-plus\"\n                        iconSvgSrc=\"\"\n                        classList={[\"default-button\"]}\n                        action={() => {console.log(\"sasaj lalka\")}}\n                    />\n                </div>\n                <div className=\"imageBlock\">\n                    <img src={photoUrl} alt=\"photoUrl\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default connect()(PromotionBigItem)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IPromotionsSmallBox } from '../types';\nimport PromotionsSmallList from './PromotionsSmallList';\nimport PromotionBigItem from './PromotionBigItem';\n\nconst mapStateToProps = (reducer:any) => {\n    const { promotionsSmallBoxState } = reducer.HomeReducer\n    return {\n        ...promotionsSmallBoxState\n    }\n}\n\nclass PromotionsSmallBox extends React.Component<IPromotionsSmallBox, IPromotionsSmallBox> {\n    render() {\n        const { promotionsSmallList, promotionBigItem } = this.props\n\n        console.log(\"PromotionsSmallBox PROPS: \", this.props)\n\n        return (\n            <div className=\"PromotionsSmallBox standart-container\">\n                <PromotionsSmallList {...promotionsSmallList}/>\n                <PromotionBigItem {...promotionBigItem}/>\n            </div>   \n        )\n    }\n}\n\n\nexport default connect(mapStateToProps)(PromotionsSmallBox)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { INewsItem } from '../types';\n\nconst NewsItem = ({\n    photoUrl, title, \n    shortDescription, date, views\n}:INewsItem) => {\n    return (\n        <div className=\"NewsItem\">\n            <img className=\"image\" src={photoUrl} alt=\"photoUrl\"/>\n            <h6 className=\"title\">{title}</h6>\n            <p className=\"description\">{shortDescription}</p>\n            <div className=\"bottomBlock\">\n                <p className=\"date\">{date.toDateString()}</p>\n                <p className=\"views\">{views}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(NewsItem)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { INewsList } from '../types';\nimport NewsItem from './NewsItem';\n\n\nclass NewsList extends React.Component<INewsList, INewsList> {\n    render() {\n        const { items, title } = this.props\n\n        return (\n            <div className=\"NewsList standart-container\">\n                <h1 className=\"title\">{title}</h1>\n                <div className=\"divider\"></div>\n                <div className=\"itemsList\">\n                    {items.map( (item, index) => {\n                        return (\n                            <NewsItem key={index} {...item}/>\n                        )\n                    })}\n                </div>\n                <div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default connect()(NewsList)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { INewsBlock } from '../types';\nimport NewsList from './NewsList';\n\n\nclass NewsBlock extends React.Component<INewsBlock, INewsBlock> {\n    render() {\n        const { newList, flexibleInfoList } = this.props\n\n        return (\n            <div className=\"NewsBlock\">\n                {/* <FlexibleInfoList /> */}\n                <NewsList {...newList}/>\n            </div>\n        )\n    }\n}\n\n\nexport default connect()(NewsBlock)","import React, { FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { ISubscribeForm } from '../types';\nimport ActionButton from './ActionButton';\n\nclass SubscribeForm extends React.Component<ISubscribeForm, ISubscribeForm> {\n\n    constructor(props:ISubscribeForm, state:ISubscribeForm) {\n        super(props, state)\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(_e:FormEvent<HTMLFormElement>) {\n        const { action, value } = this.props\n        action(value)\n    }\n\n    render() {\n        const { value } = this.props\n        return (\n            <div className=\"SubscribeForm\">\n                <div className=\"input-group\">\n                    <input\n                        type=\"text\"\n                        id=\"searchInput\"\n                        value={value}\n                        className=\"form-control input\"\n                        aria-label=\"Sarch in warehouses\"\n                        // onChange={this.handleSearchFieldChange}\n                        placeholder=\"Ваш email\"\n                    />\n                    <div className=\"input-group-append\">\n                        <ActionButton\n                            text={\"Підписатись\"}\n                            classList={[\"default-button\", \"button\"]}\n                            action={() => {console.log(\"Subscribe click\")}}\n                            iconName={\"\"}\n                            iconSvgSrc=\"\"\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(SubscribeForm)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISubscribeBlock } from '../types';\nimport SubscribeForm from './SubscribeForm';\n\nconst SubscribeBlock = ({ title, description, subscribeForm }:ISubscribeBlock) => {\n    return (\n        <div className=\"SubscribeBlock\">\n            <h1 className=\"title\">{title}</h1>\n            <h3 className=\"description\">{description}</h3>\n            <SubscribeForm {...subscribeForm}/>\n        </div>\n    )\n}\n\nexport default connect()(SubscribeBlock)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IMainMenuData } from '../types';\nimport { Link } from 'react-router-dom';\n\nconst getItemClasses = (isItemActive:boolean):string => {\n    return isItemActive ? \"nav-item active\": \"nav-item\"\n}\n\nconst addSpanForSR = (isItemActive:boolean) => {\n    if (isItemActive)\n        return (\n            <span className=\"sr-only\">(current)</span>\n        )\n}\n\n\nconst MainMenuBig = ({items, logoUrl}:IMainMenuData) => {\n    return (\n        <div className=\"MainMenuBig\">\n            <div className=\"logo\">\n                <a className=\"navbar-brand\" href=\"/\">\n                    <img src={logoUrl} alt=\"Logo\"/>\n                </a>\n            </div>\n            <div className=\"row menu\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light\">\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav nav\">\n                            {items.map( (item, index) => {\n                                return (\n                                    <li key={index} className={getItemClasses(false)}>\n                                        <Link className=\"nav-link\" to={item.url}>\n                                            {item.name}\n                                            {addSpanForSR(false)}\n                                        </Link>\n                                    </li>\n                                )\n                            })}\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(MainMenuBig)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { IHomePage } from '../types/Interfaces';\nimport MainMenuSimple from '../components/MainMenuSimple';\nimport BigSearchBlock from '../components/BigSearchBlock';\nimport PromotionsSmallBox from '../components/PromotionsSmallBox';\nimport NewsBlock from '../components/NewsBlock';\nimport CarouselBlock from '../components/CarouselBlock';\nimport SubscribeBlock from '../components/SubscribeBlock';\nimport FooterBlock from '../components/FooterBlock';\nimport MainMenuBig from '../components/MainMenuBig';\nimport TopNavBar from '../components/TopNavBar';\n\n\nconst mapStateToProps = (reducer:any) => {\n    const { HomeReducer } = reducer\n    return {\n        ...HomeReducer\n    }\n}\n\nclass HomePage extends React.Component<IHomePage, IHomePage> {\n    render() {\n        const {\n            mainMenuOriginState,\n            bigSearchBlockState,\n            promotionsSmallBoxState,\n            newBlockState,\n            carouselState,\n            subscribeBlockState,\n            topNavBarState\n        } = this.props\n        console.log(\"HOME PROPS: \", this.props)\n        return (\n            <div className=\"HomePage\">\n                {/* <TopNavBar { ...topNavBarState } /> */}\n                <MainMenuBig {...mainMenuOriginState}/>\n                <BigSearchBlock {...bigSearchBlockState}/>\n                <PromotionsSmallBox {...promotionsSmallBoxState}/>\n                <NewsBlock {...newBlockState}/>\n                {/* <CarouselBlock {...carouselState}/> */}\n                <SubscribeBlock {...subscribeBlockState}/>\n            </div>\n        )\n    }\n}\n\nconst Home = connect(mapStateToProps)(HomePage)\n\nexport default Home;\n","export const INIT_PRODUCTS_SEARCH = \"INIT_PRODUCTS_SEARCH\"\nexport const SET_PRODUCTS_SEARCH = \"SET_PRODUCTS_SEARCH\"\nexport const SET_PRODUCTS_SEARCH_SUCCESS = \"SET_PRODUCTS_SEARCH_SUCCESS\"\nexport const SET_PRODUCTS_SEARCH_FAIL = \"SET_PRODUCTS_SEARCH_FAIL\"\nexport const SET_PRODUCTS_SEARCH_END = \"SET_PRODUCTS_SEARCH_END\"\nexport const SET_PRODUCTS_FAKE = \"SET_PRODUCTS_FAKE\"\nexport const SHOW_INFO_BLOCK = \"SHOW_INFO_BLOCK\"\nexport const HIDE_INFO_BLOCK = \"HIDE_INFO_BLOCK\"\n\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\"\nexport const REMOVE_PRODUCT_FROM_CART = \"REMOVE_PRODUCT_FROM_CART\"\n\nexport const PLUS_PRODUCT_TO_CART = \"PLUS_PRODUCT_TO_CART\"\nexport const MINUS_PRODUCT_TO_CART = \"MINUS_PRODUCT_TO_CART\"\n\n\nexport const CLEAR_CART = \"CLEAR_CART\"\nexport const PLUS_ITEM_CART = \"PLUS_ITEM_CART\"\nexport const MINUS_ITEM_CART = \"MINUS_ITEM_CART\"\nexport const ADD_ITEM_TOP_CART = \"ADD_ITEM_TOP_CART\"\nexport const REMOVE_ITEM_TOP_CART = \"REMOVE_ITEM_TOP_CART\"\nexport const CLEAR_TOP_CART = \"CLEAR_TOP_CART\"\n\nexport const CHANGE_REGISTER_FORM_FIELD = \"CHANGE_REGISTER_FORM_FIELD\"\nexport const SUBMIT_REGISTER_FORM = \"SUBMIT_REGISTER_FORM\"\nexport const CLEAN_REGISTER_FORM = \"CLEAN_REGISTER_FORM\"\n\nexport const CHANGE_LOGIN_FORM_FIELD = \"CHANGE_LOGIN_FORM_FIELD\"\nexport const CLEAN_LOGIN_FORM = \"CLEAN_LOIN_FORM\"\n\nexport const SET_USER_DATA = \"SET_USER_DATA\"\nexport const SET_USER_FULL_DATA = \"SET_USER_FULL_DATA\"\n","import {\n  INIT_PRODUCTS_SEARCH,\n  SET_PRODUCTS_SEARCH,\n  SET_PRODUCTS_SEARCH_SUCCESS,\n  SET_PRODUCTS_SEARCH_FAIL,\n  SET_PRODUCTS_FAKE,\n  SHOW_INFO_BLOCK,\n  HIDE_INFO_BLOCK,\n  ADD_PRODUCT_TO_CART,\n  ADD_ITEM_TOP_CART,\n  REMOVE_PRODUCT_FROM_CART,\n  PLUS_PRODUCT_TO_CART,\n  MINUS_PRODUCT_TO_CART,\n  CLEAR_CART,\n  CHANGE_REGISTER_FORM_FIELD,\n  CLEAN_REGISTER_FORM,\n  CHANGE_LOGIN_FORM_FIELD,\n  CLEAN_LOGIN_FORM,\n  SET_USER_DATA,\n  SET_USER_FULL_DATA\n} from \"./types\";\nimport { IInfoLayer, IProductItem, IUser } from \"../types\";\n\nexport function initProductsInSearch(payload:any) {\n  return { type: INIT_PRODUCTS_SEARCH, payload };\n}\n\nexport function getProductsRequestSended() {\n  return { type: SET_PRODUCTS_SEARCH, payload: {} };\n}\n\nexport function setProductsSuccess(products:any[]) {\n  return { type: SET_PRODUCTS_SEARCH_SUCCESS, payload: products };\n}\n\nexport function setProductsFail() {\n  return { type: SET_PRODUCTS_SEARCH_FAIL, payload: {} };\n}\n\nexport function getProductsFake(searchKey:string) {\n  return { type: SET_PRODUCTS_FAKE, payload: searchKey };\n}\n\nexport const showInfoLayer = (payload:IInfoLayer) => {\n  return { type:SHOW_INFO_BLOCK, payload}\n}\n\nexport const hideInfoLayer = () => {\n  return { type:HIDE_INFO_BLOCK, payload:{}}\n}\n\nexport const addProductToCart = (payload:IProductItem) => {\n  return { type:ADD_PRODUCT_TO_CART, payload }\n}\n\nexport const clearCart = () => {\n  return { type:CLEAR_CART, payload:{} }\n}\n\nexport const removeProductFromCart = (payload:number) => {\n  return { type:REMOVE_PRODUCT_FROM_CART, payload }\n}\n\nexport const plusProductToCart = (payload:number) => {\n  return { type:PLUS_PRODUCT_TO_CART, payload }\n}\n\nexport const minusProductFromCart = (payload:number) => {\n  return { type:MINUS_PRODUCT_TO_CART, payload }\n}\n\nexport const addItemTopCart = (payload:number) => {\n  return { type:ADD_ITEM_TOP_CART, payload }\n}\n\nexport const changeRegisterFormField = (payload:{name:string, value:string}) => {\n  return { type:CHANGE_REGISTER_FORM_FIELD, payload}\n}\n\nexport const cleanRegisterForm = () => {\n  return { type:CLEAN_REGISTER_FORM, payload:{}}\n}\n\nexport const changeLoginFormField = (payload:{name:string, value:string}) => {\n  return { type:CHANGE_LOGIN_FORM_FIELD, payload}\n}\n\nexport const cleanLoginForm = () => {\n  return { type:CLEAN_LOGIN_FORM, payload:{}}\n}\n\nexport const setUserData = (payload:string) => {\n  return { type:SET_USER_DATA, payload}\n}\n\nexport const setUserFullData = (payload:IUser) => {\n  return { type:SET_USER_FULL_DATA, payload}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getWarehouseById } from '../redusers/initState';\nimport ActionButton from './ActionButton';\nimport { IProduct, IInfoLayer, IProductItem } from '../types';\nimport { showInfoLayer, addProductToCart, addItemTopCart } from '../actions';\n\nexport interface SearchListItemProps {\n    id:number,\n    index:number,\n    name:string,\n    warehouse_id:string,\n    photoUrl:string,\n    price:number,\n    discount:number,\n    remain:number,\n    showInfoLayer:(payload:any) => void,\n    addProductToCart:(payload:IProductItem) => void,\n    addItemTopCart:(payload:number) => void\n}\n\nexport interface SearchListItemState {\n    id:number,\n    index:number,\n    name:string,\n    warehouseId:string,\n    photoUrl:string,\n    price:number,\n    discount:number,\n    remain:number\n}\n\nconst mapStateToProps = (reducer:any, other:any) => {\n    return {\n        ...other\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        showInfoLayer: (payload:IInfoLayer) => {dispatch(showInfoLayer(payload))},\n        addProductToCart: (payload:IProductItem) => {dispatch(addProductToCart(payload))},\n        addItemTopCart: (payload:number) => {dispatch(addItemTopCart(payload))}\n    }\n}\n\nclass SearchListItemComponent extends React.Component<SearchListItemProps, SearchListItemState> {\n\n    constructor(props:SearchListItemProps, state:SearchListItemState) {\n        super(props, state)\n\n        this.addToCart = this.addToCart.bind(this)\n    }\n\n    addToCart() {\n        const {\n            id,\n            index,\n            name,\n            warehouse_id,\n            photoUrl,\n            price,\n            discount,\n            remain,\n            showInfoLayer,\n            addProductToCart,\n            addItemTopCart\n        } = this.props\n        showInfoLayer({\n            text:`${name} успішно додано до списку бронювання`,\n            timer:1,\n        })\n        const newProduct:IProductItem = {\n            id, index, name, warehouse_id,\n            photo_url:photoUrl,\n            discount, remain, price,\n            count:1\n        }\n        addProductToCart(newProduct)\n        addItemTopCart(newProduct.count)\n    }\n\n    render() {\n        const {\n            id, index, name, warehouse_id, photoUrl, price,\n            discount, remain\n        } = this.props\n        const warehouse = getWarehouseById(warehouse_id)\n        return (\n            <tr key={id}>\n                <td>{name}</td>\n                <td>{`#${warehouse.id} ${warehouse.address}`}</td>\n                <td>{price}</td>\n                <td>{remain}</td>\n                <td>\n                    <ActionButton\n                        text={\"Забронювати\"}\n                        iconName=\"\"\n                        iconSvgSrc=\"\"\n                        classList={[\"addToCart\"]}\n                        action={this.addToCart}\n                    />\n                </td>\n            </tr>\n        )\n    }\n}\n\nconst SearchListItem = connect(null, mapDispatchToProps)(SearchListItemComponent)\n\nexport default SearchListItem","import React from 'react';\nimport { connect } from 'react-redux';\nimport SearchListItem, { SearchListItemProps } from './SearchListItem';\n\ninterface SearchListProps {\n    products:Array<SearchListItemProps>,\n    isProductsLoaded:boolean\n}\n\ninterface SearchListState {\n    products:Array<SearchListItemProps>\n}\n\nconst XOR = (a:boolean,b:boolean) => {\n    return !( ( a && !b ) || ( !a && b ) )\n}\n\nconst mapStateToProps = (reducer:any, other:any) => {\n    const { \n        products,\n        isRequestSended,\n        isResponseRecieved\n    } = reducer.SearchReducer.productsRequestState\n    const isProductsLoaded = XOR(isRequestSended, isResponseRecieved)\n    return {\n        products, isProductsLoaded\n    }\n}\n\nclass SearchListComponent extends React.Component<SearchListProps, SearchListState> {\n    // constructor(props:SearchListProps, state:SearchListState) {\n    //     super(props, state)\n\n    //     this.state = {\n    //         products:props.products\n    //     }\n    // }\n\n    // componentWillUpdate(props:SearchListProps, state:SearchListState) {\n    //     console.log(\"SearchListComponentWillUpdate\", props, state)\n    //     this.setState({\n    //         products: props.products\n    //     })\n    // }\n\n    render() {\n        // console.log(\"RENDER SEARCH LIST\", this.props)\n        const {\n            products, isProductsLoaded\n        } = this.props\n\n        if (isProductsLoaded)\n            return (\n                <tbody>\n                    {products.map((product:SearchListItemProps, index:number) => {\n                        return (\n                            <SearchListItem \n                                key={index}\n                                id={product.id}\n                                index={index}\n                                name={product.name}\n                                warehouse_id={product.warehouse_id}\n                                photoUrl={product.photoUrl}\n                                price={product.price}\n                                discount={product.discount}\n                                remain={product.remain}\n                            />\n                        )   \n                    })}\n                </tbody>\n            )\n        else\n            return (\n                <h1>No results</h1>\n            )\n    }\n}\n\nconst SearchList = connect(mapStateToProps)(SearchListComponent)\n\nexport default SearchList\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISearchForm, IHandleSearch } from '../types'\nimport ActionButton from './ActionButton';\nimport { warehouses } from '../redusers/initState';\n\nconst XOR = (a:boolean,b:boolean) => {\n    return !( ( a && !b ) || ( !a && b ) )\n}\n\nconst mapStateToProps = (reducer:any, other:any) => {\n    const { searchInput, searchFormSubmitted } = reducer.SearchReducer.searchFormState\n    return {\n        searchInput, searchFormSubmitted\n    }\n}\n\ninterface ISearchFormFilter extends ISearchForm {\n    selectedFilter:string|undefined\n}\n\n// const dispatchToProps = (dispatch:any) => {\n//     return {\n//         getProductsInSearch: (searchKey:string) => dispatch(getProductsInSearch(searchKey)),\n//         getProductsFake: (searchKey:string) => dispatch(getProductsFake(searchKey))\n//     }\n// }\n\nclass SearchFormComponent extends React.Component<ISearchForm, ISearchFormFilter> {\n\n    constructor(props:ISearchForm, state:ISearchFormFilter) {\n        super(props, state)\n\n        this.state = {\n            ...props,\n            selectedFilter:undefined\n        }\n\n        this.handleSearchFormSubmit = this.handleSearchFormSubmit.bind(this)\n        this.handleSearchFieldChange = this.handleSearchFieldChange.bind(this)\n        this.handleFilterChange = this.handleFilterChange.bind(this)\n        this.handleSearch = this.handleSearch.bind(this)\n    }\n\n    componentDidMount() {\n        const search = window.location.search\n        const params = new URLSearchParams(search)\n        const searchInput = params.get('searchKey')\n        const selectedFilter = params.get('selectedFilter')\n\n        const { action } = this.props\n        this.handleSearch(\n            searchInput === null ? \"\" : searchInput,\n            selectedFilter === null ? undefined : selectedFilter,\n            action\n        )\n    }\n\n    handleSearch(searchInput:string, selectedFilter:string|undefined, action:IHandleSearch) {\n        action(searchInput, selectedFilter)\n        this.setState({\n            searchInput: \"\"\n        })\n    }\n\n    handleSearchFormSubmit(event:React.FormEvent<HTMLFormElement>):void {\n        event.preventDefault()\n        const { searchInput, selectedFilter } = this.state\n        const { action } = this.props\n        this.handleSearch(searchInput, selectedFilter, action)\n    }\n\n    handleSearchFieldChange(event:React.ChangeEvent<HTMLInputElement>):void {\n        event.preventDefault()\n        this.setState({\n            searchInput: event.target.value\n        })\n    }\n\n    handleFilterChange(event:React.ChangeEvent<HTMLSelectElement>):void {\n        this.setState({\n            selectedFilter: event.target.value\n        })\n    }\n\n    render() {\n        const { searchInput } = this.state\n        return (\n            <div className=\"SearchForm\">\n                <div className=\"content standart-container\">\n                    <h1 className=\"title\">Пошук</h1>\n\n                    <div className=\"input-group standart-container\">\n                        <input\n                            type=\"text\"\n                            id=\"searchInput\"\n                            value={searchInput}\n                            className=\"form-control\"\n                            aria-label=\"Sarch in warehouses\"\n                            onChange={this.handleSearchFieldChange}\n                            placeholder=\"Введіть назву товару\"\n                        />\n                        <select className=\"custom-select\" id=\"inputGroupSelect04\"\n                            aria-label=\"Example select with button addon\"\n                            onChange={this.handleFilterChange}\n                            >\n                            <option selected>У всіх Аптеках</option>\n                            {warehouses.map((warehouse, index) => {\n                                return (\n                                    <option key={index} value={warehouse.id}>\n                                        {`№${warehouse.id} ${warehouse.address}`}\n                                    </option>\n                                )\n                            })}\n                        </select>\n                        <div className=\"input-group-append\">\n                            <ActionButton\n                                text=\"Шукати\"\n                                classList={[\"default-button\"]}\n                                action={this.handleSearchFormSubmit}\n                                iconName=\"\"\n                                iconSvgSrc=\"\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst SearchForm = connect(mapStateToProps)(SearchFormComponent)\n\nexport default SearchForm","import React from 'react'\nimport { connect } from 'react-redux'\nimport SearchList from './SearchList'\nimport SearchForm from './SearchForm'\nimport { IHandleSearch } from '../types'\n\ninterface SearchBlockProps {\n    products:Array<any>,\n    isRequestSended:boolean,\n    isResponseRecieved:boolean,\n    searchInput:string,\n    searchFormSubmitted:boolean,\n    handleSearch:IHandleSearch\n}\n\ninterface SearchBlockState {\n\n}\n\nconst mapStateToProps = (reducer:any, other:any) => {\n    console.log(\"mapStateToProps in SEARCHBLOCK:\", reducer, other)\n    const { SearchReducer } = reducer\n    const { productsRequestState, searchFormState } = SearchReducer\n    const { products, isRequestSended, isResponseRecieved } = productsRequestState\n    const { searchFormSubmitted, searchInput } = searchFormState\n    return {\n        products, isRequestSended, isResponseRecieved,\n        searchInput, searchFormSubmitted\n    }\n}\n\nconst SearchTableHeader = () => {\n    return(\n        <thead className=\"thead-dark\">\n            <tr>\n                <th>Назва Товару</th>\n                <th>Аптека</th>\n                <th>Ціна</th>\n                <th>Кількість</th>\n                <th></th>\n            </tr> \n        </thead>\n    )\n}\n\nconst XOR = (a:boolean,b:boolean) => {\n    return !( ( a && !b ) || ( !a && b ) )\n}\n\nclass SearchBlock extends React.Component<SearchBlockProps, SearchBlockState> {\n    render() {\n        console.log(\"RERENDER SEARCH BLOCK\")\n        const {\n            products,\n            isRequestSended,\n            isResponseRecieved,\n            searchInput,\n            searchFormSubmitted,\n            handleSearch\n        } = this.props\n\n        const isProductsLoaded = XOR(isRequestSended, isResponseRecieved)\n\n        return (\n            <div className=\"SearchBlock\">\n                <SearchForm\n                    searchInput={searchInput}\n                    searchFormSubmitted={searchFormSubmitted}\n                    action={handleSearch}\n                />\n                <table className=\"table standart-container\">\n                    <SearchTableHeader />\n                    <SearchList products={products} isProductsLoaded={isProductsLoaded}/>\n                </table>     \n            </div>\n            \n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SearchBlock)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IMainMenuData } from '../types';\nimport { Link } from 'react-router-dom';\n\nconst getItemClasses = (isItemActive:boolean):string => {\n    return isItemActive ? \"nav-item active\": \"nav-item\"\n}\n\nconst addSpanForSR = (isItemActive:boolean) => {\n    if (isItemActive)\n        return (\n            <span className=\"sr-only\">(current)</span>\n        )\n}\n\n\nconst MainMenuSimple = ({items, logoUrl}:IMainMenuData) => {\n    return (\n        <div className=\"MainMenuSimple\">\n            <div className=\"row standart-container menu\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            <img src={logoUrl} alt=\"Logo\"/>\n                        </a>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav nav\">\n                            {items.map( (item, index) => {\n                                return (\n                                    <li key={index} className={getItemClasses(false)}>\n                                        <Link className=\"nav-link\" to={item.url}>\n                                            {item.name}\n                                            {addSpanForSR(false)}\n                                        </Link>\n                                    </li>\n                                )\n                            })}\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(MainMenuSimple)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISearchState, IInfoLayer } from '../types';\nimport { showInfoLayer, hideInfoLayer } from '../actions';\nimport { Animated } from \"react-animated-css\"\n\n\nconst mapStateToProps = (rootReducer:ISearchState, props:IInfoLayer):IInfoLayer => {\n    const { infoLayerState } = rootReducer\n    return {\n        ...infoLayerState\n    }\n}\n\nconst mapDispathToProps = (dispatch:any) => {\n    return {\n        showInfoLayer: (payload:IInfoLayer) => dispatch(showInfoLayer(payload)),\n        hideInfoLayer: () => dispatch(hideInfoLayer())\n    }\n}\n\nconst InfoLayer = ({text, timer, active, hideInfoLayer }:IInfoLayer) => {\n    let animationIDuration:number\n    let animationInDelay:number\n    let animationOutDuration:number\n    if (active && timer !== 0) {\n        setTimeout( () => {\n            hideInfoLayer()\n        }, (timer * 1000) + 600)\n        animationIDuration = 300\n        animationOutDuration = 300\n        animationInDelay = 0\n    } else if (!active && timer !== 0) {\n        animationIDuration = 300\n        animationOutDuration = 300\n        animationInDelay = 0\n    } else {\n        animationIDuration = 0\n        animationOutDuration = 0\n        animationInDelay = 300\n    }\n    \n    return (\n        <Animated\n            animationIn=\"fadeIn\"\n            animationOut=\"fadeOut\"\n            isVisible={active}\n            animationOutDuration={animationOutDuration}\n            animationInDuration={animationIDuration}\n            animationInDelay={animationInDelay}\n        >\n            <div className=\"InfoLayer\">\n                <div className=\"wrapper\">\n                    <div className=\"block\">\n                        <p className=\"text\">{text}</p>\n                    </div>\n                </div>\n            </div>\n        </Animated>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(InfoLayer)","const PRODUCTS_BACKEND = \"http://localhost:5000\"\nconst MAIN_BACKEND = \"http://localhost:8000\"\n\nexport const GET_PRODUCTS_URL = `${PRODUCTS_BACKEND}/products`\nexport const REGISTER_USER = `${MAIN_BACKEND}/api/user/register`\nexport const ORDERS_URL = `${PRODUCTS_BACKEND}/orders`\nexport const LOGIN_URL = `${MAIN_BACKEND}/api/token/`\nexport const REFRESH_TOKEN_URL = `${MAIN_BACKEND}/api/token/refresh`\nexport const GET_USER_URL = `${MAIN_BACKEND}/api/user/retrieve`","import React from 'react'\nimport { connect } from 'react-redux'\nimport { mainMenuSimpleState } from '../redusers/initState'\nimport { \n    getProductsRequestSended,\n    setProductsSuccess\n} from '../actions'\nimport SearchBlock from '../components/SearchBlock'\nimport axios from 'axios'\nimport { ISearchState } from '../types'\nimport MainMenuSimple from '../components/MainMenuSimple'\nimport InfoLayer from '../components/InfoLayer'\nimport { GET_PRODUCTS_URL } from '../constants';\n\n\n// interface SearchProps extends ISearchState {\n//     getProductsRequestSended: IAction,\n//     setProductsSuccess: IActionPayload\n// }\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        getProductsRequestSended: () => dispatch(getProductsRequestSended()),\n        setProductsSuccess: (products:any) => dispatch(setProductsSuccess(products))\n    }\n  }\n\nconst mapStateToProps = (reducer:any) => {\n    const { SearchReducer } = reducer\n    return {\n        ...SearchReducer\n    }\n}\n\n\nclass SearchPage extends React.Component<ISearchState, ISearchState> {\n\n    constructor(props:ISearchState, state:ISearchState) {\n        super(props, state)\n\n        this.state = {\n            ...props\n        }\n\n        this.handleSearch = this.handleSearch.bind(this)\n    }\n\n    // componentWillUnmount() {\n    //     const { cartState } = this.props\n    //     const cartStateJsonStr:string = JSON.stringify(cartState)\n    //     localStorage.setItem(\"cart\", cartStateJsonStr)\n    // }\n\n    handleSearch(searchKey:string, warehouse_id?:string) {\n        const { \n            getProductsRequestSended,\n            setProductsSuccess\n        } = this.props\n        getProductsRequestSended()\n\n        let params:{[key:string]:any} = {\n            offset:0,\n            limit:10,\n            filter_name:searchKey,\n        }\n        if (warehouse_id)\n            params[\"warehouses\"] = [warehouse_id]\n\n        console.log(\"handleSearch: \", params)\n\n        axios.get(GET_PRODUCTS_URL, {\n            params\n        })\n        .then((response) => {\n            if (response.data.code === 200) {\n                console.log(\"SUCCESS\", response.data)\n                setProductsSuccess(response.data)    \n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\")\n            \n        })\n        .finally(() => {\n\n        })\n    }\n\n    componentWillUpdate() {\n        console.log(\"componentWillUpdate\")\n    }\n\n    componentDidUpdate() {\n        console.log(\"componentDidUpdate\")\n    }\n\n    render() {\n        const { productsRequestState, searchFormState, infoLayerState, topNavBarState } = this.props\n        const { products, isRequestSended, isResponseRecieved } = productsRequestState\n        const { searchFormSubmitted, searchInput } = searchFormState\n\n        return (\n            <div className=\"search-page\">\n                {/* <TopNavBar { ...topNavBarState } /> */}\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <SearchBlock\n                    products={products}\n                    isRequestSended={isRequestSended}\n                    isResponseRecieved={isResponseRecieved}\n                    searchInput={searchInput}\n                    searchFormSubmitted={searchFormSubmitted}\n                    handleSearch={this.handleSearch}\n                />\n                <InfoLayer {...infoLayerState}/>\n            </div>\n        )\n    }\n}\n\nconst Search = connect(mapStateToProps, mapDispatchToProps)(SearchPage)\n\nexport default Search;","import { \n  INIT_PRODUCTS_SEARCH,\n  SET_PRODUCTS_SEARCH,\n  SET_PRODUCTS_SEARCH_SUCCESS,\n  SET_PRODUCTS_SEARCH_FAIL,\n  SET_PRODUCTS_FAKE,\n  SHOW_INFO_BLOCK,\n  HIDE_INFO_BLOCK,\n  ADD_PRODUCT_TO_CART,\n  ADD_ITEM_TOP_CART,\n  REMOVE_PRODUCT_FROM_CART,\n  PLUS_PRODUCT_TO_CART,\n  MINUS_PRODUCT_TO_CART,\n  CLEAR_CART,\n  CHANGE_REGISTER_FORM_FIELD,\n  SUBMIT_REGISTER_FORM,\n  CLEAN_REGISTER_FORM,\n  CHANGE_LOGIN_FORM_FIELD,\n  CLEAN_LOGIN_FORM,\n  SET_USER_DATA,\n  SET_USER_FULL_DATA\n} from \"../actions/types\";\n\nimport {\n  searchInitState,\n  homePageState,\n  defaultState,\n  profilePageState,\n  registerForm,\n  loginForm\n} from './initState';\n\nimport { IHomePage, ISearchState, IProductItem, ICart, IProfilePage } from \"../types\";\n\nexport const DefaultReducer = (state = defaultState, action:any) => {\n\n  if (action.type === ADD_ITEM_TOP_CART) {\n    const { topNavBarState } = state\n    return {\n      ...state,\n      topNavBarState: {\n        ...topNavBarState,\n        cartOrdersCount:topNavBarState.cartOrdersCount + action.payload\n      }\n    }\n  }\n\n  if (action.type === SET_USER_DATA) {\n    const { topNavBarState } = state\n    return {\n      ...state,\n      topNavBarState:{\n        ...topNavBarState,\n        isUserAuth:true,\n        userName:action.payload\n      }\n    }\n  }\n\n  return state\n}\n\nexport const HomeReducer = (state = homePageState, action:any):IHomePage => {\n  if (action.type === \"VOID\") {    \n    return {\n      ...state\n    }\n  }\n\n  return state\n}\n\nexport const ProfileReducer = (state = profilePageState, action:any):IProfilePage => {\n\n  if (action.type === SET_USER_FULL_DATA) {\n    return {\n      ...state,\n      userState:{\n        ...action.payload\n      }\n    }\n  }\n\n  return state\n}\n\n\nexport const SearchReducer = (state = searchInitState, action:any):ISearchState => {\n\n  if (action.type === INIT_PRODUCTS_SEARCH) {    \n    return {\n      ...state\n    }\n  }\n\n  if (action.type === CLEAR_CART) {\n    localStorage.removeItem(\"cart\")\n    return {\n      ...state,\n      cartState:{\n        products:[],\n        totalCount:0,\n        totalPrice:0,\n        totalPriceDiscount:-1\n      }\n    }\n  }\n\n  if (action.type === SET_PRODUCTS_FAKE) {    \n    const { searchFormState } = state\n    const { message, code, data, total } = action.payload\n    return {\n      ...state,\n      productsRequestState: {\n        message:message,\n        products:[{\n          id: 1,\n          index: 1,\n          name: action.payload,\n          photo_url: \"http://URL\",\n          warehouse_id: \"9\",\n          price: 100,\n          discount: 15,\n          remain: 102\n        }],\n        isRequestSended:true,\n        isResponseRecieved:true,\n        error:\"\",\n        code:0,\n        total:1\n      },\n      searchFormState: {\n        ...searchFormState,\n        searchFormSubmitted:false,\n        searchInput:\"\"\n      },\n    }\n  }\n\n  if (action.type === SET_PRODUCTS_SEARCH) {\n    const { productsRequestState, searchFormState } = state\n\n    return {\n      ...state,\n      productsRequestState: {\n        ...productsRequestState,\n        isRequestSended:true,\n        isResponseRecieved:false,\n      },\n      searchFormState: {\n        ...searchFormState,\n        searchFormSubmitted:true,\n        searchInput:\"\",\n      },\n    }\n  }\n\n  if (action.type === SET_PRODUCTS_SEARCH_SUCCESS) {\n    console.log(\"SET_PRODUCTS_SEARCH_SUCCESS\", state, action)\n    const { searchFormState } = state\n    const { message, code, data, total } = action.payload\n    return {\n      ...state,\n      productsRequestState: {\n        message:message,\n        products:data,\n        isRequestSended:true,\n        isResponseRecieved:true,\n        error:\"\",\n        code:code,\n        total:total\n      },\n      searchFormState: {\n        ...searchFormState,\n        searchFormSubmitted:false,\n        searchInput:\"\"\n      },\n    }\n  }\n\n  if (action.type === SET_PRODUCTS_SEARCH_FAIL) {\n    console.log(\"SET_PRODUCTS_SEARCH_FAIL\", state, action)\n    const { searchFormState } = state\n    const { message, code, error } = action.payload\n    return {\n      ...state,\n      productsRequestState: {\n        message:message,\n        products:[],\n        isRequestSended:true,\n        isResponseRecieved:true,\n        error:error,\n        code:code,\n        total:0\n      },\n      searchFormState: {\n        ...searchFormState,\n        searchFormSubmitted:false,\n        searchInput:\"\"\n      },\n    }\n  }\n\n  if (action.type === SHOW_INFO_BLOCK) {\n    const { infoLayerState } = state\n    const { text, timer } = action.payload\n    return {\n      ...state,\n      infoLayerState: {\n        ...infoLayerState,\n        text,\n        timer,\n        active:true\n      }\n    };\n  }\n\n  if (action.type === HIDE_INFO_BLOCK) {\n    const { infoLayerState } = state\n    return {\n      ...state,\n      infoLayerState: {\n        ...infoLayerState,\n        active:false\n      }\n    };\n  }\n\n  if (action.type === ADD_PRODUCT_TO_CART) {\n    const { cartState, topNavBarState } = state\n\n    let newProducts:IProductItem[] = []\n    let totalPrice:number = 0\n    let found:boolean = false\n\n    for (let product of cartState.products) {\n      if (product.id === action.payload.id) {\n        newProducts = newProducts.concat({\n          ...product,\n          count: product.count + action.payload.count,\n          // price: product.price + (action.payload.count * product.price)\n        })\n        totalPrice += product.price + (action.payload.count * product.price)\n        found = true\n      } else {\n        newProducts = newProducts.concat(product)\n        totalPrice += product.price * product.count\n      }\n    }\n\n    if (!found) {\n      newProducts = newProducts.concat(action.payload)\n      totalPrice += action.payload.price * action.payload.count\n    }\n\n    const newCartState:ICart = {\n      products:newProducts,\n      totalCount:newProducts.length,\n      totalPrice:totalPrice,\n      totalPriceDiscount:-1\n    }\n\n    const cartStateJsonStr:string = JSON.stringify(newCartState)\n    localStorage.setItem(\"cart\", cartStateJsonStr)\n\n    const newState = {\n      ...state,\n      cartState: newCartState,\n      topNavBarState: {\n        ...topNavBarState,\n        cartOrdersCount:newProducts.length\n      }\n    }\n    return newState\n  }\n\n  if (action.type === PLUS_PRODUCT_TO_CART) {\n    const { cartState, topNavBarState } = state\n\n    let newProducts:IProductItem[] = []\n    let totalPrice:number = 0\n\n    for (let product of cartState.products) {\n      if (product.id === action.payload) {\n        newProducts.push({\n          ...product,\n          count:product.count + 1\n        })\n        totalPrice += (product.count + 1) * product.price\n      } else {\n        newProducts.push(product)\n        totalPrice += product.count * product.price\n      }\n    }\n\n    const newCartState:ICart = {\n      products:newProducts,\n      totalCount:newProducts.length,\n      totalPrice:totalPrice,\n      totalPriceDiscount:-1\n    }\n\n    const cartStateJsonStr:string = JSON.stringify(newCartState)\n    localStorage.setItem(\"cart\", cartStateJsonStr)\n\n    return {\n      ...state,\n      cartState:newCartState,\n      topNavBarState: {\n        ...topNavBarState,\n        cartOrdersCount:newProducts.length\n      }\n    }\n  }\n\n  if (action.type === MINUS_PRODUCT_TO_CART) {\n    const { cartState, topNavBarState } = state\n\n    let newProducts:IProductItem[] = []\n    let totalPrice:number = 0\n\n    for (let product of cartState.products) {\n      if (product.id === action.payload) {\n        if (product.count >= 1) {\n          newProducts.push({\n            ...product,\n            count:product.count - 1\n          })\n          totalPrice += (product.count - 1) * product.price\n        } else {\n          newProducts.push(product)\n          totalPrice += product.count * product.price\n        }\n      }\n    }\n\n    const newCartState:ICart = {\n      products:newProducts,\n      totalCount:newProducts.length,\n      totalPrice:totalPrice,\n      totalPriceDiscount:-1\n    }\n\n    const cartStateJsonStr:string = JSON.stringify(newCartState)\n    localStorage.setItem(\"cart\", cartStateJsonStr)\n\n    return {\n      ...state,\n      cartState:newCartState,\n      topNavBarState: {\n        ...topNavBarState,\n        cartOrdersCount:newProducts.length\n      }\n    }\n  }\n\n  if (action.type === REMOVE_PRODUCT_FROM_CART) {\n    const { cartState, topNavBarState } = state\n\n    let newProducts:IProductItem[] = []\n    let totalPrice:number = 0\n\n    for (let product of cartState.products) {\n      if (product.id !== action.payload) {\n        newProducts.push(product)\n        totalPrice += product.count * product.price\n      }\n    }\n\n    const newCartState:ICart = {\n      products:newProducts,\n      totalCount:newProducts.length,\n      totalPrice:totalPrice,\n      totalPriceDiscount:-1\n    }\n\n    const cartStateJsonStr:string = JSON.stringify(newCartState)\n    localStorage.setItem(\"cart\", cartStateJsonStr)\n\n    return {\n      ...state,\n      cartState:newCartState,\n      topNavBarState: {\n        ...topNavBarState,\n        cartOrdersCount:newProducts.length\n      }\n    }\n  }\n\n  return state;\n}\n\nexport const RegisterReducer = (state = registerForm, action:any) => {\n\n  if (action.type === CHANGE_REGISTER_FORM_FIELD) {\n    const { name, value } = action.payload\n    let newForm:{[name:string]:string} = {}\n    newForm[name] = value\n    return {\n      ...state,\n      ...newForm\n    }\n  }\n\n  if (action.type === SUBMIT_REGISTER_FORM) {\n    return state\n  }\n\n  if (action.type === CLEAN_REGISTER_FORM) {\n    return {\n      ...registerForm\n    }\n  }\n\n  return state\n}\n\nexport const LoginReducer = (state = loginForm, action:any) => {\n\n  if (action.type === CHANGE_LOGIN_FORM_FIELD) {\n    const { name, value } = action.payload\n    let newForm:{[name:string]:string} = {}\n    newForm[name] = value\n    return {\n      ...state,\n      ...newForm\n    }\n  }\n\n  if (action.type === CLEAN_LOGIN_FORM) {\n    return {\n      ...loginForm\n    }\n  }\n\n  return state\n}\n\nexport default DefaultReducer\n","import { createStore, combineReducers } from \"redux\";\nimport DefaultReducer, {\n    SearchReducer, HomeReducer, ProfileReducer,\n    RegisterReducer, LoginReducer\n} from \"../redusers\";\n\nconst rootReducer = combineReducers({\n    DefaultReducer,\n    SearchReducer,\n    HomeReducer,\n    ProfileReducer,\n    RegisterReducer,\n    LoginReducer\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react'\nimport { connect } from 'react-redux'\nimport ActionButton from './ActionButton'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { setUserData } from '../actions'\nimport { REFRESH_TOKEN_URL, GET_USER_URL } from '../constants'\n\ninterface TopNavBarData {\n    phonesNumbers:string[],\n    isUserAuth:boolean,\n    cartOrdersCount:number,\n    userName:string,\n    setUserData:(payload:string) => void\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        setUserData: (payload:string) => {dispatch(setUserData(payload))}\n    }\n}\n\nconst mapStateToProps = (reducer:any, props:TopNavBarData) => {\n    const { topNavBarState } = reducer.DefaultReducer\n    return {\n        ...props,\n        ...topNavBarState\n    }\n}\n\nconst renderLoginRegister = () => {\n    return (\n        <div className=\"authBlock\">\n            <ActionButton\n                text={\"Увійти\"}\n                iconName=\"\"\n                action={() => {window.location.href=\"/login\"}}\n                classList={[\"svg-icon\"]}\n                iconSvgSrc=\"/svg/user.svg\"\n            />\n            <ActionButton\n                text={\"Зареєструватися\"}\n                iconName=\"\"\n                action={() => {window.location.href=\"/register\"}}\n                classList={[\"svg-icon\"]}\n                iconSvgSrc=\"/svg/user.svg\"\n            />\n        </div>\n    )\n}\n\nconst renderUserStatus = (name:string) => {\n    return (\n        <div className=\"authBlock\">\n            <div></div>\n            <div className=\"user-status\">\n                <span>{name}</span>\n            </div>\n        </div>\n    )\n}\n\nconst renderAuth = (isUserAuth:boolean, userName:string) => {\n    if (isUserAuth)\n        return renderUserStatus(userName)\n    else\n        return renderLoginRegister()\n}\n\nconst handleRefreshToken = (refreshToken:string) => {\n    axios.post(REFRESH_TOKEN_URL, {\n        refresh:refreshToken\n    })\n    .then((response) => {\n        if (response.status === 200) {\n            console.log(response)\n            const { access } = response.data\n            localStorage.setItem(\"accessToken\", access)\n            window.location.reload()\n        }\n    })\n    .catch((error) => {\n        console.log(\"ERROR\", error)\n    })\n    .finally(() => {\n\n    })\n}\n\nconst getUserInfo = (\n        accessToken:string,\n        refreshToken:string,\n        refreshCallBack:(refreshToken:string) => void,\n        setUserDataAction:(payoad:string) => void\n    ) => {\n    axios.get(GET_USER_URL, {\n        headers: {Authorization: \"Bearer \" + accessToken}\n    })\n    .then((response) => {\n        if (response.status === 200) {\n            console.log(response)\n            const { fname, lname, email} = response.data\n            // const userName = `${fname} ${lname}`\n            const userName = email\n            localStorage.setItem(\"userName\", userName)\n            setUserDataAction(userName)\n        } else if (response.status === 401) {\n            // refreshCallBack(refreshToken)\n            // TODO:\n            localStorage.removeItem(\"accessToken\")\n            localStorage.removeItem(\"refreshToken\")\n            window.location.href = \"/login\"\n        }\n    })\n    .catch((error) => {\n        console.log(\"ERROR\", error)\n    })\n    .finally(() => {\n\n    })\n}\n\nconst checkUserData = (setUserData:(payload:string) => void) => {\n    const userName = localStorage.getItem(\"userName\")\n    if (!userName) {\n        const accessToken = localStorage.getItem(\"accessToken\")\n        const refreshToken = localStorage.getItem(\"refreshToken\")\n\n        if (accessToken && refreshToken) {\n            getUserInfo(\n                accessToken,\n                refreshToken,\n                handleRefreshToken,\n                setUserData\n            )\n        }\n    } else {\n        setUserData(userName)\n    }\n}\n\nconst TopNavBar = ({phonesNumbers, isUserAuth, cartOrdersCount, setUserData, userName}:TopNavBarData) => {\n    checkUserData(setUserData)\n    return (\n        <div className=\"TopNavBar\">\n            <div className=\"left-block TopNavBar-block\">\n                <div className=\"phones\">\n                    <span>Аптечна довідка:</span>\n                    {phonesNumbers.map((phone, index) => {\n                        return (\n                            <span className=\"phoneNumber\" key={index}>{phone}</span>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"right-block TopNavBar-block\">\n                {renderAuth(isUserAuth, userName)}\n                <Link to=\"/profile\">\n                    <ActionButton\n                        text={`Ваш кошик: ${cartOrdersCount} товарів`}\n                        iconName=\"\"\n                        iconSvgSrc=\"/svg/basket.svg\"\n                        action={() => {console.log(\"Cart click\")}}\n                        classList={[\"cart\", \"svg-icon\"]}\n                    />\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavBar)","import React from 'react';\n\ninterface BottomFooterBlockData {\n    text:string\n}\n\nconst BottomFooterBlock = ({ text }:BottomFooterBlockData) => {\n    return (\n        <div className=\"BottomFooterBlock\">\n            <span className=\"copyright\">{text}</span>\n        </div>\n    )\n}\n\nexport default BottomFooterBlock","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IMainMenuData } from '../types';\nimport { Link } from 'react-router-dom';\n\n\nconst FooterMenu = ({ items, logoUrl }:IMainMenuData) => {\n    return (\n        <div className=\"FooterMenu\">\n            <div className=\"Logo\">\n                <img src={logoUrl} alt=\"Logo\"/>\n            </div>\n            <ul className=\"nav flex-column menu\">\n                {items.map( (item, index) => {\n                    return (\n                        <li key={index} className=\"nav-item menuItem\">\n                            <Link className=\"nav-link menuLink\" to={item.url}>\n                                {item.name}\n                            </Link>\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default connect()(FooterMenu)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IContactsList } from '../types';\n\n\nconst FooterContacts = ({ items, title }:IContactsList) => {\n    return (\n        <div className=\"FooterContacts\">\n            <h2 className=\"footerHeader\">{title}</h2>\n            <ul className=\"contacts\">\n                {items.map( (item, index) => {\n                    return (\n                        <li key={index}>{item}</li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default connect()(FooterContacts)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISocialList } from '../types';\n\n\nconst FooterSocial = ({ items, title }:ISocialList) => {\n    return (\n        <div className=\"FooterSocial\">\n            <h2 className=\"footerHeader\">{title}</h2>\n            <div className=\"social\">\n                {items.map( (item, index) => {\n                    return (\n                        <a key={index} href={item.link}>\n                            <img src={`/svg/${item.iconName}.svg`} alt=\"\"/>\n                        </a>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(FooterSocial)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IBackForm } from '../types';\n\nclass FooterBackForm extends React.Component<IBackForm, IBackForm> {\n\n    handleSearchFormSubmit() {\n\n    }\n\n    render() {\n        const { title } = this.props\n        return (\n            <div className=\"FooterBackForm\">\n                <h2 className=\"footerHeader\">\n                    {title}\n                </h2>\n\n                <form className=\"form\" onSubmit={this.handleSearchFormSubmit}>\n\n                    <input \n                        type=\"text\"\n                        className=\"searchFormField\"\n                        id=\"backFormName\"\n                        value=\"\"\n                        placeholder=\"Ваше Ім’я\"\n                    />\n\n                    <input \n                        type=\"text\"\n                        className=\"searchFormField\"\n                        id=\"backFormCell\"\n                        value=\"\"\n                        placeholder=\"Телефон\"\n                    />\n\n                    <textarea\n                        id=\"backFormMessage\"\n                        value=\"\"\n                        name=\"\"\n                        cols={30}\n                        rows={3}\n                        placeholder=\"Повідомлення\"\n                    />\n\n                    <button type=\"submit\">Надіслати</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect()(FooterBackForm)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { IFooterBlock } from '../types';\nimport FooterMenu from './FooterMenu';\nimport FooterContacts from './FooterContacts';\nimport FooterSocial from './FooterSocial';\nimport FooterBackForm from './FooterBackForm';\n\n\nconst FooterBlock = ({\n    footerMenu, contactsList, socialList, backForm\n}:IFooterBlock) => {\n    return (\n        <div className=\"FooterBlock standart-container\">\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <FooterMenu {...footerMenu}/>\n                </div>\n                <div className=\"col-md-3\">\n                    <FooterContacts {...contactsList}/>\n                </div>\n                {/* <div className=\"col-md-3\">\n                    <FooterSocial {...socialList}/>\n                </div>\n                <div className=\"col-md-3\">\n                    <FooterBackForm {...backForm}/>\n                </div> */}\n\n                <div className=\"col-md-6\">\n                    <div className=\"row\">\n                        <div className=\"col-md-5\">\n                            <FooterSocial {...socialList}/>\n                        </div>\n                        <div className=\"col-md-7\">\n                            <FooterBackForm {...backForm}/>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default connect()(FooterBlock)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { IHomePage } from '../types/Interfaces'\nimport MainMenuBig from '../components/MainMenuBig'\n\n\nclass NotFoundPage extends React.Component<IHomePage, IHomePage> {\n    render() {\n        const {\n            mainMenuOriginState\n        } = this.props\n        return (\n            <div className=\"NotFoundPage\">\n                <MainMenuBig {...mainMenuOriginState}/>\n                <h1 className=\"code\">404</h1>\n                <h2 className=\"text\">Сторінки не існує</h2>\n            </div>\n        )\n    }\n}\n\nexport default connect()(NotFoundPage)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\n\ninterface IBreadcrumbpPage {\n    name:string,\n    url:string|null\n}\n\ninterface IBreadcrumbp {\n    pages:IBreadcrumbpPage[]\n}\n\nconst renderLink = (page:IBreadcrumbpPage) => {\n    if (page.url) {\n        return (\n            <Link to={page.url}>{page.name}</Link>\n        )\n    } else {\n        return (\n            <span>{page.name}</span>\n        )\n    }\n}\n\nconst renderDivider = (index:number, length:number) => {\n    if (index !== length - 1) {\n        return (\n            <span>/</span>\n        )\n    } else {\n        return (\n            <span></span>\n        )\n    }\n}\n\nconst Breadcrumbp = ({pages}:IBreadcrumbp) => {\n    const length = pages.length\n    return (\n        <p className=\"breadCrumpb\">\n            {pages.map( (page, index) => {\n                return (\n                    <span key={index}>\n                        {renderLink(page)}{renderDivider(index, length)}\n                    </span>\n                )\n            })}\n        </p>\n    )\n}\n\nexport default connect()(Breadcrumbp)","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainMenuSimple from '../components/MainMenuSimple'\nimport { IProfilePage, IInfoLayer, IWarehouse, IUser } from '../types'\nimport ActionButton from '../components/ActionButton'\nimport { getWarehouseById } from '../redusers/initState'\nimport axios from 'axios'\nimport {\n    removeProductFromCart,\n    plusProductToCart,\n    minusProductFromCart,\n    showInfoLayer,\n    clearCart,\n    setUserFullData\n} from '../actions'\nimport InfoLayer from '../components/InfoLayer'\nimport Breadcrumbp from '../components/Breadcrumbp'\nimport { ORDERS_URL, GET_USER_URL } from '../constants'\n\ninterface IProductData {\n    id:number,\n    count:number\n}\n\ninterface IOrderRequest {\n    warehouse_id:string,\n    products_data:IProductData[]\n}\n\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        removeProductFromCart: (payload:number) => {dispatch(removeProductFromCart(payload))},\n        plusProductToCart: (payload:number) => {dispatch(plusProductToCart(payload))},\n        minusProductFromCart: (payload:number) => {dispatch(minusProductFromCart(payload))},\n        showInfoLayer: (payload:IInfoLayer) => {dispatch(showInfoLayer(payload))},\n        clearCart: () => {dispatch(clearCart())},\n        setUserFullData: (payload:IUser) => {dispatch(setUserFullData(payload))}\n    }\n}\n\nconst mapStateToProps = (reducer:any) => {\n    const { ProfileReducer, SearchReducer } = reducer\n    console.log(\"STATE TO PROPS\", ProfileReducer)\n    return {\n        ...ProfileReducer,\n        cartState:SearchReducer.cartState,\n        topNavBarState:SearchReducer.topNavBarState,\n        infoLayerState:SearchReducer.infoLayerState\n    }\n}\n\nconst renderUserPhoto = (photoUrl:string) => {\n    if (photoUrl)\n        return (\n            <img src={photoUrl} alt=\"user photo\"/>\n        )\n    else\n        return (\n            <img src=\"/images/user.png\" alt=\"user photo\"/>\n        )\n}\n\nclass Profile extends React.Component<IProfilePage, IProfilePage> {\n    constructor(props:IProfilePage, state:IProfilePage) {\n        super(props, state)\n\n        this.removeItemFromCart = this.removeItemFromCart.bind(this)\n        this.createOrder = this.createOrder.bind(this)\n        this.sendFinishMessage = this.sendFinishMessage.bind(this)\n    }\n\n    componentDidMount() {\n        const accessToken = localStorage.getItem(\"accessToken\")\n        axios.get(GET_USER_URL, {\n            headers: {Authorization: \"Bearer \" + accessToken}\n        })\n        .then((response) => {\n            if (response.status === 200) {\n                const { setUserFullData } = this.props\n                setUserFullData(response.data)\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n            window.location.href = \"/login\"\n        })\n        .finally(() => {\n\n        })\n    }\n\n    sendFinishMessage(warehousesError:string[]) {\n        console.log(\"sendFinishMessage\")\n        const { showInfoLayer } = this.props\n        let text:string = \"Деякі товари з вашого списку не вдалось забронювати: \\n\"\n\n        if (warehousesError.length === 0) {\n            showInfoLayer({\n                text:\"Вітаємо, ви успішно здійснили бронювання, найблищим часом наш працівник зателефонує вам для уточнення деталей\",\n                timer:2,\n            })\n        } else {\n            let warehouse:IWarehouse\n            for (let warehouseId of warehousesError) {\n                warehouse = getWarehouseById(warehouseId)\n                text += `№${warehouseId} ${warehouse.address}`\n            }\n            showInfoLayer({\n                text,\n                timer:2,\n            })\n        }\n        const { clearCart } = this.props\n        clearCart()   \n    }\n\n    removeItemFromCart(itemId:number) {\n        const { removeProductFromCart } = this.props\n        removeProductFromCart(itemId)\n    }\n\n    createOrder() {\n        const { cartState } = this.props\n\n        let orders:{[key:string]:IOrderRequest} = {}\n        let ordersLength:number = 0\n\n        for (let productItem of cartState.products) {\n            if (orders[productItem.warehouse_id]) {\n                orders[productItem.warehouse_id].products_data.push({\n                    id:productItem.id,\n                    count:productItem.count\n                })\n                ordersLength++\n            } else {\n                orders[productItem.warehouse_id] = {\n                    warehouse_id:productItem.warehouse_id,\n                    products_data:[{\n                        id:productItem.id,\n                        count:productItem.count\n                    }]\n                }\n                ordersLength++\n            }\n        }\n\n        let order:IOrderRequest\n        let counter:number = 0\n        let warehousesError:string[] = []\n\n        const accessToken = localStorage.getItem(\"accessToken\")\n\n        for (let warehouseId in orders) {\n            console.log(\"REQUEST\", warehouseId)\n\n            order = orders[warehouseId]\n\n            axios.post(ORDERS_URL, {\n                warehouse_id:order.warehouse_id,\n                products:order.products_data\n            }, {\n                headers: {Authorization: \"Bearer \" + accessToken}\n            })\n            .then((response) => {\n                if (response.status === 201) {\n                    counter++\n                    if (counter === ordersLength) {\n                        console.log(\"END\")\n                        this.sendFinishMessage(warehousesError)\n                    }\n                }\n            })\n            .catch((error) => {\n                console.log(\"ERROR\", error)\n                warehousesError.push(warehouseId)\n                counter++\n                if (counter === ordersLength) {\n                    console.log(\"END\")\n                    this.sendFinishMessage(warehousesError)\n                }\n            })\n            .finally(() => {\n\n            })\n        }\n\n    }\n\n\n\n    render() {\n        const { mainMenuSimpleState, userState, cartState, infoLayerState } = this.props\n        const { products, totalCount, totalPriceDiscount, totalPrice } = cartState\n\n        let price:string\n\n        if (totalPriceDiscount === -1)\n            price = totalPrice.toFixed(2)\n        else\n            price = totalPriceDiscount.toFixed(2)\n\n        return (\n            <div className=\"Profile\">\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <div className=\"header\">\n                    <div className=\"content standart-container\">\n                        <h1 className=\"title\">Мій кабінет</h1>\n                        <Breadcrumbp\n                            pages={[{\n                                name:\"Головна\",\n                                url:\"/\"\n                            },{\n                                name:\"Мій кабінет\",\n                                url:null\n                            }]}\n                        />\n                    </div>\n                </div>\n                <div className=\"body standart-container\">\n                    <div className=\"leftSidebar\">\n                        <div className=\"userPhoto\">\n                            {renderUserPhoto(userState.photoUrl)}\n                        </div>\n                        <div className=\"menu\">\n                            {/* <ul>\n                                <li>Мої Бронювання</li>\n                                <li>Ваучер на знижку</li>\n                                <li>Налаштування</li>\n                                <li>Історія Бронювань</li>\n                                <hr/>\n                                <li>Вихід</li>\n                            </ul> */}\n                        </div>\n                    </div>\n                    <div className=\"rightSidebar\">\n                        <div className=\"userBio\">\n                            <h1 className=\"userName\">{userState.fname} {userState.lname}</h1>\n                            <p className=\"userEmail\">{userState.email}</p>\n                            <p className=\"userCell\">{userState.cell}</p>\n                        </div>\n                        <div className=\"cartOrders\">\n                            <div className=\"info\">\n                                <span className=\"text\">{`Мої Бронювання (${totalCount}од. / ${price} грн)`}</span>\n                                <ActionButton\n                                    text={\"Підтвердити Бронювання\"}\n                                    action={this.createOrder}\n                                    classList={[\"default-button\", \"button\"]}\n                                    iconName=\"\"\n                                    iconSvgSrc=\"\"\n                                />\n                            </div>\n\n                            <div className=\"ordersList cart\">\n                                <table className=\"table\">\n                                    <thead className=\"thead-dark\">\n                                        <tr>\n                                            <th>Назва Товару</th>\n                                            <th>Аптека</th>\n                                            <th>Ціна</th>\n                                            <th>Кількість</th>\n                                            <th></th>\n                                        </tr> \n                                    </thead>\n                                    <tbody>\n                                        {products.map( (product, index) => {\n                                            const { name, warehouse_id, price, count, id } = product\n                                            const warehouse = getWarehouseById(warehouse_id)\n                                            return (\n                                                <tr key={index}>\n                                                    <td>{name}</td>\n                                                    <td>{`№${warehouse_id} ${warehouse.address}`}</td>\n                                                    <td>{price}</td>\n                                                    <td>{count}</td>\n                                                    <td>\n                                                        <ActionButton\n                                                            text=\"Delete\"\n                                                            iconName=\"\"\n                                                            iconSvgSrc=\"\"\n                                                            classList={[]}\n                                                            action={() => {this.removeItemFromCart(id)}}\n                                                        />\n                                                    </td>\n                                                </tr>\n                                            )\n                                        })}\n                                    </tbody>\n                                </table>\n                            </div>\n\n                            {/* <div className=\"info\">\n                                <span className=\"text\">Мої Бронювання (2457.88 грн)</span>\n                                <ActionButton\n                                    text={\"Відмінити\"}\n                                    action={() => {}}\n                                    classList={[\"default-button\", \"button\"]}\n                                    iconName=\"\"\n                                    iconSvgSrc=\"\"\n                                />\n                            </div> */}\n\n                            {/* <div className=\"ordersList\">\n                                <table className=\"table\">\n                                    <thead className=\"thead-dark\">\n                                        <tr>\n                                            <th>Назва Товару</th>\n                                            <th>Аптека</th>\n                                            <th>Ціна</th>\n                                            <th>Кількість</th>\n                                            <th></th>\n                                        </tr> \n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>Стрепсілс б/цукру лимон льодяники №16</td>\n                                            <td>№12, Пасічна, 70</td>\n                                            <td>69.45</td>\n                                            <td>1</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Стрепсілс б/цукру лимон льодяники №16</td>\n                                            <td>№12, Пасічна, 70</td>\n                                            <td>69.45</td>\n                                            <td>1</td>\n                                            <td></td>\n                                        </tr>\n                                        <tr>\n                                            <td>Стрепсілс б/цукру лимон льодяники №16</td>\n                                            <td>№12, Пасічна, 70</td>\n                                            <td>69.45</td>\n                                            <td>1</td>\n                                            <td></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n                <InfoLayer {...infoLayerState}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)","import React from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport Breadcrumbp from '../components/Breadcrumbp'\nimport MainMenuSimple from '../components/MainMenuSimple'\nimport { mainMenuSimpleState } from '../redusers/initState'\nimport { IRegisterForm } from '../types';\nimport { changeRegisterFormField, cleanRegisterForm } from '../actions';\nimport { REGISTER_USER } from '../constants';\n\n\nconst mapStateToProps = (reducer:any) => {\n    const { RegisterReducer } = reducer\n    return {\n        ...RegisterReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        changeRegisterFormField: (payload:{name:string, value:string}) => {dispatch(changeRegisterFormField(payload))},\n        cleanRegisterForm: () => {dispatch(cleanRegisterForm())}\n    }\n}\n\n\nclass Register extends React.Component<IRegisterForm, IRegisterForm> {\n\n    constructor(props:IRegisterForm, state:IRegisterForm) {\n        super(props, state)\n\n        this.handleFieldChange = this.handleFieldChange.bind(this)\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\n        this.registerUser = this.registerUser.bind(this)\n    }\n\n    handleFieldChange(event:React.ChangeEvent<HTMLInputElement>) {\n        event.preventDefault()\n        const { changeRegisterFormField } = this.props\n        changeRegisterFormField({\n            name:event.target.name,\n            value:event.target.value\n        })\n    }\n\n    registerUser() {\n        const { name, email, cell, password, cleanRegisterForm } = this.props\n        axios.post(REGISTER_USER, {\n            fname:name, email, cell, password\n        })\n        .then((response) => {\n            if (response.status === 201) {\n                cleanRegisterForm()\n                window.location.href = \"/login\"\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {\n\n        })\n    }\n\n    handleFormSubmit(event:React.FormEvent<HTMLFormElement>) {\n        event.preventDefault()\n        this.registerUser()\n    }\n\n    render() {\n        const { name, email, cell, password } = this.props\n        return (\n            <div className=\"Register\">\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <div className=\"header\">\n                    <div className=\"content standart-container\">\n                        <h1 className=\"title\">Реєстрація</h1>\n                        <Breadcrumbp\n                            pages={[{\n                                name:\"Головна\",\n                                url:\"/\"\n                            },{\n                                name:\"Реєстрація\",\n                                url:null\n                            }]}\n                        />\n                    </div>\n                </div>\n                <div className=\"body standart-container\">\n                    <form className=\"form\" onSubmit={this.handleFormSubmit}>\n                        <div className=\"form-group\">\n                            <label>Ім’я</label>\n                            <input onChange={this.handleFieldChange} value={name} name=\"name\" type=\"text\" className=\"form-control\" id=\"inputName\" placeholder=\"\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Електронна Скринька</label>\n                            <input onChange={this.handleFieldChange} value={email} name=\"email\" type=\"email\" className=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Email\" />\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Контактний Номер</label>\n                            <input onChange={this.handleFieldChange} value={cell} type=\"text\" name=\"cell\" className=\"form-control\" id=\"inputCell\" placeholder=\"+38 000 000 00 00\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Пароль</label>\n                            <input onChange={this.handleFieldChange} value={password} type=\"password\" name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"********\" />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","import React from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport Breadcrumbp from '../components/Breadcrumbp'\nimport MainMenuSimple from '../components/MainMenuSimple'\nimport { mainMenuSimpleState } from '../redusers/initState'\nimport { ILoginForm } from '../types';\nimport { changeLoginFormField, cleanLoginForm } from '../actions';\nimport { LOGIN_URL } from '../constants';\n\n\nconst mapStateToProps = (reducer:any) => {\n    const { LoginReducer } = reducer\n    return {\n        ...LoginReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n    return {\n        changeLoginFormField: (payload:{name:string, value:string}) => {dispatch(changeLoginFormField(payload))},\n        cleanLoginForm: () => {dispatch(cleanLoginForm())}\n    }\n}\n\n\nclass Login extends React.Component<ILoginForm, ILoginForm> {\n\n    constructor(props:ILoginForm, state:ILoginForm) {\n        super(props, state)\n\n        this.handleFieldChange = this.handleFieldChange.bind(this)\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\n        this.loginUser = this.loginUser.bind(this)\n    }\n\n    handleFieldChange(event:React.ChangeEvent<HTMLInputElement>) {\n        event.preventDefault()\n        const { changeLoginFormField } = this.props\n        changeLoginFormField({\n            name:event.target.name,\n            value:event.target.value\n        })\n    }\n\n    loginUser() {\n        const { email, password, cleanLoginForm } = this.props\n        axios.post(LOGIN_URL, {\n            email, password\n        })\n        .then((response) => {\n            if (response.status === 200) {\n                console.log(response)\n                const { access, refresh } = response.data\n                localStorage.setItem(\"accessToken\", access)\n                localStorage.setItem(\"refreshToken\", refresh)\n                cleanLoginForm()\n                window.location.href = \"/\"\n            }\n        })\n        .catch((error) => {\n            console.log(\"ERROR\", error)\n        })\n        .finally(() => {\n\n        })\n    }\n\n    handleFormSubmit(event:React.FormEvent<HTMLFormElement>) {\n        event.preventDefault()\n        this.loginUser()\n    }\n\n    render() {\n        const { email, password } = this.props\n        return (\n            <div className=\"Register\">\n                <MainMenuSimple { ...mainMenuSimpleState }/>\n                <div className=\"header\">\n                    <div className=\"content standart-container\">\n                        <h1 className=\"title\">Вхід</h1>\n                        <Breadcrumbp\n                            pages={[{\n                                name:\"Головна\",\n                                url:\"/\"\n                            },{\n                                name:\"Вхід\",\n                                url:null\n                            }]}\n                        />\n                    </div>\n                </div>\n                <div className=\"body standart-container\">\n                    <form className=\"form\" onSubmit={this.handleFormSubmit}>\n                        <div className=\"form-group\">\n                            <label>Електронна Скринька</label>\n                            <input onChange={this.handleFieldChange} value={email} name=\"email\" type=\"email\" className=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Email\" />\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Пароль</label>\n                            <input onChange={this.handleFieldChange} value={password} type=\"password\" name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"********\" />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home';\nimport Search from './pages/Search';\nimport { \n  searchInitState,\n  topNavBarState,\n  homePageState,\n  footerBlockState,\n  profilePageState\n} from './redusers/initState'\nimport store from './store';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { IAction, IActionPayload, ICart, ITopNavBarState, IProfilePage } from './types'\nimport TopNavBar from './components/TopNavBar';\nimport BottomFooterBlock from './components/BottomFooterBlock';\nimport FooterBlock from './components/FooterBlock';\nimport NotFoundPage from './pages/NotFoundPage';\nimport Profile from './pages/Profile';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\n\n\nconst getProductsRequestSended:IAction = () => {\n  return {\n    type:\"\",action:{}\n  }\n}\n\nconst setProductsSuccess:IActionPayload = (products) => {\n  return {\n    type:\"\",action:products\n  }\n}\n\nconst App = () => {\n  // let newTopNavBarState:ITopNavBarState\n  // let newProfilePageState:IProfilePage\n\n  // const cartStateJsonStr = localStorage.getItem(\"cart\")\n  // if (cartStateJsonStr) {\n  //     const newCartState:ICart = JSON.parse(cartStateJsonStr)\n  //     console.log(\"cartState\", newCartState)\n  //     newTopNavBarState = {\n  //       ...topNavBarState,\n  //       cartOrdersCount:newCartState.products.length\n  //     }\n  //     newProfilePageState = {\n  //       ...profilePageState,\n  //       cartState: newCartState\n  //     }\n  // } else {\n  //   newTopNavBarState = {\n  //     ...topNavBarState\n  //   }\n  //   newProfilePageState = {\n  //     ...profilePageState\n  //   }\n  // }\n\n  return (\n    <div>\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <TopNavBar { ...topNavBarState } />\n            <Switch>\n              <Route path=\"/\" exact component={() => <Home {...homePageState}/>} />\n              <Route path=\"/search\" component={() =>\n                <Search\n                  {...searchInitState}\n                  getProductsRequestSended={getProductsRequestSended}\n                  setProductsSuccess={setProductsSuccess}\n                />\n              }/>\n              <Route path=\"/profile\" component={Profile} />\n              <Route path=\"/register\" component={Register}/>\n              <Route path=\"/login\" component={Login}/>\n              <Route path=\"/404\" exact component={() => <NotFoundPage {...homePageState}/>} />\n              <Redirect path=\"*\" to=\"/404\" />\n            </Switch>\n            <FooterBlock {...footerBlockState}/>\n            <BottomFooterBlock text={\"©2019 Аптека Знахар Львів\"}/>\n          </div>\n        </Router>\n      </Provider>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './App.css';\nimport './styles/index.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}